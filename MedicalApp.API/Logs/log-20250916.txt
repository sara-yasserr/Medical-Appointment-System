2025-09-16 00:56:54.138 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:03:58.917 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:05:00.144 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:06:06.988 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:06:28.039 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:06:46.878 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:07:33.572 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:08:16.210 +03:00 [DBG] Hosting starting
2025-09-16 01:08:16.480 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 01:08:16.496 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 01:08:16.526 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 01:08:16.527 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 01:08:16.527 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 01:08:16.527 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 01:08:16.738 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/ - null null
2025-09-16 01:08:16.942 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:08:16.942 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:08:17.363 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 01:08:17.365 +03:00 [INF] Hosting environment: Development
2025-09-16 01:08:17.366 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 01:08:17.366 +03:00 [DBG] Hosting started
2025-09-16 01:08:20.153 +03:00 [DBG] No candidates found for the request path '/'
2025-09-16 01:08:20.164 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:08:20.238 +03:00 [DBG] Connection ID "17726168139235852598" disconnecting.
2025-09-16 01:08:20.237 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/ - 404 null null 3509.2579ms
2025-09-16 01:08:20.269 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/, Response status code: 404
2025-09-16 01:08:52.202 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger - null null
2025-09-16 01:08:52.226 +03:00 [DBG] No candidates found for the request path '/swagger'
2025-09-16 01:08:52.226 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:08:52.228 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger - 404 null null 26.1311ms
2025-09-16 01:08:52.228 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/swagger, Response status code: 404
2025-09-16 01:08:59.778 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/swagger - null null
2025-09-16 01:08:59.782 +03:00 [DBG] No candidates found for the request path '/api/swagger'
2025-09-16 01:08:59.782 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:08:59.784 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/swagger - 404 null null 5.6236ms
2025-09-16 01:08:59.784 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/api/swagger, Response status code: 404
2025-09-16 01:09:57.549 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger - null null
2025-09-16 01:09:57.552 +03:00 [DBG] No candidates found for the request path '/swagger'
2025-09-16 01:09:57.552 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:09:57.552 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger - 404 null null 3.2798ms
2025-09-16 01:09:57.553 +03:00 [DBG] Connection ID "18086456118015426561" disconnecting.
2025-09-16 01:09:57.553 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/swagger, Response status code: 404
2025-09-16 01:10:49.651 +03:00 [DBG] Hosting starting
2025-09-16 01:10:50.057 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 01:10:50.065 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 01:10:50.108 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 01:10:50.109 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 01:10:50.109 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 01:10:50.110 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 01:10:50.305 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger - null null
2025-09-16 01:10:50.305 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/ - null null
2025-09-16 01:10:50.620 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:10:50.621 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:10:50.668 +03:00 [DBG] No candidates found for the request path '/swagger'
2025-09-16 01:10:50.668 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:10:50.669 +03:00 [DBG] No candidates found for the request path '/'
2025-09-16 01:10:50.669 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:10:50.731 +03:00 [DBG] Connection ID "17870283331606675485" disconnecting.
2025-09-16 01:10:50.731 +03:00 [DBG] Connection ID "17582052951159996417" disconnecting.
2025-09-16 01:10:50.734 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger - 404 null null 431.5027ms
2025-09-16 01:10:50.788 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/ - 404 null null 486.6401ms
2025-09-16 01:10:50.820 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/, Response status code: 404
2025-09-16 01:10:50.822 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/swagger, Response status code: 404
2025-09-16 01:10:51.004 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 01:10:51.017 +03:00 [INF] Hosting environment: Development
2025-09-16 01:10:51.017 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 01:10:51.018 +03:00 [DBG] Hosting started
2025-09-16 01:10:59.319 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger - null null
2025-09-16 01:10:59.330 +03:00 [DBG] No candidates found for the request path '/swagger'
2025-09-16 01:10:59.330 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:10:59.333 +03:00 [DBG] Connection ID "18158513712053354504" disconnecting.
2025-09-16 01:10:59.333 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger - 404 null null 14.4415ms
2025-09-16 01:10:59.334 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/swagger, Response status code: 404
2025-09-16 01:13:08.806 +03:00 [DBG] Hosting starting
2025-09-16 01:13:09.144 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 01:13:09.151 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 01:13:09.159 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 01:13:09.160 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 01:13:09.160 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 01:13:09.160 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 01:13:09.187 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/ - null null
2025-09-16 01:13:09.306 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:13:09.307 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:13:09.349 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:13:09.369 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:13:09.408 +03:00 [DBG] No candidates found for the request path '/Home/Error'
2025-09-16 01:13:09.409 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:13:09.411 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:13:09.411 +03:00 [ERR] An exception was thrown attempting to execute the error handler.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
2025-09-16 01:13:09.417 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.Invoke(HttpContext context)
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:13:09.487 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 01:13:09.488 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 01:13:09.489 +03:00 [INF] Hosting environment: Development
2025-09-16 01:13:09.489 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 01:13:09.489 +03:00 [DBG] Hosting started
2025-09-16 01:13:09.500 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 01:13:09.553 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 01:13:09.554 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 01:13:09.556 +03:00 [DBG] Connection ID "17654110540902957098" disconnecting.
2025-09-16 01:13:09.564 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/ - 500 null text/html; charset=utf-8 376.1046ms
2025-09-16 01:13:09.734 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 01:13:09.779 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 01:13:09.782 +03:00 [DBG] Connection ID "17798225737568747539" disconnecting.
2025-09-16 01:13:09.784 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.0163ms
2025-09-16 01:13:09.853 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger - null null
2025-09-16 01:13:09.865 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:13:09.866 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:13:09.868 +03:00 [DBG] No candidates found for the request path '/Home/Error'
2025-09-16 01:13:09.868 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:13:09.868 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:13:09.868 +03:00 [ERR] An exception was thrown attempting to execute the error handler.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
2025-09-16 01:13:09.880 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.Invoke(HttpContext context)
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:13:09.898 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 01:13:09.898 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 01:13:09.899 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 01:13:09.899 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 01:13:09.932 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger - 500 null text/html; charset=utf-8 79.11ms
2025-09-16 01:13:09.983 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 01:13:09.984 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 0.7729ms
2025-09-16 01:13:10.431 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 01:13:10.436 +03:00 [DBG] Connection ID "17654110545197924372" disconnecting.
2025-09-16 01:13:10.450 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 715.5926ms
2025-09-16 01:13:10.463 +03:00 [DBG] Connection ID "18230571306091282439" disconnecting.
2025-09-16 01:13:10.464 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.8502ms
2025-09-16 01:13:10.704 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/favicon.ico - null null
2025-09-16 01:13:10.704 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:13:10.705 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:13:10.739 +03:00 [DBG] No candidates found for the request path '/Home/Error'
2025-09-16 01:13:10.739 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:13:10.740 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:13:10.742 +03:00 [ERR] An exception was thrown attempting to execute the error handler.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
2025-09-16 01:13:10.760 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.Invoke(HttpContext context)
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:13:10.836 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/favicon.ico - 500 null text/plain; charset=utf-8 131.7781ms
2025-09-16 01:13:10.940 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/favicon.ico - null null
2025-09-16 01:13:10.942 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:13:10.943 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:13:10.945 +03:00 [DBG] No candidates found for the request path '/Home/Error'
2025-09-16 01:13:10.945 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:13:10.945 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:13:10.946 +03:00 [ERR] An exception was thrown attempting to execute the error handler.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
2025-09-16 01:13:10.951 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_2(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 53
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.HttpsPolicy.HstsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.Invoke(HttpContext context)
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:13:10.962 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/favicon.ico - 500 null text/plain; charset=utf-8 21.7733ms
2025-09-16 01:14:18.036 +03:00 [DBG] Hosting starting
2025-09-16 01:14:18.521 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 01:14:18.605 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 01:14:18.618 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 01:14:18.619 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 01:14:18.619 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 01:14:18.619 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 01:14:18.668 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/ - null null
2025-09-16 01:14:18.911 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:14:18.912 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:14:19.300 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 01:14:19.301 +03:00 [INF] Hosting environment: Development
2025-09-16 01:14:19.301 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 01:14:19.301 +03:00 [DBG] Hosting started
2025-09-16 01:14:19.702 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:14:19.746 +03:00 [DBG] No candidates found for the request path '/'
2025-09-16 01:14:19.746 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:14:19.782 +03:00 [DBG] Connection ID "17654110540902957113" disconnecting.
2025-09-16 01:14:19.779 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/ - 404 null null 1114.2576ms
2025-09-16 01:14:19.829 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/, Response status code: 404
2025-09-16 01:14:23.675 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger - null null
2025-09-16 01:14:23.681 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:14:23.701 +03:00 [DBG] Connection ID "17942340925644603463" disconnecting.
2025-09-16 01:14:23.702 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger - 301 null null 26.3096ms
2025-09-16 01:14:23.744 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 01:14:23.746 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:14:23.848 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 01:14:23.851 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 01:14:23.870 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 01:14:23.870 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 01:14:23.870 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 125.9749ms
2025-09-16 01:14:23.870 +03:00 [DBG] Connection ID "17942340925644603465" disconnecting.
2025-09-16 01:14:24.237 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.css - null null
2025-09-16 01:14:24.239 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:14:24.238 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/swagger-ui.css - null null
2025-09-16 01:14:24.249 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:14:24.252 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/swagger-ui-bundle.js - null null
2025-09-16 01:14:24.254 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:14:24.288 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 01:14:24.304 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 15.3302ms
2025-09-16 01:14:24.306 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/swagger-ui-standalone-preset.js - null null
2025-09-16 01:14:24.313 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:14:24.350 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.js - null null
2025-09-16 01:14:24.350 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:14:24.351 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.js - 200 null application/javascript;charset=utf-8 1.7576ms
2025-09-16 01:14:24.365 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.css - 200 152 text/css 127.7375ms
2025-09-16 01:14:24.372 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/swagger-ui.css - 200 23647 text/css 133.5646ms
2025-09-16 01:14:24.388 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/swagger-ui-standalone-preset.js - 200 70860 text/javascript 80.4009ms
2025-09-16 01:14:24.481 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 01:14:24.496 +03:00 [DBG] Connection ID "17582052951159996427" disconnecting.
2025-09-16 01:14:24.496 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/swagger-ui-bundle.js - 200 417980 text/javascript 244.1987ms
2025-09-16 01:14:24.551 +03:00 [DBG] Connection ID "17942340925644603467" disconnecting.
2025-09-16 01:14:24.552 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 99.2468ms
2025-09-16 01:14:24.931 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 01:14:24.931 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:14:24.931 +03:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-09-16 01:14:24.931 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:14:24.933 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 404 null null 2.2319ms
2025-09-16 01:14:24.933 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/swagger/v1/swagger.json, Response status code: 404
2025-09-16 01:14:24.970 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/favicon-32x32.png - null null
2025-09-16 01:14:24.970 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:14:24.982 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/favicon-32x32.png - 200 628 image/png 12.005ms
2025-09-16 01:16:04.828 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:16:05.114 +03:00 [DBG] Hosting starting
2025-09-16 01:16:05.287 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 01:16:05.307 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 01:16:05.323 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 01:16:05.325 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 01:16:05.325 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 01:16:05.325 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 01:16:05.342 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:16:05.343 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:16:05.393 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 01:16:05.577 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 01:16:05.578 +03:00 [INF] Hosting environment: Development
2025-09-16 01:16:05.578 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 01:16:05.578 +03:00 [DBG] Hosting started
2025-09-16 01:16:05.594 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:16:05.723 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 01:16:05.725 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 01:16:05.760 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 01:16:05.761 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 01:16:05.764 +03:00 [DBG] Connection ID "18158513712053354508" disconnecting.
2025-09-16 01:16:05.768 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 374.4349ms
2025-09-16 01:16:05.972 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 01:16:05.972 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 01:16:05.979 +03:00 [DBG] Connection ID "17798225737568747552" disconnecting.
2025-09-16 01:16:05.983 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 6.8946ms
2025-09-16 01:16:06.042 +03:00 [DBG] Connection ID "17726168143530819590" disconnecting.
2025-09-16 01:16:06.044 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 71.6917ms
2025-09-16 01:16:06.461 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 01:16:06.461 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:16:06.569 +03:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-09-16 01:16:06.570 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:16:06.595 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 404 null null 134.6475ms
2025-09-16 01:16:06.596 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/swagger/v1/swagger.json, Response status code: 404
2025-09-16 01:17:12.034 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:17:12.159 +03:00 [DBG] Hosting starting
2025-09-16 01:17:12.288 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 01:17:12.293 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 01:17:12.300 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 01:17:12.301 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 01:17:12.301 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 01:17:12.301 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 01:17:12.312 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:17:12.313 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:17:12.329 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 01:17:12.427 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 01:17:12.428 +03:00 [INF] Hosting environment: Development
2025-09-16 01:17:12.428 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 01:17:12.428 +03:00 [DBG] Hosting started
2025-09-16 01:17:12.455 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:17:12.692 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 01:17:12.695 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 01:17:12.855 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 01:17:12.856 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 01:17:12.858 +03:00 [DBG] Connection ID "17870283331606675502" disconnecting.
2025-09-16 01:17:12.905 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 01:17:12.911 +03:00 [DBG] Connection ID "17870283331606675504" disconnecting.
2025-09-16 01:17:12.912 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 01:17:12.860 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 533.4573ms
2025-09-16 01:17:12.909 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.157ms
2025-09-16 01:17:13.108 +03:00 [DBG] Connection ID "17942340925644603473" disconnecting.
2025-09-16 01:17:13.111 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 199.3255ms
2025-09-16 01:17:13.223 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 01:17:13.224 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:17:13.436 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 212.9773ms
2025-09-16 01:20:45.086 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Doctor/register - multipart/form-data; boundary=----WebKitFormBoundaryElpgBOIoB2y2bZ79 576
2025-09-16 01:20:45.087 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:20:45.125 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/register'
2025-09-16 01:20:45.126 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)' with route pattern 'api/Doctor/register' is valid for the request path '/api/Doctor/register'
2025-09-16 01:20:45.127 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:20:45.136 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:20:45.285 +03:00 [INF] Route matched with {action = "Register", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 01:20:45.300 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 01:20:45.300 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 01:20:45.301 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 01:20:45.301 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 01:20:45.301 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 01:20:45.303 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 01:20:45.308 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API) in 3.1461ms
2025-09-16 01:20:45.308 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:20:45.310 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Unable to resolve service for type 'MedicalApp.DA.UnitOfWorks.UnitOfWork' while attempting to activate 'MedicalApp.API.Controllers.DoctorController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method9(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-16 01:20:45.319 +03:00 [DBG] No candidates found for the request path '/Home/Error'
2025-09-16 01:20:45.320 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:20:45.320 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:20:45.320 +03:00 [DBG] No candidates found for the request path '/Home/Error'
2025-09-16 01:20:45.320 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:20:45.321 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The exception handler configured on ExceptionHandlerOptions produced a 404 status response. This InvalidOperationException containing the original exception was thrown since this is often due to a misconfigured ExceptionHandlingPath. If the exception handler is expected to return 404 status responses then set AllowStatusCode404Response to true.
 ---> System.InvalidOperationException: Unable to resolve service for type 'MedicalApp.DA.UnitOfWorks.UnitOfWork' while attempting to activate 'MedicalApp.API.Controllers.DoctorController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method9(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:20:45.332 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Doctor/register - 500 null text/plain; charset=utf-8 246.0726ms
2025-09-16 01:20:45.333 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: POST https://localhost:44358/api/Doctor/register, Response status code: 500
2025-09-16 01:26:07.743 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:26:07.910 +03:00 [DBG] Hosting starting
2025-09-16 01:26:08.146 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 01:26:08.152 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 01:26:08.158 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 01:26:08.158 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 01:26:08.159 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 01:26:08.159 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 01:26:08.169 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:26:08.170 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:26:08.179 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 01:26:08.274 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 01:26:08.275 +03:00 [INF] Hosting environment: Development
2025-09-16 01:26:08.275 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 01:26:08.275 +03:00 [DBG] Hosting started
2025-09-16 01:26:08.283 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:26:08.512 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 01:26:08.517 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 01:26:08.540 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 01:26:08.541 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 01:26:08.543 +03:00 [DBG] Connection ID "17582052951159996471" disconnecting.
2025-09-16 01:26:08.544 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 366.8519ms
2025-09-16 01:26:08.572 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 01:26:08.576 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 01:26:08.583 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 5.5079ms
2025-09-16 01:26:08.611 +03:00 [DBG] Connection ID "17582052951159996473" disconnecting.
2025-09-16 01:26:08.612 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.4521ms
2025-09-16 01:26:09.056 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 01:26:09.057 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:26:09.260 +03:00 [DBG] Connection ID "18014398523977498625" disconnecting.
2025-09-16 01:26:09.260 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 203.3416ms
2025-09-16 01:26:49.381 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Doctor/register - multipart/form-data; boundary=----WebKitFormBoundarypngJY3spEjLV3Kgg 577
2025-09-16 01:26:49.382 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:26:49.447 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/register'
2025-09-16 01:26:49.448 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)' with route pattern 'api/Doctor/register' is valid for the request path '/api/Doctor/register'
2025-09-16 01:26:49.450 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:26:49.462 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:26:49.519 +03:00 [INF] Route matched with {action = "Register", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 01:26:49.532 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 01:26:49.532 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 01:26:49.534 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 01:26:49.535 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 01:26:49.535 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 01:26:49.544 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 01:26:49.552 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API) in 11.9599ms
2025-09-16 01:26:49.557 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:26:49.561 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Unable to resolve service for type 'MedicalApp.DA.UnitOfWorks.UnitOfWork' while attempting to activate 'MedicalApp.API.Controllers.DoctorController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method9(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-09-16 01:26:49.576 +03:00 [DBG] No candidates found for the request path '/Home/Error'
2025-09-16 01:26:49.577 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:26:49.578 +03:00 [DBG] The host 'localhost' is excluded. Skipping HSTS header.
2025-09-16 01:26:49.578 +03:00 [DBG] No candidates found for the request path '/Home/Error'
2025-09-16 01:26:49.579 +03:00 [DBG] Request did not match any endpoints
2025-09-16 01:26:49.580 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The exception handler configured on ExceptionHandlerOptions produced a 404 status response. This InvalidOperationException containing the original exception was thrown since this is often due to a misconfigured ExceptionHandlingPath. If the exception handler is expected to return 404 status responses then set AllowStatusCode404Response to true.
 ---> System.InvalidOperationException: Unable to resolve service for type 'MedicalApp.DA.UnitOfWorks.UnitOfWork' while attempting to activate 'MedicalApp.API.Controllers.DoctorController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method9(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:26:49.599 +03:00 [DBG] Connection ID "18086456105130526502" disconnecting.
2025-09-16 01:26:49.599 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Doctor/register - 500 null text/plain; charset=utf-8 217.4754ms
2025-09-16 01:26:49.600 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: POST https://localhost:44358/api/Doctor/register, Response status code: 500
2025-09-16 01:27:27.170 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:27:27.533 +03:00 [DBG] Hosting starting
2025-09-16 01:27:27.632 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 01:27:27.635 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 01:27:27.639 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 01:27:27.640 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 01:27:27.640 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 01:27:27.640 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 01:27:27.653 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:27:27.654 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:27:27.681 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 01:27:27.898 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 01:27:27.900 +03:00 [INF] Hosting environment: Development
2025-09-16 01:27:27.900 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 01:27:27.900 +03:00 [DBG] Hosting started
2025-09-16 01:27:28.075 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 01:27:28.077 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 01:27:28.112 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 01:27:28.113 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 01:27:28.116 +03:00 [DBG] Connection ID "18230571306091282447" disconnecting.
2025-09-16 01:27:28.118 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 443.4956ms
2025-09-16 01:27:28.143 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 01:27:28.152 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 01:27:28.157 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.9184ms
2025-09-16 01:27:28.422 +03:00 [DBG] Connection ID "17509995352827101204" disconnecting.
2025-09-16 01:27:28.454 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 310.5133ms
2025-09-16 01:27:28.793 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 01:27:29.107 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 314.4215ms
2025-09-16 01:27:29.107 +03:00 [DBG] Connection ID "17509995352827101206" disconnecting.
2025-09-16 01:27:51.653 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Doctor/register - multipart/form-data; boundary=----WebKitFormBoundaryKvQK8qnb20VMAVJc 569
2025-09-16 01:27:51.717 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/register'
2025-09-16 01:27:51.728 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)' with route pattern 'api/Doctor/register' is valid for the request path '/api/Doctor/register'
2025-09-16 01:27:51.745 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:27:51.759 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:27:51.815 +03:00 [INF] Route matched with {action = "Register", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 01:27:51.818 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 01:27:51.818 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 01:27:51.820 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 01:27:51.820 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 01:27:51.821 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 01:27:51.827 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 01:27:51.832 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API) in 4.3519ms
2025-09-16 01:27:51.832 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:27:51.833 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Unable to resolve service for type 'MedicalApp.DA.UnitOfWorks.UnitOfWork' while attempting to activate 'MedicalApp.API.Controllers.DoctorController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method9(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:27:51.866 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Doctor/register - 500 null text/plain; charset=utf-8 213.7446ms
2025-09-16 01:27:51.867 +03:00 [DBG] Connection ID "17870283331606675523" disconnecting.
2025-09-16 01:29:22.196 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:29:22.319 +03:00 [DBG] Hosting starting
2025-09-16 01:29:22.507 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 01:29:22.605 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 01:29:22.639 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 01:29:22.640 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 01:29:22.640 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 01:29:22.640 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 01:29:22.660 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:29:22.669 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:29:22.693 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 01:29:22.925 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 01:29:22.926 +03:00 [INF] Hosting environment: Development
2025-09-16 01:29:22.926 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 01:29:22.926 +03:00 [DBG] Hosting started
2025-09-16 01:29:23.144 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 01:29:23.147 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 01:29:23.178 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 01:29:23.179 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 01:29:23.180 +03:00 [DBG] Connection ID "17726168134940885051" disconnecting.
2025-09-16 01:29:23.185 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 495.0369ms
2025-09-16 01:29:23.274 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 01:29:23.280 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 4.8516ms
2025-09-16 01:29:23.318 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 01:29:23.421 +03:00 [DBG] Connection ID "17798225737568747580" disconnecting.
2025-09-16 01:29:23.421 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 102.7572ms
2025-09-16 01:29:23.526 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 01:29:23.923 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 396.6783ms
2025-09-16 01:29:55.853 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Doctor/register - multipart/form-data; boundary=----WebKitFormBoundaryB4MFFdBJI3Ecdi3a 576
2025-09-16 01:29:55.890 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/register'
2025-09-16 01:29:55.893 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)' with route pattern 'api/Doctor/register' is valid for the request path '/api/Doctor/register'
2025-09-16 01:29:55.894 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:29:55.899 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:29:55.930 +03:00 [INF] Route matched with {action = "Register", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 01:29:55.933 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 01:29:55.934 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 01:29:55.935 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 01:29:55.935 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 01:29:55.936 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 01:29:55.938 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 01:29:56.770 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 01:29:56.988 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API) in 1047.5216ms
2025-09-16 01:29:56.989 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:29:56.993 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Unable to resolve service for type 'MedicalApp.DA.Repositories.Custom.DoctorRepository' while attempting to activate 'MedicalApp.API.Controllers.DoctorController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method9(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 01:29:57.012 +03:00 [DBG] Connection ID "18230571306091282457" disconnecting.
2025-09-16 01:29:57.014 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Doctor/register - 500 null text/plain; charset=utf-8 1161.0954ms
2025-09-16 01:31:03.394 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 01:31:03.535 +03:00 [DBG] Hosting starting
2025-09-16 01:31:03.778 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 01:31:03.784 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 01:31:03.797 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 01:31:03.798 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 01:31:03.798 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 01:31:03.798 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 01:31:03.814 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:31:03.814 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 01:31:03.839 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 01:31:04.005 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 01:31:04.006 +03:00 [INF] Hosting environment: Development
2025-09-16 01:31:04.006 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 01:31:04.006 +03:00 [DBG] Hosting started
2025-09-16 01:31:04.101 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 01:31:04.103 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 01:31:04.129 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 01:31:04.130 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 01:31:04.132 +03:00 [DBG] Connection ID "17726168139235852627" disconnecting.
2025-09-16 01:31:04.134 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 299.2643ms
2025-09-16 01:31:04.185 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 01:31:04.187 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 01:31:04.195 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 8.2781ms
2025-09-16 01:31:04.237 +03:00 [DBG] Connection ID "17726168134940885060" disconnecting.
2025-09-16 01:31:04.242 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 54.4202ms
2025-09-16 01:31:04.372 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 01:31:04.553 +03:00 [DBG] Connection ID "18158513712053354544" disconnecting.
2025-09-16 01:31:04.553 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 181.0003ms
2025-09-16 01:31:37.595 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Doctor/register - multipart/form-data; boundary=----WebKitFormBoundaryg6rnbUbJ5opNt1Ys 580
2025-09-16 01:31:37.631 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/register'
2025-09-16 01:31:37.635 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)' with route pattern 'api/Doctor/register' is valid for the request path '/api/Doctor/register'
2025-09-16 01:31:37.637 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:31:37.642 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:31:37.671 +03:00 [INF] Route matched with {action = "Register", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 01:31:37.674 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 01:31:37.674 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 01:31:37.675 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 01:31:37.675 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 01:31:37.676 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 01:31:37.677 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 01:31:37.802 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 01:31:38.323 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 01:31:38.324 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 01:31:38.345 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' ...
2025-09-16 01:31:38.348 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' using the name '' in request data ...
2025-09-16 01:31:38.354 +03:00 [DBG] Attempting to bind property 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO.FirstName' of type 'System.String' using the name 'FirstName' in request data ...
2025-09-16 01:31:38.355 +03:00 [DBG] Done attempting to bind property 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO.FirstName' of type 'System.String'.
2025-09-16 01:31:38.357 +03:00 [DBG] Attempting to bind property 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO.LastName' of type 'System.String' using the name 'LastName' in request data ...
2025-09-16 01:31:38.357 +03:00 [DBG] Done attempting to bind property 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO.LastName' of type 'System.String'.
2025-09-16 01:31:38.357 +03:00 [DBG] Attempting to bind property 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO.Specialization' of type 'System.String' using the name 'Specialization' in request data ...
2025-09-16 01:31:38.358 +03:00 [DBG] Done attempting to bind property 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO.Specialization' of type 'System.String'.
2025-09-16 01:31:38.358 +03:00 [DBG] Attempting to bind property 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO.Email' of type 'System.String' using the name 'Email' in request data ...
2025-09-16 01:31:38.370 +03:00 [DBG] Done attempting to bind property 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO.Email' of type 'System.String'.
2025-09-16 01:31:38.371 +03:00 [DBG] Attempting to bind property 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO.PhoneNumber' of type 'System.String' using the name 'PhoneNumber' in request data ...
2025-09-16 01:31:38.371 +03:00 [DBG] Done attempting to bind property 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO.PhoneNumber' of type 'System.String'.
2025-09-16 01:31:38.371 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 01:31:38.372 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 01:31:38.372 +03:00 [DBG] Attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' ...
2025-09-16 01:31:38.378 +03:00 [DBG] Done attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 01:31:40.212 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 01:31:40.613 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(c => c.Email == __email_0)'
2025-09-16 01:31:42.228 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Email (string) Required, 1], [Property: Doctor.FirstName (string) Required, 2], [Property: Doctor.LastName (string) Required, 3], [Property: Doctor.PhoneNumber (string) Required, 4], [Property: Doctor.Specialization (string) Required, 5] }
        SELECT TOP(1) d.Id, d.Email, d.FirstName, d.LastName, d.PhoneNumber, d.Specialization
        FROM Doctors AS d
        WHERE d.Email == @__email_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Email (string) Required, 1], [Property: Doctor.FirstName (string) Required, 2], [Property: Doctor.LastName (string) Required, 3], [Property: Doctor.PhoneNumber (string) Required, 4], [Property: Doctor.Specialization (string) Required, 5] }
        SELECT TOP(1) d.Id, d.Email, d.FirstName, d.LastName, d.PhoneNumber, d.Specialization
        FROM Doctors AS d
        WHERE d.Email == @__email_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<FirstName>k__BackingField = dataReader.GetString(2);
                                instance.<LastName>k__BackingField = dataReader.GetString(3);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(4);
                                instance.<Specialization>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 01:31:42.345 +03:00 [DBG] Creating DbConnection.
2025-09-16 01:31:42.436 +03:00 [DBG] Created DbConnection. (102ms).
2025-09-16 01:31:42.441 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:31:44.207 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:31:44.211 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 01:31:44.223 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-09-16 01:31:44.238 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (27ms).
2025-09-16 01:31:44.251 +03:00 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Email], [d].[FirstName], [d].[LastName], [d].[PhoneNumber], [d].[Specialization]
FROM [Doctors] AS [d]
WHERE [d].[Email] = @__email_0
2025-09-16 01:31:44.586 +03:00 [INF] Executed DbCommand (338ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Email], [d].[FirstName], [d].[LastName], [d].[PhoneNumber], [d].[Specialization]
FROM [Doctors] AS [d]
WHERE [d].[Email] = @__email_0
2025-09-16 01:31:44.600 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 01:31:44.609 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 16ms reading results.
2025-09-16 01:31:44.610 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:31:44.617 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (6ms).
2025-09-16 01:31:44.794 +03:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Doctor.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 01:31:44.860 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 01:31:44.863 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 01:31:44.866 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 01:31:44.875 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 01:31:44.966 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:31:44.967 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:31:44.968 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 01:31:44.968 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 01:31:44.969 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 01:31:44.969 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Doctors] ([Email], [FirstName], [LastName], [PhoneNumber], [Specialization])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-09-16 01:31:45.002 +03:00 [INF] Executed DbCommand (33ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Doctors] ([Email], [FirstName], [LastName], [PhoneNumber], [Specialization])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-09-16 01:31:45.017 +03:00 [DBG] The foreign key property 'Doctor.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-09-16 01:31:45.022 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 01:31:45.023 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 20ms reading results.
2025-09-16 01:31:45.023 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:31:45.024 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 01:31:45.035 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 01:31:45.036 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 01:31:45.040 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 01:31:45.043 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 01:31:45.043 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 01:31:45.043 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 01:31:45.045 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 01:31:45.045 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 01:31:45.059 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API) in 7378.2564ms
2025-09-16 01:31:45.059 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 01:31:45.062 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 01:31:45.067 +03:00 [DBG] Connection ID "17942340925644603486" disconnecting.
2025-09-16 01:31:45.072 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:31:45.075 +03:00 [DBG] Disposed connection to database '' on server '' (3ms).
2025-09-16 01:31:45.075 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Doctor/register - 200 null application/json; charset=utf-8 7480.0017ms
2025-09-16 01:32:15.095 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Patient/register - multipart/form-data; boundary=----WebKitFormBoundaryEL9rZcavMOsiFGAo 570
2025-09-16 01:32:15.096 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/register'
2025-09-16 01:32:15.096 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)' with route pattern 'api/Patient/register' is valid for the request path '/api/Patient/register'
2025-09-16 01:32:15.097 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 01:32:15.098 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 01:32:15.119 +03:00 [INF] Route matched with {action = "Register", controller = "Patient"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 01:32:15.119 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 01:32:15.119 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 01:32:15.119 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 01:32:15.119 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 01:32:15.119 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 01:32:15.120 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 01:32:15.127 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 01:32:15.129 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO' ...
2025-09-16 01:32:15.130 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO' using the name '' in request data ...
2025-09-16 01:32:15.131 +03:00 [DBG] Attempting to bind property 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO.FirstName' of type 'System.String' using the name 'FirstName' in request data ...
2025-09-16 01:32:15.131 +03:00 [DBG] Done attempting to bind property 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO.FirstName' of type 'System.String'.
2025-09-16 01:32:15.132 +03:00 [DBG] Attempting to bind property 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO.LastName' of type 'System.String' using the name 'LastName' in request data ...
2025-09-16 01:32:15.132 +03:00 [DBG] Done attempting to bind property 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO.LastName' of type 'System.String'.
2025-09-16 01:32:15.132 +03:00 [DBG] Attempting to bind property 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO.DateOfBirth' of type 'System.DateTime' using the name 'DateOfBirth' in request data ...
2025-09-16 01:32:15.150 +03:00 [DBG] Done attempting to bind property 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO.DateOfBirth' of type 'System.DateTime'.
2025-09-16 01:32:15.151 +03:00 [DBG] Attempting to bind property 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO.Email' of type 'System.String' using the name 'Email' in request data ...
2025-09-16 01:32:15.151 +03:00 [DBG] Done attempting to bind property 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO.Email' of type 'System.String'.
2025-09-16 01:32:15.151 +03:00 [DBG] Attempting to bind property 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO.PhoneNumber' of type 'System.String' using the name 'PhoneNumber' in request data ...
2025-09-16 01:32:15.151 +03:00 [DBG] Done attempting to bind property 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO.PhoneNumber' of type 'System.String'.
2025-09-16 01:32:15.152 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO'.
2025-09-16 01:32:15.152 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO'.
2025-09-16 01:32:15.152 +03:00 [DBG] Attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO' ...
2025-09-16 01:32:15.153 +03:00 [DBG] Done attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO'.
2025-09-16 01:32:15.252 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 01:32:15.272 +03:00 [DBG] Compiling query expression: 
'DbSet<Patient>()
    .FirstOrDefault(c => c.Email == __email_0)'
2025-09-16 01:32:15.300 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Patient>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.Email (string) Required, 2], [Property: Patient.FirstName (string) Required, 3], [Property: Patient.LastName (string) Required, 4], [Property: Patient.PhoneNumber (string) Required, 5] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.Email, p.FirstName, p.LastName, p.PhoneNumber
        FROM Patients AS p
        WHERE p.Email == @__email_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.Email (string) Required, 2], [Property: Patient.FirstName (string) Required, 3], [Property: Patient.LastName (string) Required, 4], [Property: Patient.PhoneNumber (string) Required, 5] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.Email, p.FirstName, p.LastName, p.PhoneNumber
        FROM Patients AS p
        WHERE p.Email == @__email_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Patient entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Patient instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Patient);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Patient.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Patient)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]: 
                        {
                            return (Patient)
                            {
                                PatientProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (PatientProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<DateOfBirth>k__BackingField = dataReader.GetDateTime(1);
                                instance.<Email>k__BackingField = dataReader.GetString(2);
                                instance.<FirstName>k__BackingField = dataReader.GetString(3);
                                instance.<LastName>k__BackingField = dataReader.GetString(4);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Patient)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 01:32:15.304 +03:00 [DBG] Creating DbConnection.
2025-09-16 01:32:15.306 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-16 01:32:15.306 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:32:15.307 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:32:15.307 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 01:32:15.307 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 01:32:15.307 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 01:32:15.307 +03:00 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Email] = @__email_0
2025-09-16 01:32:15.362 +03:00 [INF] Executed DbCommand (55ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Email] = @__email_0
2025-09-16 01:32:15.363 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 01:32:15.363 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 01:32:15.363 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:32:15.363 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 01:32:15.368 +03:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Patient.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 01:32:15.395 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 01:32:15.395 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 01:32:15.396 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 01:32:15.401 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 01:32:15.403 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:32:15.403 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:32:15.403 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 01:32:15.403 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 01:32:15.404 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 01:32:15.404 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Patients] ([DateOfBirth], [Email], [FirstName], [LastName], [PhoneNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-09-16 01:32:15.451 +03:00 [INF] Executed DbCommand (47ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Patients] ([DateOfBirth], [Email], [FirstName], [LastName], [PhoneNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-09-16 01:32:15.453 +03:00 [DBG] The foreign key property 'Patient.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-09-16 01:32:15.453 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 01:32:15.454 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 2ms reading results.
2025-09-16 01:32:15.454 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:32:15.454 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 01:32:15.460 +03:00 [DBG] An entity of type 'Patient' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 01:32:15.460 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 01:32:15.461 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 01:32:15.461 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 01:32:15.461 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 01:32:15.461 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 01:32:15.462 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 01:32:15.462 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 01:32:15.463 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API) in 343.1354ms
2025-09-16 01:32:15.463 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 01:32:15.463 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 01:32:15.463 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 01:32:15.464 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 01:32:15.464 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Patient/register - 200 null application/json; charset=utf-8 369.4581ms
2025-09-16 02:08:11.716 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 02:08:11.949 +03:00 [DBG] Hosting starting
2025-09-16 02:08:12.091 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 02:08:12.098 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 02:08:12.122 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 02:08:12.123 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 02:08:12.123 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 02:08:12.123 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 02:08:12.139 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 02:08:12.140 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 02:08:12.178 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 02:08:12.333 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 02:08:12.335 +03:00 [INF] Hosting environment: Development
2025-09-16 02:08:12.335 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 02:08:12.335 +03:00 [DBG] Hosting started
2025-09-16 02:08:12.500 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 02:08:12.503 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 02:08:12.535 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 02:08:12.535 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 02:08:12.538 +03:00 [DBG] Connection ID "17726168134940885068" disconnecting.
2025-09-16 02:08:12.540 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 368.4723ms
2025-09-16 02:08:12.755 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 02:08:12.755 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 02:08:12.762 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 4.8851ms
2025-09-16 02:08:12.809 +03:00 [DBG] Connection ID "17365880164751245313" disconnecting.
2025-09-16 02:08:12.811 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 55.1992ms
2025-09-16 02:08:13.402 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 02:08:13.606 +03:00 [DBG] Connection ID "18086456118015426591" disconnecting.
2025-09-16 02:08:13.606 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 203.8777ms
2025-09-16 02:08:37.359 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - null null
2025-09-16 02:08:37.427 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/details/1'
2025-09-16 02:08:37.429 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)' with route pattern 'api/Doctor/details/{id:int}' is valid for the request path '/api/Doctor/details/1'
2025-09-16 02:08:37.431 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 02:08:37.444 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 02:08:37.483 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 02:08:37.498 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 02:08:37.499 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 02:08:37.500 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 02:08:37.501 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 02:08:37.501 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 02:08:37.515 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:08:37.961 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 02:08:38.416 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 02:08:38.417 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:08:38.440 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 02:08:38.479 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 02:08:38.480 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:08:38.481 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:08:38.481 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 02:08:38.496 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 02:08:41.677 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 02:08:41.879 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 02:08:42.905 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Email (string) Required, 1], [Property: Doctor.FirstName (string) Required, 2], [Property: Doctor.LastName (string) Required, 3], [Property: Doctor.PhoneNumber (string) Required, 4], [Property: Doctor.Specialization (string) Required, 5] }
        SELECT TOP(1) d.Id, d.Email, d.FirstName, d.LastName, d.PhoneNumber, d.Specialization
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Email (string) Required, 1], [Property: Doctor.FirstName (string) Required, 2], [Property: Doctor.LastName (string) Required, 3], [Property: Doctor.PhoneNumber (string) Required, 4], [Property: Doctor.Specialization (string) Required, 5] }
        SELECT TOP(1) d.Id, d.Email, d.FirstName, d.LastName, d.PhoneNumber, d.Specialization
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<FirstName>k__BackingField = dataReader.GetString(2);
                                instance.<LastName>k__BackingField = dataReader.GetString(3);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(4);
                                instance.<Specialization>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 02:08:42.998 +03:00 [DBG] Creating DbConnection.
2025-09-16 02:08:43.032 +03:00 [DBG] Created DbConnection. (32ms).
2025-09-16 02:08:43.039 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:08:44.036 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:08:44.038 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:08:44.045 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-16 02:08:44.054 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-09-16 02:08:44.063 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Email], [d].[FirstName], [d].[LastName], [d].[PhoneNumber], [d].[Specialization]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 02:08:44.239 +03:00 [INF] Executed DbCommand (175ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Email], [d].[FirstName], [d].[LastName], [d].[PhoneNumber], [d].[Specialization]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 02:08:44.326 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:08:44.365 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:08:44.382 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 135ms reading results.
2025-09-16 02:08:44.389 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:08:44.395 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (5ms).
2025-09-16 02:08:44.398 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 02:08:44.406 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 02:08:44.407 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 02:08:44.407 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 02:08:44.409 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 02:08:44.410 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.DoctorProxy'.
2025-09-16 02:08:44.437 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API) in 6927.0842ms
2025-09-16 02:08:44.438 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 02:08:44.442 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 02:08:44.447 +03:00 [DBG] Connection ID "17798225737568747611" disconnecting.
2025-09-16 02:08:44.475 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:08:44.479 +03:00 [DBG] Disposed connection to database '' on server '' (3ms).
2025-09-16 02:08:44.480 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - 200 null application/json; charset=utf-8 7121.4286ms
2025-09-16 02:09:21.508 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/1 - application/json 154
2025-09-16 02:09:21.519 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/1'
2025-09-16 02:09:21.519 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/1'
2025-09-16 02:09:21.519 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 02:09:21.522 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 02:09:21.537 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 02:09:21.537 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 02:09:21.537 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 02:09:21.538 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 02:09:21.538 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 02:09:21.538 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 02:09:21.538 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:09:21.545 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:09:21.546 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 02:09:21.546 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 02:09:21.547 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:09:21.547 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:09:21.547 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 02:09:21.547 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 02:09:21.547 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' ...
2025-09-16 02:09:21.548 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' using the name '' in request data ...
2025-09-16 02:09:21.550 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 02:09:21.569 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'
2025-09-16 02:09:21.569 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 02:09:21.569 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 02:09:21.569 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' ...
2025-09-16 02:09:21.588 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 02:09:21.855 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 02:09:21.865 +03:00 [DBG] Compiling query expression: 
'DbSet<Patient>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 02:09:21.898 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Patient>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.Email (string) Required, 2], [Property: Patient.FirstName (string) Required, 3], [Property: Patient.LastName (string) Required, 4], [Property: Patient.PhoneNumber (string) Required, 5] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.Email, p.FirstName, p.LastName, p.PhoneNumber
        FROM Patients AS p
        WHERE p.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.Email (string) Required, 2], [Property: Patient.FirstName (string) Required, 3], [Property: Patient.LastName (string) Required, 4], [Property: Patient.PhoneNumber (string) Required, 5] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.Email, p.FirstName, p.LastName, p.PhoneNumber
        FROM Patients AS p
        WHERE p.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Patient entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Patient instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Patient);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Patient.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Patient)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]: 
                        {
                            return (Patient)
                            {
                                PatientProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (PatientProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<DateOfBirth>k__BackingField = dataReader.GetDateTime(1);
                                instance.<Email>k__BackingField = dataReader.GetString(2);
                                instance.<FirstName>k__BackingField = dataReader.GetString(3);
                                instance.<LastName>k__BackingField = dataReader.GetString(4);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Patient)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 02:09:21.904 +03:00 [DBG] Creating DbConnection.
2025-09-16 02:09:21.905 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 02:09:21.905 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:09:21.906 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:09:21.907 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:09:21.907 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:09:21.907 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:09:21.907 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:09:21.996 +03:00 [INF] Executed DbCommand (88ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:09:22.003 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:09:22.020 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:09:22.020 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 24ms reading results.
2025-09-16 02:09:22.021 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:09:22.021 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 02:09:22.037 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 498.9456ms
2025-09-16 02:09:22.039 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 02:09:22.040 +03:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.

Mapping types:
DoctorRegisterDTO -> PatientProxy
MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO -> Castle.Proxies.PatientProxy
   at lambda_method116(Closure, DoctorRegisterDTO, Patient, ResolutionContext)
   at MedicalApp.API.Controllers.DoctorController.Update(Int32 id, DoctorRegisterDTO updateDTO) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Controllers\DoctorController.cs:line 75
   at lambda_method63(Closure, Object, Object[])
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 02:09:22.113 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 02:09:22.118 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:09:22.118 +03:00 [DBG] Connection ID "17870283331606675695" disconnecting.
2025-09-16 02:09:22.118 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 02:09:22.119 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/1 - 500 null text/plain; charset=utf-8 610.6264ms
2025-09-16 02:12:06.121 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 02:12:06.354 +03:00 [DBG] Hosting starting
2025-09-16 02:12:06.549 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 02:12:06.563 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 02:12:06.569 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 02:12:06.569 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 02:12:06.569 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 02:12:06.569 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 02:12:06.581 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 02:12:06.581 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 02:12:06.595 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 02:12:06.723 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 02:12:06.723 +03:00 [INF] Hosting environment: Development
2025-09-16 02:12:06.724 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 02:12:06.724 +03:00 [DBG] Hosting started
2025-09-16 02:12:06.907 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 02:12:06.909 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 02:12:06.944 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 02:12:06.945 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 02:12:06.948 +03:00 [DBG] Connection ID "17654110545197924387" disconnecting.
2025-09-16 02:12:06.949 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 357.1589ms
2025-09-16 02:12:07.108 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 02:12:07.108 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 02:12:07.122 +03:00 [DBG] Connection ID "17365880169046212609" disconnecting.
2025-09-16 02:12:07.124 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 6.7348ms
2025-09-16 02:12:07.192 +03:00 [DBG] Connection ID "17654110545197924389" disconnecting.
2025-09-16 02:12:07.193 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 85.4139ms
2025-09-16 02:12:08.530 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 02:12:08.931 +03:00 [DBG] Connection ID "17654110545197924391" disconnecting.
2025-09-16 02:12:08.931 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 400.6219ms
2025-09-16 02:12:17.834 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - null null
2025-09-16 02:12:17.880 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/details/1'
2025-09-16 02:12:17.886 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)' with route pattern 'api/Doctor/details/{id:int}' is valid for the request path '/api/Doctor/details/1'
2025-09-16 02:12:17.887 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 02:12:17.892 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 02:12:17.914 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 02:12:17.921 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 02:12:17.921 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 02:12:17.922 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 02:12:17.922 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 02:12:17.922 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 02:12:17.924 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:12:18.112 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 02:12:18.606 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 02:12:18.607 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:12:18.685 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 02:12:18.692 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 02:12:18.693 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:12:18.694 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:12:18.694 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 02:12:18.704 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 02:12:20.203 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 02:12:20.324 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 02:12:21.052 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Email (string) Required, 1], [Property: Doctor.FirstName (string) Required, 2], [Property: Doctor.LastName (string) Required, 3], [Property: Doctor.PhoneNumber (string) Required, 4], [Property: Doctor.Specialization (string) Required, 5] }
        SELECT TOP(1) d.Id, d.Email, d.FirstName, d.LastName, d.PhoneNumber, d.Specialization
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Email (string) Required, 1], [Property: Doctor.FirstName (string) Required, 2], [Property: Doctor.LastName (string) Required, 3], [Property: Doctor.PhoneNumber (string) Required, 4], [Property: Doctor.Specialization (string) Required, 5] }
        SELECT TOP(1) d.Id, d.Email, d.FirstName, d.LastName, d.PhoneNumber, d.Specialization
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<FirstName>k__BackingField = dataReader.GetString(2);
                                instance.<LastName>k__BackingField = dataReader.GetString(3);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(4);
                                instance.<Specialization>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 02:12:21.192 +03:00 [DBG] Creating DbConnection.
2025-09-16 02:12:21.224 +03:00 [DBG] Created DbConnection. (27ms).
2025-09-16 02:12:21.227 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:12:21.772 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:12:21.776 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:12:21.785 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-09-16 02:12:21.793 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (17ms).
2025-09-16 02:12:21.804 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Email], [d].[FirstName], [d].[LastName], [d].[PhoneNumber], [d].[Specialization]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 02:12:21.856 +03:00 [INF] Executed DbCommand (52ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Email], [d].[FirstName], [d].[LastName], [d].[PhoneNumber], [d].[Specialization]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 02:12:21.900 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:12:21.924 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:12:21.933 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 70ms reading results.
2025-09-16 02:12:21.935 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:12:21.942 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (6ms).
2025-09-16 02:12:21.944 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 02:12:21.949 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 02:12:21.949 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 02:12:21.950 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 02:12:21.951 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 02:12:21.951 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.DoctorProxy'.
2025-09-16 02:12:21.969 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API) in 4038.3531ms
2025-09-16 02:12:21.969 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 02:12:21.970 +03:00 [DBG] Connection ID "18086456105130526526" disconnecting.
2025-09-16 02:12:21.972 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 02:12:21.987 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:12:21.990 +03:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-09-16 02:12:21.991 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - 200 null application/json; charset=utf-8 4157.0495ms
2025-09-16 02:12:47.601 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/1 - application/json 153
2025-09-16 02:12:47.604 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/1'
2025-09-16 02:12:47.604 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/1'
2025-09-16 02:12:47.605 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 02:12:47.610 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 02:12:47.619 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 02:12:47.620 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 02:12:47.620 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 02:12:47.622 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 02:12:47.622 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 02:12:47.626 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 02:12:47.627 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:12:47.633 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:12:47.634 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 02:12:47.635 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 02:12:47.635 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:12:47.635 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:12:47.635 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 02:12:47.636 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 02:12:47.636 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' ...
2025-09-16 02:12:47.637 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' using the name '' in request data ...
2025-09-16 02:12:47.640 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 02:12:47.664 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'
2025-09-16 02:12:47.665 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 02:12:47.665 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 02:12:47.665 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' ...
2025-09-16 02:12:47.684 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 02:12:47.830 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 02:12:47.835 +03:00 [DBG] Compiling query expression: 
'DbSet<Patient>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 02:12:47.868 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Patient>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.Email (string) Required, 2], [Property: Patient.FirstName (string) Required, 3], [Property: Patient.LastName (string) Required, 4], [Property: Patient.PhoneNumber (string) Required, 5] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.Email, p.FirstName, p.LastName, p.PhoneNumber
        FROM Patients AS p
        WHERE p.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.Email (string) Required, 2], [Property: Patient.FirstName (string) Required, 3], [Property: Patient.LastName (string) Required, 4], [Property: Patient.PhoneNumber (string) Required, 5] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.Email, p.FirstName, p.LastName, p.PhoneNumber
        FROM Patients AS p
        WHERE p.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Patient entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Patient instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Patient);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Patient.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Patient)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]: 
                        {
                            return (Patient)
                            {
                                PatientProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (PatientProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<DateOfBirth>k__BackingField = dataReader.GetDateTime(1);
                                instance.<Email>k__BackingField = dataReader.GetString(2);
                                instance.<FirstName>k__BackingField = dataReader.GetString(3);
                                instance.<LastName>k__BackingField = dataReader.GetString(4);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Patient)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 02:12:47.875 +03:00 [DBG] Creating DbConnection.
2025-09-16 02:12:47.877 +03:00 [DBG] Created DbConnection. (1ms).
2025-09-16 02:12:47.877 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:12:47.879 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:12:47.879 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:12:47.880 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:12:47.880 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:12:47.880 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:12:47.906 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:12:47.919 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:12:47.944 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:12:47.945 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 37ms reading results.
2025-09-16 02:12:47.945 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:12:47.945 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 02:12:47.977 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 350.2505ms
2025-09-16 02:12:47.978 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 02:12:47.979 +03:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.

Mapping types:
DoctorRegisterDTO -> PatientProxy
MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO -> Castle.Proxies.PatientProxy
   at lambda_method116(Closure, DoctorRegisterDTO, Patient, ResolutionContext)
   at MedicalApp.API.Controllers.DoctorController.Update(Int32 id, DoctorRegisterDTO updateDTO) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Controllers\DoctorController.cs:line 75
   at lambda_method63(Closure, Object, Object[])
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 02:12:48.002 +03:00 [DBG] Connection ID "17365880164751245322" disconnecting.
2025-09-16 02:12:48.002 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 02:12:48.008 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:12:48.008 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 02:12:48.009 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/1 - 500 null text/plain; charset=utf-8 407.9872ms
2025-09-16 02:13:53.794 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 02:13:53.908 +03:00 [DBG] Hosting starting
2025-09-16 02:13:53.989 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 02:13:53.996 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 02:13:54.002 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 02:13:54.002 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 02:13:54.002 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 02:13:54.002 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 02:13:54.015 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 02:13:54.016 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 02:13:54.032 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 02:13:54.242 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 02:13:54.243 +03:00 [INF] Hosting environment: Development
2025-09-16 02:13:54.243 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 02:13:54.243 +03:00 [DBG] Hosting started
2025-09-16 02:13:54.480 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 02:13:54.483 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 02:13:54.583 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 02:13:54.583 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 02:13:54.586 +03:00 [DBG] Connection ID "17365880164751245336" disconnecting.
2025-09-16 02:13:54.744 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 02:13:54.621 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 575.4645ms
2025-09-16 02:13:54.763 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 5.5976ms
2025-09-16 02:13:54.769 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 02:13:54.865 +03:00 [DBG] Connection ID "17365880164751245338" disconnecting.
2025-09-16 02:13:54.869 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 99.123ms
2025-09-16 02:13:55.138 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 02:13:55.468 +03:00 [DBG] Connection ID "17798225737568747639" disconnecting.
2025-09-16 02:13:55.469 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 330.8829ms
2025-09-16 02:14:10.945 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/1 - application/json 152
2025-09-16 02:14:11.029 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/1'
2025-09-16 02:14:11.030 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/1'
2025-09-16 02:14:11.032 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 02:14:11.046 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 02:14:11.077 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 02:14:11.081 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 02:14:11.081 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 02:14:11.082 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 02:14:11.082 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 02:14:11.083 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 02:14:11.085 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:14:11.234 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 02:14:11.432 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 02:14:11.434 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:14:11.444 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 02:14:11.447 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 02:14:11.448 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:14:11.448 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:14:11.448 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 02:14:11.455 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 02:14:11.458 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' ...
2025-09-16 02:14:11.459 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' using the name '' in request data ...
2025-09-16 02:14:11.461 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 02:14:11.527 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'
2025-09-16 02:14:11.528 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 02:14:11.528 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 02:14:11.532 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO' ...
2025-09-16 02:14:11.628 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorRegisterDTO'.
2025-09-16 02:14:13.491 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 02:14:13.809 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 02:14:15.126 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Email (string) Required, 1], [Property: Doctor.FirstName (string) Required, 2], [Property: Doctor.LastName (string) Required, 3], [Property: Doctor.PhoneNumber (string) Required, 4], [Property: Doctor.Specialization (string) Required, 5] }
        SELECT TOP(1) d.Id, d.Email, d.FirstName, d.LastName, d.PhoneNumber, d.Specialization
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Email (string) Required, 1], [Property: Doctor.FirstName (string) Required, 2], [Property: Doctor.LastName (string) Required, 3], [Property: Doctor.PhoneNumber (string) Required, 4], [Property: Doctor.Specialization (string) Required, 5] }
        SELECT TOP(1) d.Id, d.Email, d.FirstName, d.LastName, d.PhoneNumber, d.Specialization
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<FirstName>k__BackingField = dataReader.GetString(2);
                                instance.<LastName>k__BackingField = dataReader.GetString(3);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(4);
                                instance.<Specialization>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 02:14:15.247 +03:00 [DBG] Creating DbConnection.
2025-09-16 02:14:15.311 +03:00 [DBG] Created DbConnection. (54ms).
2025-09-16 02:14:15.315 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:15.990 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:15.993 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:14:15.999 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-16 02:14:16.008 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (16ms).
2025-09-16 02:14:16.021 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Email], [d].[FirstName], [d].[LastName], [d].[PhoneNumber], [d].[Specialization]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 02:14:16.116 +03:00 [INF] Executed DbCommand (74ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Email], [d].[FirstName], [d].[LastName], [d].[PhoneNumber], [d].[Specialization]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 02:14:16.277 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:14:16.306 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:14:16.314 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 193ms reading results.
2025-09-16 02:14:16.315 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:16.323 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (7ms).
2025-09-16 02:14:16.349 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:14:16.352 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 02:14:16.389 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 02:14:16.405 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 02:14:16.560 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:16.561 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:16.564 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:14:16.564 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:14:16.565 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 02:14:16.566 +03:00 [DBG] Executing DbCommand [Parameters=[@p5='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Email] = @p0, [FirstName] = @p1, [LastName] = @p2, [PhoneNumber] = @p3, [Specialization] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2025-09-16 02:14:16.678 +03:00 [INF] Executed DbCommand (112ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Email] = @p0, [FirstName] = @p1, [LastName] = @p2, [PhoneNumber] = @p3, [Specialization] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2025-09-16 02:14:16.683 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:14:16.683 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 5ms reading results.
2025-09-16 02:14:16.686 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:16.686 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 02:14:16.690 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:14:16.692 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 02:14:16.693 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-09-16 02:14:16.703 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 5610.9694ms
2025-09-16 02:14:16.703 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 02:14:16.709 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 02:14:16.713 +03:00 [DBG] Connection ID "18086456118015426594" disconnecting.
2025-09-16 02:14:16.720 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:16.724 +03:00 [DBG] Disposed connection to database '' on server '' (5ms).
2025-09-16 02:14:16.725 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/1 - 200 null null 5780.4065ms
2025-09-16 02:14:26.370 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - null null
2025-09-16 02:14:26.374 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/details/1'
2025-09-16 02:14:26.375 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)' with route pattern 'api/Doctor/details/{id:int}' is valid for the request path '/api/Doctor/details/1'
2025-09-16 02:14:26.375 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 02:14:26.377 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 02:14:26.381 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 02:14:26.381 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 02:14:26.382 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 02:14:26.401 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 02:14:26.402 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 02:14:26.402 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 02:14:26.402 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:14:26.406 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 02:14:26.407 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 02:14:26.408 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 02:14:26.408 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:14:26.408 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:14:26.408 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 02:14:26.408 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 02:14:26.528 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 02:14:26.573 +03:00 [DBG] Creating DbConnection.
2025-09-16 02:14:26.573 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 02:14:26.573 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:26.574 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:26.574 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:14:26.574 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:14:26.574 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:14:26.574 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Email], [d].[FirstName], [d].[LastName], [d].[PhoneNumber], [d].[Specialization]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 02:14:26.580 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Email], [d].[FirstName], [d].[LastName], [d].[PhoneNumber], [d].[Specialization]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 02:14:26.585 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:14:26.586 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:14:26.587 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 5ms reading results.
2025-09-16 02:14:26.587 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:26.587 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 02:14:26.591 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 02:14:26.594 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 02:14:26.594 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 02:14:26.594 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 02:14:26.596 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 02:14:26.596 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.DoctorProxy'.
2025-09-16 02:14:26.613 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API) in 210.5048ms
2025-09-16 02:14:26.613 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 02:14:26.613 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 02:14:26.614 +03:00 [DBG] Connection ID "18086456118015426596" disconnecting.
2025-09-16 02:14:26.614 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:26.614 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 02:14:26.621 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - 200 null application/json; charset=utf-8 250.8746ms
2025-09-16 02:14:40.641 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Patient/details/1 - null null
2025-09-16 02:14:40.642 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/details/1'
2025-09-16 02:14:40.642 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)' with route pattern 'api/Patient/details/{id:int}' is valid for the request path '/api/Patient/details/1'
2025-09-16 02:14:40.642 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 02:14:40.651 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 02:14:40.656 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 02:14:40.657 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 02:14:40.657 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 02:14:40.657 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 02:14:40.657 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 02:14:40.657 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 02:14:40.657 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 02:14:40.704 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 02:14:40.704 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 02:14:40.704 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 02:14:40.704 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:14:40.704 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:14:40.704 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 02:14:40.705 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 02:14:40.770 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 02:14:40.776 +03:00 [DBG] Compiling query expression: 
'DbSet<Patient>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 02:14:40.838 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Patient>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.Email (string) Required, 2], [Property: Patient.FirstName (string) Required, 3], [Property: Patient.LastName (string) Required, 4], [Property: Patient.PhoneNumber (string) Required, 5] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.Email, p.FirstName, p.LastName, p.PhoneNumber
        FROM Patients AS p
        WHERE p.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.Email (string) Required, 2], [Property: Patient.FirstName (string) Required, 3], [Property: Patient.LastName (string) Required, 4], [Property: Patient.PhoneNumber (string) Required, 5] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.Email, p.FirstName, p.LastName, p.PhoneNumber
        FROM Patients AS p
        WHERE p.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Patient entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Patient instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Patient);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Patient.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Patient)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]: 
                        {
                            return (Patient)
                            {
                                PatientProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (PatientProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<DateOfBirth>k__BackingField = dataReader.GetDateTime(1);
                                instance.<Email>k__BackingField = dataReader.GetString(2);
                                instance.<FirstName>k__BackingField = dataReader.GetString(3);
                                instance.<LastName>k__BackingField = dataReader.GetString(4);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Patient)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 02:14:40.847 +03:00 [DBG] Creating DbConnection.
2025-09-16 02:14:40.848 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 02:14:40.848 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:40.849 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:40.849 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:14:40.849 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:14:40.850 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:14:40.850 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:14:40.876 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:14:40.892 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:14:40.924 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:14:40.924 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 48ms reading results.
2025-09-16 02:14:40.924 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:40.925 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 02:14:40.925 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 02:14:40.926 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 02:14:40.926 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 02:14:40.926 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 02:14:40.934 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 02:14:40.934 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.PatientProxy'.
2025-09-16 02:14:41.034 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API) in 376.7642ms
2025-09-16 02:14:41.034 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 02:14:41.035 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 02:14:41.040 +03:00 [DBG] Connection ID "17798225737568747645" disconnecting.
2025-09-16 02:14:41.040 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:14:41.041 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 02:14:41.041 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Patient/details/1 - 200 null application/json; charset=utf-8 399.7272ms
2025-09-16 02:15:02.603 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Patient/update/1 - application/json 152
2025-09-16 02:15:02.621 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/update/1'
2025-09-16 02:15:02.621 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)' with route pattern 'api/Patient/update/{id:int}' is valid for the request path '/api/Patient/update/1'
2025-09-16 02:15:02.621 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 02:15:02.621 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 02:15:02.647 +03:00 [INF] Route matched with {action = "Update", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 02:15:02.647 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 02:15:02.647 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 02:15:02.647 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 02:15:02.647 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 02:15:02.647 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 02:15:02.647 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 02:15:02.735 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 02:15:02.735 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 02:15:02.735 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 02:15:02.736 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:15:02.736 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:15:02.736 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 02:15:02.736 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 02:15:02.736 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO' ...
2025-09-16 02:15:02.736 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO' using the name '' in request data ...
2025-09-16 02:15:02.737 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 02:15:02.760 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO'
2025-09-16 02:15:02.760 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO'.
2025-09-16 02:15:02.760 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO'.
2025-09-16 02:15:02.760 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO' ...
2025-09-16 02:15:02.764 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientRegisterDTO'.
2025-09-16 02:15:02.765 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 02:15:02.766 +03:00 [DBG] Creating DbConnection.
2025-09-16 02:15:02.766 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 02:15:02.766 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:02.766 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:02.766 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:15:02.766 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:15:02.766 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:15:02.766 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:15:02.783 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:15:02.784 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:15:02.784 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:15:02.784 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 02:15:02.784 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:02.784 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 02:15:02.786 +03:00 [DBG] An entity of type 'Patient' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:15:02.787 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 02:15:02.787 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 02:15:02.788 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 02:15:02.799 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:02.799 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:02.799 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:15:02.799 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:15:02.800 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:15:02.800 +03:00 [DBG] Executing DbCommand [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Patients] SET [DateOfBirth] = @p0, [Email] = @p1, [FirstName] = @p2, [LastName] = @p3, [PhoneNumber] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2025-09-16 02:15:02.870 +03:00 [INF] Executed DbCommand (70ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Patients] SET [DateOfBirth] = @p0, [Email] = @p1, [FirstName] = @p2, [LastName] = @p3, [PhoneNumber] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2025-09-16 02:15:02.870 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:15:02.871 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 02:15:02.871 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:02.871 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 02:15:02.873 +03:00 [DBG] An entity of type 'Patient' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:15:02.873 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 02:15:02.876 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-09-16 02:15:02.876 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API) in 229.1539ms
2025-09-16 02:15:02.876 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 02:15:02.877 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 02:15:02.877 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:02.877 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 02:15:02.878 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Patient/update/1 - 200 null null 274.5649ms
2025-09-16 02:15:17.208 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Patient/details/1 - null null
2025-09-16 02:15:17.208 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/details/1'
2025-09-16 02:15:17.208 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)' with route pattern 'api/Patient/details/{id:int}' is valid for the request path '/api/Patient/details/1'
2025-09-16 02:15:17.208 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 02:15:17.209 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 02:15:17.209 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 02:15:17.209 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 02:15:17.209 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 02:15:17.209 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 02:15:17.209 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 02:15:17.209 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 02:15:17.209 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 02:15:17.210 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 02:15:17.211 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 02:15:17.211 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 02:15:17.211 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:15:17.211 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:15:17.211 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 02:15:17.211 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 02:15:17.213 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 02:15:17.214 +03:00 [DBG] Creating DbConnection.
2025-09-16 02:15:17.214 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 02:15:17.214 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:17.214 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:17.217 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:15:17.217 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:15:17.217 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:15:17.217 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:15:17.247 +03:00 [INF] Executed DbCommand (30ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:15:17.248 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:15:17.248 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:15:17.248 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 02:15:17.248 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:17.248 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 02:15:17.248 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 02:15:17.249 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 02:15:17.249 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 02:15:17.249 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 02:15:17.249 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 02:15:17.249 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.PatientProxy'.
2025-09-16 02:15:17.249 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API) in 40.2417ms
2025-09-16 02:15:17.249 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 02:15:17.249 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 02:15:17.250 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:17.250 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 02:15:17.250 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Patient/details/1 - 200 null application/json; charset=utf-8 41.8348ms
2025-09-16 02:15:17.625 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Patient/details/1 - null null
2025-09-16 02:15:17.625 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/details/1'
2025-09-16 02:15:17.625 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)' with route pattern 'api/Patient/details/{id:int}' is valid for the request path '/api/Patient/details/1'
2025-09-16 02:15:17.625 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 02:15:17.625 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 02:15:17.626 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 02:15:17.626 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 02:15:17.626 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 02:15:17.626 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 02:15:17.626 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 02:15:17.626 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 02:15:17.626 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 02:15:17.626 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 02:15:17.626 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 02:15:17.626 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 02:15:17.626 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:15:17.626 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 02:15:17.626 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 02:15:17.626 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 02:15:17.628 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 02:15:17.629 +03:00 [DBG] Creating DbConnection.
2025-09-16 02:15:17.629 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 02:15:17.629 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:17.630 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:17.630 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 02:15:17.630 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:15:17.630 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 02:15:17.630 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:15:17.641 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[Email], [p].[FirstName], [p].[LastName], [p].[PhoneNumber]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 02:15:17.641 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 02:15:17.641 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 02:15:17.642 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 02:15:17.642 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:17.642 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 02:15:17.642 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 02:15:17.642 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 02:15:17.642 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 02:15:17.642 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 02:15:17.642 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 02:15:17.642 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.PatientProxy'.
2025-09-16 02:15:17.642 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API) in 16.5173ms
2025-09-16 02:15:17.642 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 02:15:17.643 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 02:15:17.643 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 02:15:17.643 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 02:15:17.643 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Patient/details/1 - 200 null application/json; charset=utf-8 17.8064ms
2025-09-16 02:16:49.571 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 02:16:50.007 +03:00 [DBG] Hosting starting
2025-09-16 02:16:50.157 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 02:16:50.164 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 02:16:50.189 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 02:16:50.190 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 02:16:50.191 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 02:16:50.191 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 02:16:50.209 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 02:16:50.211 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 02:16:50.240 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 02:16:50.494 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 02:16:50.500 +03:00 [INF] Hosting environment: Development
2025-09-16 02:16:50.500 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 02:16:50.500 +03:00 [DBG] Hosting started
2025-09-16 02:16:50.751 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 02:16:50.755 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 02:16:50.803 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 02:16:50.804 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 02:16:50.807 +03:00 [DBG] Connection ID "17726168139235852838" disconnecting.
2025-09-16 02:16:50.810 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 574.3843ms
2025-09-16 02:16:50.959 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 02:16:50.959 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 02:16:50.970 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 8.214ms
2025-09-16 02:16:51.172 +03:00 [DBG] Connection ID "17437937758789173278" disconnecting.
2025-09-16 02:16:51.217 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 251.7804ms
2025-09-16 02:16:51.703 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 02:16:52.024 +03:00 [DBG] Connection ID "17437937758789173280" disconnecting.
2025-09-16 02:16:52.023 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 319.9818ms
2025-09-16 02:17:15.943 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 02:17:16.212 +03:00 [DBG] Hosting starting
2025-09-16 02:17:16.342 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 02:17:16.351 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 02:17:16.360 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 02:17:16.362 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 02:17:16.362 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 02:17:16.362 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 02:17:16.381 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 02:17:16.382 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 02:17:16.400 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 02:17:16.545 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 02:17:16.550 +03:00 [INF] Hosting environment: Development
2025-09-16 02:17:16.550 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 02:17:16.550 +03:00 [DBG] Hosting started
2025-09-16 02:17:16.760 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 02:17:16.762 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 02:17:16.793 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 02:17:16.794 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 02:17:16.796 +03:00 [DBG] Connection ID "17365880164751245365" disconnecting.
2025-09-16 02:17:16.798 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 401.42ms
2025-09-16 02:17:16.844 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 02:17:16.848 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 02:17:16.852 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.2448ms
2025-09-16 02:17:16.898 +03:00 [DBG] Connection ID "17365880164751245367" disconnecting.
2025-09-16 02:17:16.899 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 55.0218ms
2025-09-16 02:17:19.812 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 02:17:20.099 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 287.1333ms
2025-09-16 06:10:53.677 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 06:10:53.900 +03:00 [DBG] Hosting starting
2025-09-16 06:10:54.116 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 06:10:54.121 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 06:10:54.143 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 06:10:54.144 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 06:10:54.144 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 06:10:54.144 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 06:10:54.158 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 06:10:54.159 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 06:10:54.187 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/ - null null
2025-09-16 06:10:54.322 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 06:10:54.323 +03:00 [INF] Hosting environment: Development
2025-09-16 06:10:54.323 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 06:10:54.323 +03:00 [DBG] Hosting started
2025-09-16 06:10:54.653 +03:00 [DBG] No candidates found for the request path '/'
2025-09-16 06:10:54.654 +03:00 [DBG] Request did not match any endpoints
2025-09-16 06:10:54.680 +03:00 [DBG] Connection ID "17509995357122068861" disconnecting.
2025-09-16 06:10:54.682 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/ - 404 null null 499.0956ms
2025-09-16 06:10:54.706 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/, Response status code: 404
2025-09-16 06:11:52.468 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 06:11:52.685 +03:00 [DBG] Hosting starting
2025-09-16 06:11:52.778 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 06:11:52.782 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 06:11:52.788 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 06:11:52.789 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 06:11:52.789 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 06:11:52.789 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 06:11:52.797 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 06:11:52.798 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 06:11:52.810 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/ - null null
2025-09-16 06:11:52.904 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 06:11:52.905 +03:00 [INF] Hosting environment: Development
2025-09-16 06:11:52.906 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 06:11:52.906 +03:00 [DBG] Hosting started
2025-09-16 06:11:52.952 +03:00 [DBG] No candidates found for the request path '/'
2025-09-16 06:11:52.952 +03:00 [DBG] Request did not match any endpoints
2025-09-16 06:11:52.967 +03:00 [DBG] Connection ID "17942340929939570829" disconnecting.
2025-09-16 06:11:52.991 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/ - 404 null null 160.7883ms
2025-09-16 06:11:53.097 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/, Response status code: 404
2025-09-16 06:12:19.922 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 06:12:20.160 +03:00 [DBG] Hosting starting
2025-09-16 06:12:20.285 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 06:12:20.289 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 06:12:20.293 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 06:12:20.294 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 06:12:20.294 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 06:12:20.294 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 06:12:20.303 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 06:12:20.304 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 06:12:20.317 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/ - null null
2025-09-16 06:12:20.389 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 06:12:20.390 +03:00 [INF] Hosting environment: Development
2025-09-16 06:12:20.390 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 06:12:20.390 +03:00 [DBG] Hosting started
2025-09-16 06:12:20.474 +03:00 [DBG] No candidates found for the request path '/'
2025-09-16 06:12:20.474 +03:00 [DBG] Request did not match any endpoints
2025-09-16 06:12:20.489 +03:00 [DBG] Connection ID "18086456105130526878" disconnecting.
2025-09-16 06:12:20.492 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/ - 404 null null 177.6647ms
2025-09-16 06:12:20.514 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/, Response status code: 404
2025-09-16 06:32:42.201 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 06:32:43.078 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 06:32:43.081 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 06:32:43.591 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 06:32:43.665 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 06:33:00.736 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 06:33:01.273 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 06:33:01.274 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 06:33:01.573 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 06:33:03.233 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 06:33:17.835 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 06:33:18.665 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 06:33:18.668 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 06:33:18.942 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 06:33:19.141 +03:00 [DBG] Creating DbConnection.
2025-09-16 06:33:19.428 +03:00 [DBG] Created DbConnection. (260ms).
2025-09-16 06:33:19.453 +03:00 [DBG] Migrating using database 'MedicalAppDB' on server '.'.
2025-09-16 06:33:19.462 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:33:19.928 +03:00 [DBG] An error occurred using the connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:33:19.983 +03:00 [DBG] Creating DbConnection.
2025-09-16 06:33:19.984 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 06:33:19.984 +03:00 [DBG] Opening connection to database 'master' on server '.'.
2025-09-16 06:33:19.998 +03:00 [DBG] Opened connection to database 'master' on server '.'.
2025-09-16 06:33:20.002 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:20.008 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (5ms).
2025-09-16 06:33:20.009 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (9ms).
2025-09-16 06:33:20.014 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [MedicalAppDB];
2025-09-16 06:33:21.192 +03:00 [INF] Executed DbCommand (1,165ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [MedicalAppDB];
2025-09-16 06:33:21.194 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:21.194 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:21.194 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:21.195 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [MedicalAppDB] SET READ_COMMITTED_SNAPSHOT ON;
END;
2025-09-16 06:33:21.418 +03:00 [INF] Executed DbCommand (224ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [MedicalAppDB] SET READ_COMMITTED_SNAPSHOT ON;
END;
2025-09-16 06:33:21.420 +03:00 [DBG] Closing connection to database 'master' on server '.'.
2025-09-16 06:33:21.430 +03:00 [DBG] Closed connection to database 'master' on server '.' (5ms).
2025-09-16 06:33:21.433 +03:00 [DBG] Disposing connection to database 'master' on server '.'.
2025-09-16 06:33:21.434 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 06:33:21.434 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:33:21.443 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:33:21.444 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:21.444 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:21.444 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:21.444 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 06:33:21.453 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 06:33:21.453 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:33:21.454 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 06:33:21.454 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:33:21.455 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:33:21.456 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-16 06:33:21.459 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 06:33:21.459 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 06:33:21.459 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 06:33:21.460 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-16 06:33:21.559 +03:00 [INF] Executed DbCommand (99ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-16 06:33:21.695 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 06:33:21.707 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 06:33:21.708 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:21.708 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:21.709 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-16 06:33:21.709 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-16 06:33:21.844 +03:00 [INF] Executed DbCommand (135ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-16 06:33:21.846 +03:00 [DBG] Committing transaction.
2025-09-16 06:33:21.858 +03:00 [DBG] Committed transaction.
2025-09-16 06:33:21.860 +03:00 [DBG] Disposing transaction.
2025-09-16 06:33:21.862 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 06:33:21.863 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 06:33:21.864 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:21.865 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:21.865 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:21.865 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 06:33:21.866 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 06:33:21.867 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 06:33:21.868 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 06:33:21.868 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 06:33:21.868 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-16 06:33:21.887 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-16 06:33:21.890 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 06:33:21.891 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 06:33:21.892 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 06:33:21.893 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-16 06:33:21.927 +03:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-16 06:33:21.933 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 06:33:21.937 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 6ms reading results.
2025-09-16 06:33:21.948 +03:00 [INF] Applying migration '20250916033303_init'.
2025-09-16 06:33:22.078 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:22.078 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.078 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.078 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);
2025-09-16 06:33:22.100 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);
2025-09-16 06:33:22.101 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:22.101 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.101 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.101 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUsers] (
    [Id] nvarchar(450) NOT NULL,
    [FirstName] nvarchar(max) NOT NULL,
    [LastName] nvarchar(max) NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);
2025-09-16 06:33:22.128 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUsers] (
    [Id] nvarchar(450) NOT NULL,
    [FirstName] nvarchar(max) NOT NULL,
    [LastName] nvarchar(max) NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);
2025-09-16 06:33:22.128 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:22.128 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.128 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.128 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:22.140 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:22.450 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:22.450 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.450 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.450 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:22.503 +03:00 [INF] Executed DbCommand (53ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:22.503 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:22.503 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.503 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.503 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:22.511 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:22.511 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:22.511 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.511 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:22.511 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:22.518 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:22.519 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:22.519 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:23.553 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (1033ms).
2025-09-16 06:33:23.553 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserTokens] (
    [UserId] nvarchar(450) NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:23.564 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserTokens] (
    [UserId] nvarchar(450) NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:23.564 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:23.564 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:23.564 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:23.564 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Doctors] (
    [Id] int NOT NULL IDENTITY,
    [Specialization] nvarchar(max) NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Doctors] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Doctors_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:23.603 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Doctors] (
    [Id] int NOT NULL IDENTITY,
    [Specialization] nvarchar(max) NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Doctors] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Doctors_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:23.604 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:23.604 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:23.604 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:23.604 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Patients] (
    [Id] int NOT NULL IDENTITY,
    [DateOfBirth] datetime2 NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Patients] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Patients_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:23.621 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Patients] (
    [Id] int NOT NULL IDENTITY,
    [DateOfBirth] datetime2 NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Patients] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Patients_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:23.621 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:33:23.622 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:23.622 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:33:23.622 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Appointments] (
    [Id] int NOT NULL IDENTITY,
    [AppointmentDate] datetime2 NOT NULL,
    [Reason] nvarchar(max) NOT NULL,
    [Status] int NOT NULL,
    [PatientId] int NOT NULL,
    [DoctorId] int NOT NULL,
    CONSTRAINT [PK_Appointments] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Appointments_Doctors_DoctorId] FOREIGN KEY ([DoctorId]) REFERENCES [Doctors] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Appointments_Patients_PatientId] FOREIGN KEY ([PatientId]) REFERENCES [Patients] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:23.842 +03:00 [ERR] Failed executing DbCommand (218ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Appointments] (
    [Id] int NOT NULL IDENTITY,
    [AppointmentDate] datetime2 NOT NULL,
    [Reason] nvarchar(max) NOT NULL,
    [Status] int NOT NULL,
    [PatientId] int NOT NULL,
    [DoctorId] int NOT NULL,
    CONSTRAINT [PK_Appointments] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Appointments_Doctors_DoctorId] FOREIGN KEY ([DoctorId]) REFERENCES [Doctors] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Appointments_Patients_PatientId] FOREIGN KEY ([PatientId]) REFERENCES [Patients] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:33:24.827 +03:00 [DBG] Disposing transaction.
2025-09-16 06:33:24.831 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 06:33:24.831 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 06:33:24.831 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 06:33:24.831 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-16 06:33:24.921 +03:00 [INF] Executed DbCommand (90ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-16 06:33:24.922 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:33:24.923 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (1ms).
2025-09-16 06:33:24.926 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 06:33:24.927 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:33:24.927 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 06:44:44.785 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 06:44:45.615 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 06:44:45.618 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 06:44:46.069 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 06:44:48.782 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 06:45:08.085 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 06:45:08.631 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 06:45:08.632 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 06:45:08.956 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 06:45:09.261 +03:00 [DBG] Creating DbConnection.
2025-09-16 06:45:09.474 +03:00 [DBG] Created DbConnection. (199ms).
2025-09-16 06:45:09.487 +03:00 [DBG] Migrating using database 'MedicalAppDB' on server '.'.
2025-09-16 06:45:09.500 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:45:10.537 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:45:10.545 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:10.560 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (10ms).
2025-09-16 06:45:10.565 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (23ms).
2025-09-16 06:45:10.579 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 06:45:10.646 +03:00 [INF] Executed DbCommand (63ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 06:45:10.649 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:45:10.666 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (5ms).
2025-09-16 06:45:10.667 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:45:10.668 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:45:10.670 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-16 06:45:10.677 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 06:45:10.678 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-09-16 06:45:10.678 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-09-16 06:45:10.679 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-16 06:45:10.767 +03:00 [INF] Executed DbCommand (88ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-16 06:45:11.000 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 06:45:11.007 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 06:45:11.009 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:11.009 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.011 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-16 06:45:11.012 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-16 06:45:11.020 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-16 06:45:11.023 +03:00 [DBG] Committing transaction.
2025-09-16 06:45:11.034 +03:00 [DBG] Committed transaction.
2025-09-16 06:45:11.036 +03:00 [DBG] Disposing transaction.
2025-09-16 06:45:11.040 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 06:45:11.047 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 06:45:11.049 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:11.049 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.049 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.049 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 06:45:11.052 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 06:45:11.053 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 06:45:11.053 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 06:45:11.053 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 06:45:11.054 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-16 06:45:11.061 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-16 06:45:11.063 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 06:45:11.063 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 06:45:11.063 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 06:45:11.064 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-16 06:45:11.169 +03:00 [INF] Executed DbCommand (105ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-16 06:45:11.175 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 06:45:11.180 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 6ms reading results.
2025-09-16 06:45:11.190 +03:00 [INF] Applying migration '20250916033303_init'.
2025-09-16 06:45:11.305 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:11.305 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.305 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.310 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);
2025-09-16 06:45:11.432 +03:00 [INF] Executed DbCommand (127ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);
2025-09-16 06:45:11.433 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:11.433 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.433 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.433 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUsers] (
    [Id] nvarchar(450) NOT NULL,
    [FirstName] nvarchar(max) NOT NULL,
    [LastName] nvarchar(max) NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);
2025-09-16 06:45:11.477 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUsers] (
    [Id] nvarchar(450) NOT NULL,
    [FirstName] nvarchar(max) NOT NULL,
    [LastName] nvarchar(max) NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);
2025-09-16 06:45:11.478 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:11.478 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.478 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.478 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:11.483 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:11.483 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:11.483 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.483 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.483 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:11.895 +03:00 [INF] Executed DbCommand (412ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:11.896 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:11.896 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.896 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.896 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:11.912 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:11.912 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:11.912 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.912 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.912 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:11.926 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:11.926 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:11.927 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.927 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:11.927 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserTokens] (
    [UserId] nvarchar(450) NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:11.931 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserTokens] (
    [UserId] nvarchar(450) NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:13.066 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:13.067 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:13.067 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:13.067 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Doctors] (
    [Id] int NOT NULL IDENTITY,
    [Specialization] nvarchar(max) NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Doctors] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Doctors_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:13.073 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Doctors] (
    [Id] int NOT NULL IDENTITY,
    [Specialization] nvarchar(max) NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Doctors] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Doctors_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:13.073 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:13.073 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:13.074 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:13.074 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Patients] (
    [Id] int NOT NULL IDENTITY,
    [DateOfBirth] datetime2 NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Patients] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Patients_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:13.079 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Patients] (
    [Id] int NOT NULL IDENTITY,
    [DateOfBirth] datetime2 NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Patients] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Patients_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 06:45:13.080 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:13.080 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:13.080 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:13.080 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Appointments] (
    [Id] int NOT NULL IDENTITY,
    [AppointmentDate] datetime2 NOT NULL,
    [Reason] nvarchar(max) NOT NULL,
    [Status] int NOT NULL,
    [PatientId] int NOT NULL,
    [DoctorId] int NOT NULL,
    CONSTRAINT [PK_Appointments] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Appointments_Doctors_DoctorId] FOREIGN KEY ([DoctorId]) REFERENCES [Doctors] ([Id]),
    CONSTRAINT [FK_Appointments_Patients_PatientId] FOREIGN KEY ([PatientId]) REFERENCES [Patients] ([Id])
);
2025-09-16 06:45:13.125 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Appointments] (
    [Id] int NOT NULL IDENTITY,
    [AppointmentDate] datetime2 NOT NULL,
    [Reason] nvarchar(max) NOT NULL,
    [Status] int NOT NULL,
    [PatientId] int NOT NULL,
    [DoctorId] int NOT NULL,
    CONSTRAINT [PK_Appointments] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Appointments_Doctors_DoctorId] FOREIGN KEY ([DoctorId]) REFERENCES [Doctors] ([Id]),
    CONSTRAINT [FK_Appointments_Patients_PatientId] FOREIGN KEY ([PatientId]) REFERENCES [Patients] ([Id])
);
2025-09-16 06:45:13.125 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:13.125 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:13.125 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:13.125 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_DoctorId] ON [Appointments] ([DoctorId]);
2025-09-16 06:45:14.194 +03:00 [INF] Executed DbCommand (1,068ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_DoctorId] ON [Appointments] ([DoctorId]);
2025-09-16 06:45:14.194 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:14.194 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.194 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.194 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_PatientId] ON [Appointments] ([PatientId]);
2025-09-16 06:45:14.215 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_PatientId] ON [Appointments] ([PatientId]);
2025-09-16 06:45:14.216 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:14.216 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.216 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.217 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetRoleClaims_RoleId] ON [AspNetRoleClaims] ([RoleId]);
2025-09-16 06:45:14.225 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetRoleClaims_RoleId] ON [AspNetRoleClaims] ([RoleId]);
2025-09-16 06:45:14.225 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:14.226 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.226 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.226 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [RoleNameIndex] ON [AspNetRoles] ([NormalizedName]) WHERE [NormalizedName] IS NOT NULL;
2025-09-16 06:45:14.229 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [RoleNameIndex] ON [AspNetRoles] ([NormalizedName]) WHERE [NormalizedName] IS NOT NULL;
2025-09-16 06:45:14.229 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:14.229 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.229 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.229 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserClaims_UserId] ON [AspNetUserClaims] ([UserId]);
2025-09-16 06:45:14.233 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserClaims_UserId] ON [AspNetUserClaims] ([UserId]);
2025-09-16 06:45:14.233 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:14.233 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.233 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.233 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserLogins_UserId] ON [AspNetUserLogins] ([UserId]);
2025-09-16 06:45:14.237 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserLogins_UserId] ON [AspNetUserLogins] ([UserId]);
2025-09-16 06:45:14.237 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:14.237 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.237 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.237 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserRoles_RoleId] ON [AspNetUserRoles] ([RoleId]);
2025-09-16 06:45:14.241 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserRoles_RoleId] ON [AspNetUserRoles] ([RoleId]);
2025-09-16 06:45:14.241 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:14.241 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.241 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:14.241 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [EmailIndex] ON [AspNetUsers] ([NormalizedEmail]);
2025-09-16 06:45:14.244 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [EmailIndex] ON [AspNetUsers] ([NormalizedEmail]);
2025-09-16 06:45:15.613 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:15.613 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:15.613 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:15.613 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [UserNameIndex] ON [AspNetUsers] ([NormalizedUserName]) WHERE [NormalizedUserName] IS NOT NULL;
2025-09-16 06:45:15.671 +03:00 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [UserNameIndex] ON [AspNetUsers] ([NormalizedUserName]) WHERE [NormalizedUserName] IS NOT NULL;
2025-09-16 06:45:15.671 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:15.672 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:15.672 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-16 06:45:15.673 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Doctors_UserId] ON [Doctors] ([UserId]);
2025-09-16 06:45:15.687 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Doctors_UserId] ON [Doctors] ([UserId]);
2025-09-16 06:45:15.687 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:15.687 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:15.687 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:15.687 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Patients_UserId] ON [Patients] ([UserId]);
2025-09-16 06:45:15.696 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Patients_UserId] ON [Patients] ([UserId]);
2025-09-16 06:45:15.696 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:15.696 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:15.696 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:15.697 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916033303_init', N'9.0.9');
2025-09-16 06:45:15.768 +03:00 [INF] Executed DbCommand (71ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916033303_init', N'9.0.9');
2025-09-16 06:45:15.768 +03:00 [INF] Applying migration '20250916034448_v1'.
2025-09-16 06:45:15.790 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 06:45:15.790 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:15.790 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 06:45:15.790 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916034448_v1', N'9.0.9');
2025-09-16 06:45:15.794 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916034448_v1', N'9.0.9');
2025-09-16 06:45:15.795 +03:00 [DBG] Committing transaction.
2025-09-16 06:45:15.802 +03:00 [DBG] Committed transaction.
2025-09-16 06:45:15.803 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 06:45:15.803 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 06:45:15.803 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 06:45:15.803 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-16 06:45:15.817 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-16 06:45:15.818 +03:00 [DBG] Disposing transaction.
2025-09-16 06:45:15.818 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:45:15.819 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (1ms).
2025-09-16 06:45:15.825 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 06:45:15.828 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 06:45:15.831 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 06:48:56.797 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 06:48:57.022 +03:00 [DBG] Hosting starting
2025-09-16 06:48:57.053 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 06:48:57.070 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 06:48:57.092 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 06:48:57.097 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 06:48:57.107 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 06:48:57.113 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 06:48:57.118 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 06:48:57.120 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 06:48:57.121 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 06:48:57.126 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 06:48:57.129 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 06:48:57.132 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 06:48:57.134 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 06:48:57.180 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 06:48:57.181 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 06:48:57.236 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 06:48:57.236 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 06:48:57.236 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 06:48:57.236 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 06:48:57.269 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 06:48:57.270 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 06:48:57.281 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/ - null null
2025-09-16 06:48:57.384 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 06:48:57.384 +03:00 [INF] Hosting environment: Development
2025-09-16 06:48:57.385 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 06:48:57.385 +03:00 [DBG] Hosting started
2025-09-16 06:48:59.705 +03:00 [DBG] No candidates found for the request path '/'
2025-09-16 06:48:59.706 +03:00 [DBG] Request did not match any endpoints
2025-09-16 06:48:59.719 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 06:48:59.731 +03:00 [DBG] Connection ID "17509995357122068964" disconnecting.
2025-09-16 06:48:59.734 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/ - 404 null null 2453.1804ms
2025-09-16 06:48:59.752 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/, Response status code: 404
2025-09-16 06:49:06.281 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 06:49:06.312 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 06:49:06.323 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 40.6265ms
2025-09-16 06:49:06.423 +03:00 [DBG] Connection ID "17437937758789173287" disconnecting.
2025-09-16 06:49:06.425 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 112.8255ms
2025-09-16 06:49:06.523 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 06:49:06.704 +03:00 [DBG] Connection ID "17726168143530819603" disconnecting.
2025-09-16 06:49:06.704 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 180.3226ms
2025-09-16 07:12:41.889 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 07:12:42.093 +03:00 [DBG] Hosting starting
2025-09-16 07:12:42.106 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 07:12:42.119 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 07:12:42.127 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 07:12:42.131 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 07:12:42.136 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 07:12:42.141 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 07:12:42.144 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 07:12:42.147 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 07:12:42.149 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 07:12:42.153 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 07:12:42.156 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 07:12:42.158 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 07:12:42.159 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 07:12:42.203 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 07:12:42.205 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 07:12:42.209 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 07:12:42.209 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 07:12:42.209 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 07:12:42.209 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 07:12:42.220 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 07:12:42.221 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 07:12:42.232 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 07:12:42.348 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 07:12:42.349 +03:00 [INF] Hosting environment: Development
2025-09-16 07:12:42.349 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 07:12:42.349 +03:00 [DBG] Hosting started
2025-09-16 07:12:42.484 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 07:12:42.486 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 07:12:42.508 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 07:12:42.509 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 07:12:42.511 +03:00 [DBG] Connection ID "17437937763084140606" disconnecting.
2025-09-16 07:12:42.513 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 284.0056ms
2025-09-16 07:12:42.556 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 07:12:42.569 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 07:12:42.573 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.2201ms
2025-09-16 07:12:42.604 +03:00 [DBG] Connection ID "17437937763084140608" disconnecting.
2025-09-16 07:12:42.613 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 56.7879ms
2025-09-16 07:12:43.088 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 07:12:43.281 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 193.0415ms
2025-09-16 13:48:05.091 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 13:48:05.431 +03:00 [DBG] Hosting starting
2025-09-16 13:48:05.544 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 13:48:05.627 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 13:48:05.652 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 13:48:05.658 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 13:48:05.677 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 13:48:05.689 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 13:48:05.729 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 13:48:05.737 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 13:48:05.741 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 13:48:05.769 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 13:48:05.775 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 13:48:05.779 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 13:48:05.780 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 13:48:06.035 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 13:48:06.037 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 13:48:06.058 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 13:48:06.058 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 13:48:06.058 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 13:48:06.058 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 13:48:06.130 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 13:48:06.131 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 13:48:06.204 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/ - null null
2025-09-16 13:48:06.553 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 13:48:06.553 +03:00 [INF] Hosting environment: Development
2025-09-16 13:48:06.554 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 13:48:06.554 +03:00 [DBG] Hosting started
2025-09-16 13:48:08.095 +03:00 [DBG] No candidates found for the request path '/'
2025-09-16 13:48:08.101 +03:00 [DBG] Request did not match any endpoints
2025-09-16 13:48:08.291 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 13:48:08.705 +03:00 [DBG] Connection ID "17582052946865029345" disconnecting.
2025-09-16 13:48:08.624 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/ - 404 null null 2421.4636ms
2025-09-16 13:48:08.767 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/, Response status code: 404
2025-09-16 13:48:22.045 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 13:48:22.066 +03:00 [DBG] Connection ID "18230571306091282946" disconnecting.
2025-09-16 13:48:22.068 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 20.946ms
2025-09-16 13:48:22.749 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 13:48:23.133 +03:00 [DBG] Connection ID "18230571306091282948" disconnecting.
2025-09-16 13:48:23.133 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 384.1313ms
2025-09-16 13:55:32.091 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 13:55:32.093 +03:00 [DBG] Connection ID "17582052951159996590" disconnecting.
2025-09-16 13:55:32.093 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 1.5017ms
2025-09-16 13:55:32.111 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 13:55:32.233 +03:00 [DBG] Connection ID "17437937758789173328" disconnecting.
2025-09-16 13:55:32.234 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 122.8677ms
2025-09-16 13:55:32.292 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 13:55:32.327 +03:00 [DBG] Connection ID "18086456113720459712" disconnecting.
2025-09-16 13:55:32.328 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 35.5715ms
2025-09-16 13:56:19.069 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Patient/register - application/json 168
2025-09-16 13:56:19.093 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/register'
2025-09-16 13:56:19.095 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)' with route pattern 'api/Patient/register' is valid for the request path '/api/Patient/register'
2025-09-16 13:56:19.096 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 13:56:19.099 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 13:56:19.101 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 13:56:19.132 +03:00 [INF] Route matched with {action = "Register", controller = "Patient"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.PatientDTOs.PatientDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 13:56:19.134 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 13:56:19.134 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 13:56:19.135 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 13:56:19.136 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 13:56:19.136 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 13:56:19.138 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 13:56:20.343 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 13:56:20.638 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 13:56:20.639 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 13:56:20.648 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 13:56:20.651 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' using the name '' in request data ...
2025-09-16 13:56:20.653 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 13:56:20.681 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'
2025-09-16 13:56:20.682 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 13:56:20.682 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 13:56:20.682 +03:00 [DBG] Attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 13:56:20.697 +03:00 [DBG] Done attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 13:56:20.716 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API) in 1571.4154ms
2025-09-16 13:56:20.717 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 13:56:20.718 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at MedicalApp.API.Controllers.PatientController.Register(PatientDTO registerDTO) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Controllers\PatientController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 13:56:20.764 +03:00 [DBG] Connection ID "18014398515387565569" disconnecting.
2025-09-16 13:56:20.764 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Patient/register - 500 null text/plain; charset=utf-8 1695.5559ms
2025-09-16 14:05:46.945 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 14:05:47.113 +03:00 [DBG] Hosting starting
2025-09-16 14:05:47.131 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 14:05:47.151 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 14:05:47.159 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 14:05:47.163 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 14:05:47.170 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 14:05:47.179 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 14:05:47.183 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 14:05:47.186 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 14:05:47.188 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 14:05:47.193 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 14:05:47.196 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 14:05:47.198 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 14:05:47.199 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 14:05:47.253 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 14:05:47.254 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 14:05:47.259 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 14:05:47.259 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 14:05:47.259 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 14:05:47.259 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 14:05:47.320 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 14:05:47.321 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 14:05:47.335 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 14:05:47.489 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 14:05:47.490 +03:00 [INF] Hosting environment: Development
2025-09-16 14:05:47.490 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 14:05:47.490 +03:00 [DBG] Hosting started
2025-09-16 14:05:47.711 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 14:05:47.713 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 14:05:47.746 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 14:05:47.747 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 14:05:47.748 +03:00 [DBG] Connection ID "18014398515387565574" disconnecting.
2025-09-16 14:05:47.750 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 418.4863ms
2025-09-16 14:05:47.818 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 14:05:47.824 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 4.5961ms
2025-09-16 14:05:47.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 14:05:47.922 +03:00 [DBG] Connection ID "18158513699168456275" disconnecting.
2025-09-16 14:05:47.929 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 103.1938ms
2025-09-16 14:05:48.332 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 14:05:48.572 +03:00 [DBG] Connection ID "18158513699168456277" disconnecting.
2025-09-16 14:05:48.571 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 239.3786ms
2025-09-16 14:06:08.281 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Patient/register - application/json 168
2025-09-16 14:06:08.329 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/register'
2025-09-16 14:06:08.335 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)' with route pattern 'api/Patient/register' is valid for the request path '/api/Patient/register'
2025-09-16 14:06:08.336 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:06:08.359 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 14:06:08.363 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:06:08.418 +03:00 [INF] Route matched with {action = "Register", controller = "Patient"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.PatientDTOs.PatientDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 14:06:08.420 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 14:06:08.421 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 14:06:08.422 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 14:06:08.422 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 14:06:08.423 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 14:06:08.425 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 14:06:08.724 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:06:09.006 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 14:06:09.007 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 14:06:09.012 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 14:06:09.022 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' using the name '' in request data ...
2025-09-16 14:06:09.023 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 14:06:09.051 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'
2025-09-16 14:06:09.052 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:06:09.052 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:06:09.052 +03:00 [DBG] Attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 14:06:09.073 +03:00 [DBG] Done attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:06:09.089 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API) in 658.5073ms
2025-09-16 14:06:09.090 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:06:09.091 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at MedicalApp.API.Controllers.PatientController.Register(PatientDTO registerDTO) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Controllers\PatientController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 14:06:09.121 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Patient/register - 500 null text/plain; charset=utf-8 841.0893ms
2025-09-16 14:10:11.767 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 14:10:11.921 +03:00 [DBG] Hosting starting
2025-09-16 14:10:11.946 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 14:10:12.007 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 14:10:12.019 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 14:10:12.027 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 14:10:12.044 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 14:10:12.064 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 14:10:12.073 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 14:10:12.079 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 14:10:12.081 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 14:10:12.090 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 14:10:12.093 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 14:10:12.096 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 14:10:12.097 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 14:10:12.155 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 14:10:12.158 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 14:10:12.164 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 14:10:12.164 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 14:10:12.164 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 14:10:12.164 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 14:10:12.177 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 14:10:12.177 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 14:10:12.193 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 14:10:12.295 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 14:10:12.295 +03:00 [INF] Hosting environment: Development
2025-09-16 14:10:12.295 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 14:10:12.295 +03:00 [DBG] Hosting started
2025-09-16 14:10:12.415 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 14:10:12.416 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 14:10:12.450 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 14:10:12.451 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 14:10:12.512 +03:00 [DBG] Connection ID "18230571306091282952" disconnecting.
2025-09-16 14:10:12.508 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 318.692ms
2025-09-16 14:10:12.699 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 14:10:12.699 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 14:10:12.704 +03:00 [DBG] Connection ID "17365880164751245921" disconnecting.
2025-09-16 14:10:12.704 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.5995ms
2025-09-16 14:10:12.743 +03:00 [DBG] Connection ID "17437937758789173330" disconnecting.
2025-09-16 14:10:12.744 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 45.5021ms
2025-09-16 14:10:13.070 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 14:10:13.365 +03:00 [DBG] Connection ID "17437937758789173332" disconnecting.
2025-09-16 14:10:13.365 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 294.9646ms
2025-09-16 14:11:47.375 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Patient/register - application/json 170
2025-09-16 14:11:47.437 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/register'
2025-09-16 14:11:47.438 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)' with route pattern 'api/Patient/register' is valid for the request path '/api/Patient/register'
2025-09-16 14:11:47.438 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:11:47.470 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 14:11:47.478 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:11:47.520 +03:00 [INF] Route matched with {action = "Register", controller = "Patient"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.PatientDTOs.PatientDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 14:11:47.527 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 14:11:47.527 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 14:11:47.534 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 14:11:47.535 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 14:11:47.535 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 14:11:47.542 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 14:11:47.682 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:11:47.837 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 14:11:47.880 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 14:11:47.886 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 14:11:47.890 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' using the name '' in request data ...
2025-09-16 14:11:47.891 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 14:11:47.915 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'
2025-09-16 14:11:47.916 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:11:47.916 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:11:47.916 +03:00 [DBG] Attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 14:11:47.932 +03:00 [DBG] Done attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:11:49.439 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:11:49.439 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:11:50.034 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:11:50.269 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-09-16 14:11:50.953 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:11:51.079 +03:00 [DBG] Creating DbConnection.
2025-09-16 14:11:51.184 +03:00 [DBG] Created DbConnection. (130ms).
2025-09-16 14:11:51.188 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:11:51.643 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:11:51.648 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:11:51.655 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-09-16 14:11:51.662 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-09-16 14:11:51.669 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:11:52.093 +03:00 [INF] Executed DbCommand (420ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:11:52.136 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:11:52.147 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 46ms reading results.
2025-09-16 14:11:52.151 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:11:52.158 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (7ms).
2025-09-16 14:11:52.477 +03:00 [DBG] User validation failed: InvalidUserName.
2025-09-16 14:11:52.482 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 14:11:52.484 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 14:11:52.484 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 14:11:52.484 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 14:11:52.485 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 14:11:52.485 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.List`1[[Microsoft.AspNetCore.Identity.IdentityError, Microsoft.Extensions.Identity.Core, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]'.
2025-09-16 14:11:52.492 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API) in 4953.3304ms
2025-09-16 14:11:52.493 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:11:52.494 +03:00 [DBG] Connection ID "18230571306091282958" disconnecting.
2025-09-16 14:11:52.498 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:11:52.503 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:11:52.504 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 14:11:52.505 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Patient/register - 400 null application/json; charset=utf-8 5130.0147ms
2025-09-16 14:17:58.813 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 14:17:59.008 +03:00 [DBG] Hosting starting
2025-09-16 14:17:59.036 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 14:17:59.059 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 14:17:59.081 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 14:17:59.085 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 14:17:59.092 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 14:17:59.100 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 14:17:59.108 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 14:17:59.117 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 14:17:59.122 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 14:17:59.128 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 14:17:59.131 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 14:17:59.135 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 14:17:59.135 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 14:17:59.186 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 14:17:59.188 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 14:17:59.192 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 14:17:59.192 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 14:17:59.192 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 14:17:59.192 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 14:17:59.201 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 14:17:59.201 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 14:17:59.214 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 14:17:59.296 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 14:17:59.296 +03:00 [INF] Hosting environment: Development
2025-09-16 14:17:59.296 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 14:17:59.296 +03:00 [DBG] Hosting started
2025-09-16 14:17:59.475 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 14:17:59.478 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 14:17:59.518 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 14:17:59.518 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 14:17:59.520 +03:00 [DBG] Connection ID "18158513699168456314" disconnecting.
2025-09-16 14:17:59.525 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 311.2162ms
2025-09-16 14:17:59.620 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 14:17:59.620 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 14:17:59.627 +03:00 [DBG] Connection ID "18230571306091282960" disconnecting.
2025-09-16 14:17:59.628 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 6.0847ms
2025-09-16 14:17:59.666 +03:00 [DBG] Connection ID "18302628900129210489" disconnecting.
2025-09-16 14:17:59.667 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.7827ms
2025-09-16 14:18:00.038 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 14:18:00.297 +03:00 [DBG] Connection ID "18014398515387565579" disconnecting.
2025-09-16 14:18:00.297 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 259.797ms
2025-09-16 14:18:41.134 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Patient/register - application/json 170
2025-09-16 14:18:41.185 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/register'
2025-09-16 14:18:41.187 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)' with route pattern 'api/Patient/register' is valid for the request path '/api/Patient/register'
2025-09-16 14:18:41.188 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:18:41.202 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 14:18:41.204 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:18:41.232 +03:00 [INF] Route matched with {action = "Register", controller = "Patient"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.PatientDTOs.PatientDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 14:18:41.234 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 14:18:41.234 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 14:18:41.235 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 14:18:41.235 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 14:18:41.235 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 14:18:41.237 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 14:18:41.347 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:18:41.569 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 14:18:41.577 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 14:18:41.585 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 14:18:41.587 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' using the name '' in request data ...
2025-09-16 14:18:41.589 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 14:18:41.609 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'
2025-09-16 14:18:41.610 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:18:41.611 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:18:41.611 +03:00 [DBG] Attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 14:18:41.622 +03:00 [DBG] Done attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:18:42.740 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:18:42.740 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:18:43.171 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:18:43.258 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-09-16 14:18:43.713 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:18:43.770 +03:00 [DBG] Creating DbConnection.
2025-09-16 14:18:43.787 +03:00 [DBG] Created DbConnection. (14ms).
2025-09-16 14:18:43.790 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:43.962 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:43.967 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:18:43.974 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-09-16 14:18:43.984 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (17ms).
2025-09-16 14:18:43.995 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:18:44.066 +03:00 [INF] Executed DbCommand (71ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:18:44.083 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:18:44.094 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 20ms reading results.
2025-09-16 14:18:44.099 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:44.106 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (7ms).
2025-09-16 14:18:44.422 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-09-16 14:18:44.434 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:18:44.442 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:44.443 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:44.444 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:18:44.444 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:18:44.444 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:18:44.444 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 14:18:44.558 +03:00 [INF] Executed DbCommand (113ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 14:18:44.559 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:18:44.559 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:18:44.560 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:44.560 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:18:44.725 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:18:44.731 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:18:44.735 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:18:44.755 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:18:44.852 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:44.852 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:44.855 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:18:44.855 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:18:44.856 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:18:44.857 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-09-16 14:18:44.989 +03:00 [INF] Executed DbCommand (133ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-09-16 14:18:44.994 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:18:44.995 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 5ms reading results.
2025-09-16 14:18:44.997 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:44.997 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:18:45.004 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:18:45.007 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 14:18:45.071 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-09-16 14:18:45.088 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return (IdentityRole)
                                {
                                    IdentityRoleProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityRoleProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:18:45.093 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:45.094 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:45.094 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:18:45.094 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:18:45.094 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:18:45.094 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:18:45.153 +03:00 [INF] Executed DbCommand (59ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:18:45.154 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:18:45.154 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:18:45.155 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:45.155 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:18:45.181 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:45.181 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:45.181 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:18:45.182 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:18:45.182 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:18:45.182 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:18:45.183 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:18:45.184 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:18:45.184 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:18:45.184 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:45.185 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:18:45.191 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API) in 3952.1708ms
2025-09-16 14:18:45.191 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:18:45.194 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Role PATIENT does not exist.
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddToRoleAsync(TUser user, String normalizedRoleName, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(TUser user, String role)
   at MedicalApp.API.Controllers.PatientController.Register(PatientDTO registerDTO) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Controllers\PatientController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 14:18:45.237 +03:00 [DBG] Connection ID "18374686494167139556" disconnecting.
2025-09-16 14:18:45.240 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:18:45.246 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:18:45.248 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 14:18:45.248 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Patient/register - 500 null text/plain; charset=utf-8 4114.2412ms
2025-09-16 14:22:34.435 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:22:34.541 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 14:22:35.339 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:22:35.340 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:22:35.794 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:22:35.960 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-09-16 14:22:36.887 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return (IdentityRole)
                                {
                                    IdentityRoleProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityRoleProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:22:36.971 +03:00 [DBG] Creating DbConnection.
2025-09-16 14:22:37.008 +03:00 [DBG] Created DbConnection. (34ms).
2025-09-16 14:22:37.016 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.333 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.337 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:37.344 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-09-16 14:22:37.354 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (17ms).
2025-09-16 14:22:37.363 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:37.632 +03:00 [INF] Executed DbCommand (175ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:37.660 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.671 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 31ms reading results.
2025-09-16 14:22:37.675 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.682 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (6ms).
2025-09-16 14:22:37.713 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.714 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.714 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:37.715 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:37.715 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:37.715 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:37.719 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:37.720 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.720 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:22:37.720 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.720 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:37.816 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:22:37.839 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:22:37.841 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:22:37.848 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:22:37.914 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.914 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.916 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:37.917 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:37.917 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:37.917 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:22:37.982 +03:00 [INF] Executed DbCommand (66ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:22:37.988 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.988 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 5ms reading results.
2025-09-16 14:22:37.990 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:37.990 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:38.001 +03:00 [DBG] An entity of type 'IdentityRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:22:38.007 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 14:22:38.010 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.010 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.010 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:38.010 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.011 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.011 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:38.133 +03:00 [INF] Executed DbCommand (123ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:38.134 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.134 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:22:38.134 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.134 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:38.134 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.135 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.135 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:38.136 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-16 14:22:38.136 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 14:22:38.136 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:38.143 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:38.143 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.165 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 22ms reading results.
2025-09-16 14:22:38.166 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.166 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:38.168 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:22:38.168 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:22:38.168 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:22:38.183 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:22:38.184 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.184 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.184 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:38.185 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.185 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.186 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:22:38.189 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:22:38.190 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.190 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:22:38.191 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.191 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:38.191 +03:00 [DBG] An entity of type 'IdentityRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:22:38.192 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 14:22:38.192 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.192 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.193 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:38.193 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.193 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.193 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:38.195 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:38.195 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.195 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:22:38.195 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.197 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (1ms).
2025-09-16 14:22:38.197 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.198 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.198 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:38.198 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.198 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.199 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:38.200 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:22:38.200 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.200 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:22:38.201 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.201 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:38.201 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:22:38.202 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:22:38.202 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:22:38.204 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:22:38.205 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.206 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.206 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:38.207 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.207 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.207 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:22:38.209 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:22:38.209 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.210 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:22:38.210 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.210 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:38.211 +03:00 [DBG] An entity of type 'IdentityRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:22:38.211 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 14:22:38.222 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-09-16 14:22:38.376 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:22:38.391 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.391 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.391 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:38.392 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.392 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.392 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:22:38.461 +03:00 [INF] Executed DbCommand (69ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:22:38.462 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.462 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:22:38.462 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.463 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:38.473 +03:00 [DBG] User password validation failed: PasswordRequiresUpper.
2025-09-16 14:22:38.479 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-09-16 14:22:38.488 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return (IdentityRole)
                                {
                                    IdentityRoleProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityRoleProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:22:38.493 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.494 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.494 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:38.495 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.495 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.495 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:22:38.524 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:22:38.562 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.562 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 37ms reading results.
2025-09-16 14:22:38.562 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.562 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:38.581 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-09-16 14:22:38.659 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return (IdentityUserRole<string>)
                                {
                                    IdentityUserRole`1Proxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityUserRole`1Proxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:22:38.666 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.666 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.666 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:38.666 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.666 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.667 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 14:22:38.753 +03:00 [INF] Executed DbCommand (86ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 14:22:38.754 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.754 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:22:38.754 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.755 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:38.759 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.759 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.760 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:38.760 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.760 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.760 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:22:38.765 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:22:38.765 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.766 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:22:38.766 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.766 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:38.783 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:22:38.856 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-09-16 14:22:38.865 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:22:38.874 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.874 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.874 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:38.874 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.874 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:38.874 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 14:22:38.926 +03:00 [INF] Executed DbCommand (51ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 14:22:38.926 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.926 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:22:38.927 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:38.927 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:39.015 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:22:39.016 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:22:39.017 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:22:39.017 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:22:39.018 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:22:39.177 +03:00 [DBG] Executing 2 update commands as a batch.
2025-09-16 14:22:39.180 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:39.180 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:39.183 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 14:22:39.208 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 14:22:39.209 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:22:39.209 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:22:39.211 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-16 14:22:39.212 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 14:22:39.724 +03:00 [ERR] Failed executing DbCommand (511ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 14:22:39.810 +03:00 [DBG] Disposing transaction.
2025-09-16 14:22:39.812 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:39.812 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:22:40.075 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'MedicalApp.DA.Models.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_AspNetUserRoles_AspNetUsers_UserId". The conflict occurred in database "MedicalAppDB", table "dbo.AspNetUsers", column 'Id'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:3582ea20-cbcc-47a0-a472-c4f9f4b7e811
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_AspNetUserRoles_AspNetUsers_UserId". The conflict occurred in database "MedicalAppDB", table "dbo.AspNetUsers", column 'Id'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:3582ea20-cbcc-47a0-a472-c4f9f4b7e811
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-09-16 14:22:40.092 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:22:40.096 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:22:40.097 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 14:25:12.866 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:25:13.528 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:25:13.530 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:25:13.744 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:25:13.973 +03:00 [DBG] Creating DbConnection.
2025-09-16 14:25:14.026 +03:00 [DBG] Created DbConnection. (49ms).
2025-09-16 14:25:14.033 +03:00 [DBG] Migrating using database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:14.041 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:14.713 +03:00 [DBG] An error occurred using the connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:14.787 +03:00 [DBG] Creating DbConnection.
2025-09-16 14:25:14.787 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 14:25:14.788 +03:00 [DBG] Opening connection to database 'master' on server '.'.
2025-09-16 14:25:14.810 +03:00 [DBG] Opened connection to database 'master' on server '.'.
2025-09-16 14:25:14.820 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:14.829 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (9ms).
2025-09-16 14:25:14.835 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (19ms).
2025-09-16 14:25:14.849 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [MedicalAppDB];
2025-09-16 14:25:15.353 +03:00 [INF] Executed DbCommand (485ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [MedicalAppDB];
2025-09-16 14:25:15.356 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:15.356 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:15.356 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:15.356 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [MedicalAppDB] SET READ_COMMITTED_SNAPSHOT ON;
END;
2025-09-16 14:25:15.541 +03:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [MedicalAppDB] SET READ_COMMITTED_SNAPSHOT ON;
END;
2025-09-16 14:25:15.543 +03:00 [DBG] Closing connection to database 'master' on server '.'.
2025-09-16 14:25:15.555 +03:00 [DBG] Closed connection to database 'master' on server '.' (6ms).
2025-09-16 14:25:15.561 +03:00 [DBG] Disposing connection to database 'master' on server '.'.
2025-09-16 14:25:15.564 +03:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-09-16 14:25:15.564 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:15.578 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:15.579 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:15.580 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:15.580 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:15.580 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 14:25:15.596 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 14:25:15.596 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:15.596 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:15.596 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:15.599 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:15.601 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-16 14:25:15.607 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 14:25:15.607 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:25:15.607 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:25:15.609 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-16 14:25:15.655 +03:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-16 14:25:15.857 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 14:25:15.868 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 14:25:15.869 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:15.870 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:15.871 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-09-16 14:25:15.872 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-16 14:25:15.889 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-16 14:25:15.893 +03:00 [DBG] Committing transaction.
2025-09-16 14:25:15.902 +03:00 [DBG] Committed transaction.
2025-09-16 14:25:15.905 +03:00 [DBG] Disposing transaction.
2025-09-16 14:25:15.909 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 14:25:15.910 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 14:25:15.913 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:15.913 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:15.913 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:15.914 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 14:25:15.916 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 14:25:15.917 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 14:25:15.917 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:25:15.917 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:25:15.918 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-16 14:25:15.921 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-16 14:25:15.925 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:15.926 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:15.926 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:15.927 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-16 14:25:15.944 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-16 14:25:15.949 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:15.950 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 4ms reading results.
2025-09-16 14:25:15.960 +03:00 [INF] Applying migration '20250916033303_init'.
2025-09-16 14:25:16.033 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:16.033 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:16.033 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:16.033 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);
2025-09-16 14:25:16.038 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);
2025-09-16 14:25:16.039 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:16.039 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:16.039 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:16.039 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUsers] (
    [Id] nvarchar(450) NOT NULL,
    [FirstName] nvarchar(max) NOT NULL,
    [LastName] nvarchar(max) NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);
2025-09-16 14:25:16.046 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUsers] (
    [Id] nvarchar(450) NOT NULL,
    [FirstName] nvarchar(max) NOT NULL,
    [LastName] nvarchar(max) NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);
2025-09-16 14:25:16.046 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:16.046 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:16.047 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:16.047 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:16.055 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:16.056 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:16.056 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:16.056 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:17.133 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:17.140 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:17.140 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:17.140 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:17.140 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:17.140 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:17.156 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:17.156 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:17.157 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:17.157 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:17.157 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:17.190 +03:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:17.190 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:17.190 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:17.190 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:17.191 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserTokens] (
    [UserId] nvarchar(450) NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:18.488 +03:00 [INF] Executed DbCommand (1,297ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserTokens] (
    [UserId] nvarchar(450) NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:18.489 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:18.489 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:18.489 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:18.489 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Doctors] (
    [Id] int NOT NULL IDENTITY,
    [Specialization] nvarchar(max) NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Doctors] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Doctors_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:18.507 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Doctors] (
    [Id] int NOT NULL IDENTITY,
    [Specialization] nvarchar(max) NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Doctors] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Doctors_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:18.508 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:18.508 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:18.508 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:18.508 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Patients] (
    [Id] int NOT NULL IDENTITY,
    [DateOfBirth] datetime2 NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Patients] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Patients_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:18.523 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Patients] (
    [Id] int NOT NULL IDENTITY,
    [DateOfBirth] datetime2 NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Patients] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Patients_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:25:18.524 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:18.524 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:18.524 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:18.524 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Appointments] (
    [Id] int NOT NULL IDENTITY,
    [AppointmentDate] datetime2 NOT NULL,
    [Reason] nvarchar(max) NOT NULL,
    [Status] int NOT NULL,
    [PatientId] int NOT NULL,
    [DoctorId] int NOT NULL,
    CONSTRAINT [PK_Appointments] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Appointments_Doctors_DoctorId] FOREIGN KEY ([DoctorId]) REFERENCES [Doctors] ([Id]),
    CONSTRAINT [FK_Appointments_Patients_PatientId] FOREIGN KEY ([PatientId]) REFERENCES [Patients] ([Id])
);
2025-09-16 14:25:18.537 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Appointments] (
    [Id] int NOT NULL IDENTITY,
    [AppointmentDate] datetime2 NOT NULL,
    [Reason] nvarchar(max) NOT NULL,
    [Status] int NOT NULL,
    [PatientId] int NOT NULL,
    [DoctorId] int NOT NULL,
    CONSTRAINT [PK_Appointments] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Appointments_Doctors_DoctorId] FOREIGN KEY ([DoctorId]) REFERENCES [Doctors] ([Id]),
    CONSTRAINT [FK_Appointments_Patients_PatientId] FOREIGN KEY ([PatientId]) REFERENCES [Patients] ([Id])
);
2025-09-16 14:25:18.538 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:18.538 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:18.538 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.791 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_DoctorId] ON [Appointments] ([DoctorId]);
2025-09-16 14:25:19.827 +03:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_DoctorId] ON [Appointments] ([DoctorId]);
2025-09-16 14:25:19.828 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:19.828 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.828 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.828 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_PatientId] ON [Appointments] ([PatientId]);
2025-09-16 14:25:19.849 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_PatientId] ON [Appointments] ([PatientId]);
2025-09-16 14:25:19.849 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:19.849 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.849 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.849 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetRoleClaims_RoleId] ON [AspNetRoleClaims] ([RoleId]);
2025-09-16 14:25:19.850 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetRoleClaims_RoleId] ON [AspNetRoleClaims] ([RoleId]);
2025-09-16 14:25:19.850 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:19.850 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.850 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.850 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [RoleNameIndex] ON [AspNetRoles] ([NormalizedName]) WHERE [NormalizedName] IS NOT NULL;
2025-09-16 14:25:19.852 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [RoleNameIndex] ON [AspNetRoles] ([NormalizedName]) WHERE [NormalizedName] IS NOT NULL;
2025-09-16 14:25:19.852 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:19.853 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.853 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.853 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserClaims_UserId] ON [AspNetUserClaims] ([UserId]);
2025-09-16 14:25:19.854 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserClaims_UserId] ON [AspNetUserClaims] ([UserId]);
2025-09-16 14:25:19.854 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:19.854 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.854 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.854 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserLogins_UserId] ON [AspNetUserLogins] ([UserId]);
2025-09-16 14:25:19.855 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserLogins_UserId] ON [AspNetUserLogins] ([UserId]);
2025-09-16 14:25:19.855 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:19.855 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.855 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.855 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserRoles_RoleId] ON [AspNetUserRoles] ([RoleId]);
2025-09-16 14:25:19.856 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserRoles_RoleId] ON [AspNetUserRoles] ([RoleId]);
2025-09-16 14:25:19.856 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:19.856 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.856 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:19.856 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [EmailIndex] ON [AspNetUsers] ([NormalizedEmail]);
2025-09-16 14:25:19.857 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [EmailIndex] ON [AspNetUsers] ([NormalizedEmail]);
2025-09-16 14:25:21.608 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:21.608 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:21.608 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:21.608 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [UserNameIndex] ON [AspNetUsers] ([NormalizedUserName]) WHERE [NormalizedUserName] IS NOT NULL;
2025-09-16 14:25:21.611 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [UserNameIndex] ON [AspNetUsers] ([NormalizedUserName]) WHERE [NormalizedUserName] IS NOT NULL;
2025-09-16 14:25:21.611 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:21.611 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:21.611 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:21.611 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Doctors_UserId] ON [Doctors] ([UserId]);
2025-09-16 14:25:21.619 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Doctors_UserId] ON [Doctors] ([UserId]);
2025-09-16 14:25:21.619 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:21.619 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:21.619 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:21.619 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Patients_UserId] ON [Patients] ([UserId]);
2025-09-16 14:25:21.624 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Patients_UserId] ON [Patients] ([UserId]);
2025-09-16 14:25:21.624 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:21.624 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:21.624 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:21.625 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916033303_init', N'9.0.9');
2025-09-16 14:25:21.673 +03:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916033303_init', N'9.0.9');
2025-09-16 14:25:21.674 +03:00 [INF] Applying migration '20250916034448_v1'.
2025-09-16 14:25:21.713 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:25:21.714 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:21.714 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:25:21.714 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916034448_v1', N'9.0.9');
2025-09-16 14:25:21.726 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916034448_v1', N'9.0.9');
2025-09-16 14:25:21.727 +03:00 [DBG] Committing transaction.
2025-09-16 14:25:21.758 +03:00 [DBG] Committed transaction.
2025-09-16 14:25:21.759 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 14:25:21.759 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:25:21.759 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:25:21.759 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-16 14:25:21.770 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-16 14:25:21.770 +03:00 [DBG] Disposing transaction.
2025-09-16 14:25:21.770 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:21.771 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:21.773 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:25:21.776 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:21.776 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 14:25:29.394 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:25:29.656 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 14:25:30.364 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:25:30.365 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:25:30.650 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:25:30.748 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-09-16 14:25:31.311 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return (IdentityRole)
                                {
                                    IdentityRoleProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityRoleProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:25:31.373 +03:00 [DBG] Creating DbConnection.
2025-09-16 14:25:31.400 +03:00 [DBG] Created DbConnection. (25ms).
2025-09-16 14:25:31.405 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.649 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.653 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:31.662 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-09-16 14:25:31.672 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (19ms).
2025-09-16 14:25:31.682 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:31.744 +03:00 [INF] Executed DbCommand (52ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:31.757 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.767 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 17ms reading results.
2025-09-16 14:25:31.770 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.774 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (4ms).
2025-09-16 14:25:31.787 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.789 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.789 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:31.789 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:31.789 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:31.790 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:31.796 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:31.797 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.797 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:25:31.798 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.798 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:31.867 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:25:31.873 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:25:31.876 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:25:31.888 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:25:31.939 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.939 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.942 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:31.942 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:31.942 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:31.942 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:25:31.971 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:25:31.975 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.975 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 3ms reading results.
2025-09-16 14:25:31.979 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.979 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:31.991 +03:00 [DBG] An entity of type 'IdentityRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:25:31.994 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 14:25:31.996 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.996 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:31.996 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:31.996 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:31.996 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:31.997 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:32.013 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:32.013 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.014 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:25:32.014 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.014 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.014 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.015 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.015 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:32.015 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.015 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.015 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:32.021 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:32.021 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.021 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:25:32.022 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.022 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.024 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:25:32.025 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:25:32.025 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:25:32.028 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:25:32.029 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.029 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.029 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:32.029 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.029 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.029 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:25:32.038 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:25:32.038 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.038 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:25:32.039 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.039 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.039 +03:00 [DBG] An entity of type 'IdentityRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:25:32.040 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 14:25:32.040 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.040 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.041 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:32.041 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.041 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.041 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:32.045 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:32.045 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.045 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:25:32.045 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.045 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.046 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.046 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.046 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:32.046 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.046 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.047 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:32.050 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-09-16 14:25:32.051 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.051 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:25:32.051 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.051 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.052 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:25:32.052 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:25:32.052 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:25:32.052 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:25:32.053 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.053 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.053 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:32.053 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.054 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.054 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:25:32.058 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);
2025-09-16 14:25:32.058 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.058 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:25:32.058 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.059 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.059 +03:00 [DBG] An entity of type 'IdentityRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:25:32.059 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 14:25:32.066 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-09-16 14:25:32.141 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:25:32.155 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.155 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.155 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:32.156 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.156 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.156 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:25:32.172 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:25:32.173 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.173 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:25:32.173 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.173 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.184 +03:00 [DBG] User password validation failed: PasswordRequiresUpper.
2025-09-16 14:25:32.188 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-09-16 14:25:32.194 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return (IdentityRole)
                                {
                                    IdentityRoleProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityRoleProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:25:32.199 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.199 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.199 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:32.199 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.199 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.200 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:25:32.232 +03:00 [INF] Executed DbCommand (32ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:25:32.237 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.238 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 5ms reading results.
2025-09-16 14:25:32.238 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.238 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.254 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-09-16 14:25:32.302 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return (IdentityUserRole<string>)
                                {
                                    IdentityUserRole`1Proxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityUserRole`1Proxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:25:32.310 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.310 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.310 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:32.310 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.311 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.311 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 14:25:32.341 +03:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 14:25:32.342 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.342 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:25:32.342 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.342 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.347 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.347 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.348 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:32.348 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.348 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.348 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:25:32.373 +03:00 [INF] Executed DbCommand (25ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:25:32.377 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.378 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 4ms reading results.
2025-09-16 14:25:32.378 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.378 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.406 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:25:32.432 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-09-16 14:25:32.439 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:25:32.446 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.446 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.446 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:32.446 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.446 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.447 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 14:25:32.462 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 14:25:32.462 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.462 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:25:32.463 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.463 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.519 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:25:32.519 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:25:32.520 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:25:32.520 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:25:32.521 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:25:32.549 +03:00 [DBG] Executing 2 update commands as a batch.
2025-09-16 14:25:32.551 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.552 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.554 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 14:25:32.559 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 14:25:32.561 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:25:32.561 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:25:32.562 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 14:25:32.563 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 14:25:32.609 +03:00 [ERR] Failed executing DbCommand (46ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 14:25:32.616 +03:00 [DBG] Disposing transaction.
2025-09-16 14:25:32.618 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.618 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:25:32.637 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'MedicalApp.DA.Models.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_AspNetUserRoles_AspNetUsers_UserId". The conflict occurred in database "MedicalAppDB", table "dbo.AspNetUsers", column 'Id'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:55dc7778-bfe2-46ed-9cf9-763a787ed7b7
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_AspNetUserRoles_AspNetUsers_UserId". The conflict occurred in database "MedicalAppDB", table "dbo.AspNetUsers", column 'Id'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:55dc7778-bfe2-46ed-9cf9-763a787ed7b7
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-09-16 14:25:32.645 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:25:32.648 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:25:32.649 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 14:30:44.902 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:30:45.733 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:30:45.734 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:32:09.321 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:32:10.339 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:32:10.341 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:32:10.661 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:32:10.697 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:32:21.680 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:32:22.948 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:32:22.951 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:32:23.421 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:32:25.157 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:32:43.255 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:32:44.080 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:32:44.082 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:32:44.372 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:32:44.999 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:32:44.999 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:32:45.168 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:36:04.080 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:36:04.916 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:36:04.918 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:36:05.163 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:36:06.053 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:36:19.215 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:36:19.679 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:36:19.681 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:36:20.016 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:36:20.317 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:36:20.317 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:36:20.444 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:42:45.713 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:42:46.629 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:42:46.632 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:42:47.163 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:42:48.081 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:42:57.291 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:42:57.936 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:42:57.955 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:42:58.355 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:42:58.570 +03:00 [DBG] Creating DbConnection.
2025-09-16 14:42:58.737 +03:00 [DBG] Created DbConnection. (170ms).
2025-09-16 14:42:58.744 +03:00 [DBG] Migrating using database 'MedicalAppDB' on server '.'.
2025-09-16 14:42:58.751 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:42:59.321 +03:00 [DBG] An error occurred using the connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:42:59.384 +03:00 [DBG] Creating DbConnection.
2025-09-16 14:42:59.384 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 14:42:59.384 +03:00 [DBG] Opening connection to database 'master' on server '.'.
2025-09-16 14:42:59.407 +03:00 [DBG] Opened connection to database 'master' on server '.'.
2025-09-16 14:42:59.418 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:42:59.464 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (49ms).
2025-09-16 14:42:59.468 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (55ms).
2025-09-16 14:42:59.480 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [MedicalAppDB];
2025-09-16 14:42:59.888 +03:00 [INF] Executed DbCommand (399ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [MedicalAppDB];
2025-09-16 14:42:59.889 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:42:59.889 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:42:59.889 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:42:59.890 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [MedicalAppDB] SET READ_COMMITTED_SNAPSHOT ON;
END;
2025-09-16 14:43:00.011 +03:00 [INF] Executed DbCommand (121ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [MedicalAppDB] SET READ_COMMITTED_SNAPSHOT ON;
END;
2025-09-16 14:43:00.051 +03:00 [DBG] Closing connection to database 'master' on server '.'.
2025-09-16 14:43:00.068 +03:00 [DBG] Closed connection to database 'master' on server '.' (47ms).
2025-09-16 14:43:00.075 +03:00 [DBG] Disposing connection to database 'master' on server '.'.
2025-09-16 14:43:00.076 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 14:43:00.076 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:43:00.090 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:43:00.090 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:00.090 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:00.091 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:00.091 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 14:43:00.106 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 14:43:00.107 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:43:00.107 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:43:00.108 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:43:00.110 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:43:00.113 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-09-16 14:43:00.137 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 14:43:00.137 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:43:00.137 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:43:00.138 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-16 14:43:00.337 +03:00 [INF] Executed DbCommand (199ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-09-16 14:43:00.654 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 14:43:00.680 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 14:43:00.682 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:00.683 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:00.687 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-09-16 14:43:00.687 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-16 14:43:00.715 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-09-16 14:43:00.717 +03:00 [DBG] Committing transaction.
2025-09-16 14:43:00.724 +03:00 [DBG] Committed transaction.
2025-09-16 14:43:00.726 +03:00 [DBG] Disposing transaction.
2025-09-16 14:43:00.730 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 14:43:00.731 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 14:43:00.735 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:00.736 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:00.736 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-16 14:43:00.736 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 14:43:00.739 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-16 14:43:00.739 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 14:43:00.740 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:43:00.740 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:43:00.740 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-16 14:43:00.741 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-09-16 14:43:00.779 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:43:00.779 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:43:00.779 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:43:00.780 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-16 14:43:00.810 +03:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-09-16 14:43:00.814 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:43:00.818 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 3ms reading results.
2025-09-16 14:43:00.831 +03:00 [INF] Applying migration '20250916033303_init'.
2025-09-16 14:43:00.974 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:00.976 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-16 14:43:00.976 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-09-16 14:43:00.976 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);
2025-09-16 14:43:00.981 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);
2025-09-16 14:43:00.982 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:00.982 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:00.982 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:00.982 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUsers] (
    [Id] nvarchar(450) NOT NULL,
    [FirstName] nvarchar(max) NOT NULL,
    [LastName] nvarchar(max) NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);
2025-09-16 14:43:00.992 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUsers] (
    [Id] nvarchar(450) NOT NULL,
    [FirstName] nvarchar(max) NOT NULL,
    [LastName] nvarchar(max) NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);
2025-09-16 14:43:01.094 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:01.094 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:01.094 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:01.095 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:01.118 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:01.119 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:01.119 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:01.120 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:01.120 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:01.141 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:01.141 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:01.142 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:01.142 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:01.142 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:01.211 +03:00 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:01.211 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:01.211 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:02.539 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (1327ms).
2025-09-16 14:43:02.539 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:02.559 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:02.559 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:02.560 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:02.560 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:02.560 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserTokens] (
    [UserId] nvarchar(450) NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:02.603 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserTokens] (
    [UserId] nvarchar(450) NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:02.604 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:02.604 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:02.604 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:02.604 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Doctors] (
    [Id] int NOT NULL IDENTITY,
    [Specialization] nvarchar(max) NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Doctors] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Doctors_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:02.612 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Doctors] (
    [Id] int NOT NULL IDENTITY,
    [Specialization] nvarchar(max) NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Doctors] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Doctors_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:02.612 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:02.613 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:02.613 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:02.613 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Patients] (
    [Id] int NOT NULL IDENTITY,
    [DateOfBirth] datetime2 NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Patients] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Patients_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:02.675 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Patients] (
    [Id] int NOT NULL IDENTITY,
    [DateOfBirth] datetime2 NOT NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_Patients] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Patients_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2025-09-16 14:43:04.325 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:04.325 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.325 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.326 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Appointments] (
    [Id] int NOT NULL IDENTITY,
    [AppointmentDate] datetime2 NOT NULL,
    [Reason] nvarchar(max) NOT NULL,
    [Status] int NOT NULL,
    [PatientId] int NOT NULL,
    [DoctorId] int NOT NULL,
    CONSTRAINT [PK_Appointments] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Appointments_Doctors_DoctorId] FOREIGN KEY ([DoctorId]) REFERENCES [Doctors] ([Id]),
    CONSTRAINT [FK_Appointments_Patients_PatientId] FOREIGN KEY ([PatientId]) REFERENCES [Patients] ([Id])
);
2025-09-16 14:43:04.370 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Appointments] (
    [Id] int NOT NULL IDENTITY,
    [AppointmentDate] datetime2 NOT NULL,
    [Reason] nvarchar(max) NOT NULL,
    [Status] int NOT NULL,
    [PatientId] int NOT NULL,
    [DoctorId] int NOT NULL,
    CONSTRAINT [PK_Appointments] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Appointments_Doctors_DoctorId] FOREIGN KEY ([DoctorId]) REFERENCES [Doctors] ([Id]),
    CONSTRAINT [FK_Appointments_Patients_PatientId] FOREIGN KEY ([PatientId]) REFERENCES [Patients] ([Id])
);
2025-09-16 14:43:04.371 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:04.371 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.371 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.372 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_DoctorId] ON [Appointments] ([DoctorId]);
2025-09-16 14:43:04.374 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_DoctorId] ON [Appointments] ([DoctorId]);
2025-09-16 14:43:04.374 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:04.374 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.375 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.375 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_PatientId] ON [Appointments] ([PatientId]);
2025-09-16 14:43:04.377 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Appointments_PatientId] ON [Appointments] ([PatientId]);
2025-09-16 14:43:04.378 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:04.378 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.378 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.378 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetRoleClaims_RoleId] ON [AspNetRoleClaims] ([RoleId]);
2025-09-16 14:43:04.388 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetRoleClaims_RoleId] ON [AspNetRoleClaims] ([RoleId]);
2025-09-16 14:43:04.388 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:04.388 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.388 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.389 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [RoleNameIndex] ON [AspNetRoles] ([NormalizedName]) WHERE [NormalizedName] IS NOT NULL;
2025-09-16 14:43:04.390 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [RoleNameIndex] ON [AspNetRoles] ([NormalizedName]) WHERE [NormalizedName] IS NOT NULL;
2025-09-16 14:43:04.390 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:04.390 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.390 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:04.390 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserClaims_UserId] ON [AspNetUserClaims] ([UserId]);
2025-09-16 14:43:05.685 +03:00 [INF] Executed DbCommand (1,294ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserClaims_UserId] ON [AspNetUserClaims] ([UserId]);
2025-09-16 14:43:05.685 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:05.686 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.686 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.686 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserLogins_UserId] ON [AspNetUserLogins] ([UserId]);
2025-09-16 14:43:05.695 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserLogins_UserId] ON [AspNetUserLogins] ([UserId]);
2025-09-16 14:43:05.695 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:05.695 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.695 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.695 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserRoles_RoleId] ON [AspNetUserRoles] ([RoleId]);
2025-09-16 14:43:05.718 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserRoles_RoleId] ON [AspNetUserRoles] ([RoleId]);
2025-09-16 14:43:05.718 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:05.718 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.719 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.719 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [EmailIndex] ON [AspNetUsers] ([NormalizedEmail]);
2025-09-16 14:43:05.725 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [EmailIndex] ON [AspNetUsers] ([NormalizedEmail]);
2025-09-16 14:43:05.725 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:05.725 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.725 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.725 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [UserNameIndex] ON [AspNetUsers] ([NormalizedUserName]) WHERE [NormalizedUserName] IS NOT NULL;
2025-09-16 14:43:05.758 +03:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [UserNameIndex] ON [AspNetUsers] ([NormalizedUserName]) WHERE [NormalizedUserName] IS NOT NULL;
2025-09-16 14:43:05.759 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:05.759 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.759 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.759 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Doctors_UserId] ON [Doctors] ([UserId]);
2025-09-16 14:43:05.776 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Doctors_UserId] ON [Doctors] ([UserId]);
2025-09-16 14:43:05.776 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:05.776 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.776 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.776 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Patients_UserId] ON [Patients] ([UserId]);
2025-09-16 14:43:05.784 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Patients_UserId] ON [Patients] ([UserId]);
2025-09-16 14:43:05.784 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:05.785 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.785 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:05.785 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916033303_init', N'9.0.9');
2025-09-16 14:43:05.799 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916033303_init', N'9.0.9');
2025-09-16 14:43:06.715 +03:00 [INF] Applying migration '20250916034448_v1'.
2025-09-16 14:43:06.746 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:06.746 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:06.746 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:06.746 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916034448_v1', N'9.0.9');
2025-09-16 14:43:06.750 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916034448_v1', N'9.0.9');
2025-09-16 14:43:06.751 +03:00 [INF] Applying migration '20250916113225_v2'.
2025-09-16 14:43:06.851 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:06.851 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:06.851 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:06.851 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessFailedCount', N'ConcurrencyStamp', N'Email', N'EmailConfirmed', N'FirstName', N'LastName', N'LockoutEnabled', N'LockoutEnd', N'NormalizedEmail', N'NormalizedUserName', N'PasswordHash', N'PhoneNumber', N'PhoneNumberConfirmed', N'SecurityStamp', N'TwoFactorEnabled', N'UserName') AND [object_id] = OBJECT_ID(N'[AspNetUsers]'))
    SET IDENTITY_INSERT [AspNetUsers] ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (N'Admin-USER-001', 0, N'f0a4d783-b8db-4065-9893-80aac5964cc2', N'sarahyasser979@gmail.com', CAST(1 AS bit), N'Sara', N'Yasser', CAST(0 AS bit), NULL, N'SARAHYASSER979@GMAIL.COM', N'SARAHYASSER979@GMAIL.COM', N'AQAAAAIAAYagAAAAEGuQHWvYN3toKLXDwx5ruxV1nU9WaLB9hQbbpuLN5AEHHeHYLM1QoDpVd6MLfJf+RA==', N'01159757952', CAST(0 AS bit), N'4c9ae149-f30a-4f28-af38-b0ae509f5f3a', CAST(0 AS bit), N'sarahyasser979@gmail.com');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessFailedCount', N'ConcurrencyStamp', N'Email', N'EmailConfirmed', N'FirstName', N'LastName', N'LockoutEnabled', N'LockoutEnd', N'NormalizedEmail', N'NormalizedUserName', N'PasswordHash', N'PhoneNumber', N'PhoneNumberConfirmed', N'SecurityStamp', N'TwoFactorEnabled', N'UserName') AND [object_id] = OBJECT_ID(N'[AspNetUsers]'))
    SET IDENTITY_INSERT [AspNetUsers] OFF;
2025-09-16 14:43:07.307 +03:00 [INF] Executed DbCommand (455ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessFailedCount', N'ConcurrencyStamp', N'Email', N'EmailConfirmed', N'FirstName', N'LastName', N'LockoutEnabled', N'LockoutEnd', N'NormalizedEmail', N'NormalizedUserName', N'PasswordHash', N'PhoneNumber', N'PhoneNumberConfirmed', N'SecurityStamp', N'TwoFactorEnabled', N'UserName') AND [object_id] = OBJECT_ID(N'[AspNetUsers]'))
    SET IDENTITY_INSERT [AspNetUsers] ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (N'Admin-USER-001', 0, N'f0a4d783-b8db-4065-9893-80aac5964cc2', N'sarahyasser979@gmail.com', CAST(1 AS bit), N'Sara', N'Yasser', CAST(0 AS bit), NULL, N'SARAHYASSER979@GMAIL.COM', N'SARAHYASSER979@GMAIL.COM', N'AQAAAAIAAYagAAAAEGuQHWvYN3toKLXDwx5ruxV1nU9WaLB9hQbbpuLN5AEHHeHYLM1QoDpVd6MLfJf+RA==', N'01159757952', CAST(0 AS bit), N'4c9ae149-f30a-4f28-af38-b0ae509f5f3a', CAST(0 AS bit), N'sarahyasser979@gmail.com');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessFailedCount', N'ConcurrencyStamp', N'Email', N'EmailConfirmed', N'FirstName', N'LastName', N'LockoutEnabled', N'LockoutEnd', N'NormalizedEmail', N'NormalizedUserName', N'PasswordHash', N'PhoneNumber', N'PhoneNumberConfirmed', N'SecurityStamp', N'TwoFactorEnabled', N'UserName') AND [object_id] = OBJECT_ID(N'[AspNetUsers]'))
    SET IDENTITY_INSERT [AspNetUsers] OFF;
2025-09-16 14:43:07.667 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:07.667 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:07.667 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:07.667 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916113225_v2', N'9.0.9');
2025-09-16 14:43:07.724 +03:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916113225_v2', N'9.0.9');
2025-09-16 14:43:07.724 +03:00 [INF] Applying migration '20250916113605_v2.1'.
2025-09-16 14:43:07.776 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:07.776 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:07.776 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:07.777 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
UPDATE [AspNetUsers] SET [ConcurrencyStamp] = N'88bda697-e323-414e-83b9-c83f25c3ac28', [PasswordHash] = N'AQAAAAIAAYagAAAAEIjJh6/LXD2Bg+3MJGc+CmiaE471FJWBEmlTQ/1OhqkFw0NIgG/beU7wkTfmnuQ/sQ==', [SecurityStamp] = N'ABC123'
WHERE [Id] = N'Admin-USER-001';
SELECT @@ROWCOUNT;
2025-09-16 14:43:07.805 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
UPDATE [AspNetUsers] SET [ConcurrencyStamp] = N'88bda697-e323-414e-83b9-c83f25c3ac28', [PasswordHash] = N'AQAAAAIAAYagAAAAEIjJh6/LXD2Bg+3MJGc+CmiaE471FJWBEmlTQ/1OhqkFw0NIgG/beU7wkTfmnuQ/sQ==', [SecurityStamp] = N'ABC123'
WHERE [Id] = N'Admin-USER-001';
SELECT @@ROWCOUNT;
2025-09-16 14:43:07.806 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:07.806 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:07.806 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:07.806 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916113605_v2.1', N'9.0.9');
2025-09-16 14:43:07.810 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916113605_v2.1', N'9.0.9');
2025-09-16 14:43:07.811 +03:00 [INF] Applying migration '20250916114247_v2.2'.
2025-09-16 14:43:07.848 +03:00 [DBG] Executing 3 update commands as a batch.
2025-09-16 14:43:07.851 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:07.851 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:07.852 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:07.852 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[AspNetRoles]'))
    SET IDENTITY_INSERT [AspNetRoles] ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'ADMIN-ROLE-001', NULL, N'Admin', N'ADMIN'),
(N'DOCTOR-ROLE-001', NULL, N'Doctor', N'DOCTOR'),
(N'PATIENT-ROLE-001', NULL, N'Patient', N'PATIENT');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[AspNetRoles]'))
    SET IDENTITY_INSERT [AspNetRoles] OFF;
2025-09-16 14:43:07.902 +03:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[AspNetRoles]'))
    SET IDENTITY_INSERT [AspNetRoles] ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'ADMIN-ROLE-001', NULL, N'Admin', N'ADMIN'),
(N'DOCTOR-ROLE-001', NULL, N'Doctor', N'DOCTOR'),
(N'PATIENT-ROLE-001', NULL, N'Patient', N'PATIENT');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[AspNetRoles]'))
    SET IDENTITY_INSERT [AspNetRoles] OFF;
2025-09-16 14:43:08.109 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:08.109 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:08.110 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:08.110 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
UPDATE [AspNetUsers] SET [ConcurrencyStamp] = N'STATIC-CONCURRENCY-STAMP-001', [SecurityStamp] = N'STATIC-SECURITY-STAMP-001'
WHERE [Id] = N'Admin-USER-001';
SELECT @@ROWCOUNT;
2025-09-16 14:43:08.153 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
UPDATE [AspNetUsers] SET [ConcurrencyStamp] = N'STATIC-CONCURRENCY-STAMP-001', [SecurityStamp] = N'STATIC-SECURITY-STAMP-001'
WHERE [Id] = N'Admin-USER-001';
SELECT @@ROWCOUNT;
2025-09-16 14:43:08.153 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:08.153 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:08.153 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:08.153 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'RoleId', N'UserId') AND [object_id] = OBJECT_ID(N'[AspNetUserRoles]'))
    SET IDENTITY_INSERT [AspNetUserRoles] ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (N'ADMIN-ROLE-001', N'Admin-USER-001');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'RoleId', N'UserId') AND [object_id] = OBJECT_ID(N'[AspNetUserRoles]'))
    SET IDENTITY_INSERT [AspNetUserRoles] OFF;
2025-09-16 14:43:08.258 +03:00 [INF] Executed DbCommand (104ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'RoleId', N'UserId') AND [object_id] = OBJECT_ID(N'[AspNetUserRoles]'))
    SET IDENTITY_INSERT [AspNetUserRoles] ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (N'ADMIN-ROLE-001', N'Admin-USER-001');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'RoleId', N'UserId') AND [object_id] = OBJECT_ID(N'[AspNetUserRoles]'))
    SET IDENTITY_INSERT [AspNetUserRoles] OFF;
2025-09-16 14:43:08.258 +03:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-09-16 14:43:08.258 +03:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:08.258 +03:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-09-16 14:43:08.258 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916114247_v2.2', N'9.0.9');
2025-09-16 14:43:08.262 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250916114247_v2.2', N'9.0.9');
2025-09-16 14:43:08.264 +03:00 [DBG] Committing transaction.
2025-09-16 14:43:08.269 +03:00 [DBG] Committed transaction.
2025-09-16 14:43:08.269 +03:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-09-16 14:43:08.269 +03:00 [DBG] Created DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:43:08.269 +03:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-09-16 14:43:08.269 +03:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-16 14:43:08.280 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-09-16 14:43:08.280 +03:00 [DBG] Disposing transaction.
2025-09-16 14:43:08.280 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:43:08.282 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (2ms).
2025-09-16 14:43:08.286 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:43:08.288 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:43:08.299 +03:00 [DBG] Disposed connection to database '' on server '' (11ms).
2025-09-16 14:43:15.576 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 14:43:15.733 +03:00 [DBG] Hosting starting
2025-09-16 14:43:15.752 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 14:43:15.773 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 14:43:15.783 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 14:43:15.805 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 14:43:15.813 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 14:43:15.822 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 14:43:15.826 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 14:43:15.837 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 14:43:15.841 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 14:43:15.858 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 14:43:15.866 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 14:43:15.870 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 14:43:15.873 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 14:43:16.072 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 14:43:16.073 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 14:43:16.085 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 14:43:16.086 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 14:43:16.086 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 14:43:16.086 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 14:43:16.094 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 14:43:16.095 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 14:43:16.122 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/ - null null
2025-09-16 14:43:16.311 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 14:43:16.311 +03:00 [INF] Hosting environment: Development
2025-09-16 14:43:16.311 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 14:43:16.311 +03:00 [DBG] Hosting started
2025-09-16 14:43:16.316 +03:00 [DBG] No candidates found for the request path '/'
2025-09-16 14:43:16.317 +03:00 [DBG] Request did not match any endpoints
2025-09-16 14:43:16.330 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 14:43:16.366 +03:00 [DBG] Connection ID "18086456113720459890" disconnecting.
2025-09-16 14:43:16.369 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/ - 404 null null 250.5035ms
2025-09-16 14:43:16.395 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/, Response status code: 404
2025-09-16 14:43:19.104 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 14:43:19.231 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 14:43:19.234 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 14:43:19.257 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 14:43:19.257 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 14:43:19.258 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 154.0431ms
2025-09-16 14:43:19.258 +03:00 [DBG] Connection ID "17582052946865029482" disconnecting.
2025-09-16 14:43:19.300 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 14:43:19.300 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 14:43:19.305 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.3452ms
2025-09-16 14:43:19.340 +03:00 [DBG] Connection ID "17365880169046212629" disconnecting.
2025-09-16 14:43:19.342 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 41.3686ms
2025-09-16 14:43:19.848 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 14:43:20.104 +03:00 [DBG] Connection ID "18374686494167139607" disconnecting.
2025-09-16 14:43:20.104 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 256.4952ms
2025-09-16 14:43:59.855 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Patient/register - application/json 173
2025-09-16 14:43:59.865 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/register'
2025-09-16 14:43:59.866 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)' with route pattern 'api/Patient/register' is valid for the request path '/api/Patient/register'
2025-09-16 14:43:59.867 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:43:59.871 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 14:43:59.874 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:43:59.900 +03:00 [INF] Route matched with {action = "Register", controller = "Patient"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.PatientDTOs.PatientDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 14:43:59.901 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 14:43:59.901 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 14:43:59.902 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 14:43:59.903 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 14:43:59.903 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 14:43:59.906 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 14:43:59.993 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:44:00.205 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 14:44:00.226 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 14:44:00.231 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 14:44:00.232 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' using the name '' in request data ...
2025-09-16 14:44:00.233 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 14:44:00.249 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'
2025-09-16 14:44:00.250 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:44:00.250 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:44:00.250 +03:00 [DBG] Attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 14:44:00.263 +03:00 [DBG] Done attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 14:44:01.146 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:44:01.147 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:44:01.899 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:44:02.213 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-09-16 14:44:02.874 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:44:02.975 +03:00 [DBG] Creating DbConnection.
2025-09-16 14:44:03.004 +03:00 [DBG] Created DbConnection. (24ms).
2025-09-16 14:44:03.010 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:03.520 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:03.525 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:44:03.530 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-16 14:44:03.550 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (25ms).
2025-09-16 14:44:03.558 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:44:03.621 +03:00 [INF] Executed DbCommand (63ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:44:03.632 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:44:03.639 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 12ms reading results.
2025-09-16 14:44:03.641 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:03.645 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (3ms).
2025-09-16 14:44:03.841 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-09-16 14:44:03.850 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:44:03.858 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:03.860 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:03.860 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:44:03.860 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:03.861 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:03.861 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 14:44:03.880 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 14:44:03.880 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:44:03.881 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:44:03.881 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:03.881 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:44:04.048 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:44:04.054 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:44:04.057 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:44:04.088 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:44:04.158 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.158 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.162 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:44:04.162 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.163 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.164 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-09-16 14:44:04.173 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-09-16 14:44:04.187 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.187 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 13ms reading results.
2025-09-16 14:44:04.189 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.189 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:44:04.198 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:44:04.200 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 14:44:04.207 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-09-16 14:44:04.220 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return (IdentityRole)
                                {
                                    IdentityRoleProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityRoleProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:44:04.225 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.226 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.226 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:44:04.226 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.226 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.226 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:44:04.243 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:44:04.262 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:44:04.270 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.270 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 26ms reading results.
2025-09-16 14:44:04.271 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.271 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:44:04.283 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-09-16 14:44:04.311 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return (IdentityUserRole<string>)
                                {
                                    IdentityUserRole`1Proxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityUserRole`1Proxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:44:04.318 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.318 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.318 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:44:04.318 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.319 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.319 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 14:44:04.373 +03:00 [INF] Executed DbCommand (55ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 14:44:04.379 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.379 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:44:04.380 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.380 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:44:04.395 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.395 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.396 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:44:04.396 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.396 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.396 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:44:04.428 +03:00 [INF] Executed DbCommand (32ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 14:44:04.429 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.429 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 14:44:04.429 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.429 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:44:04.513 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:44:04.516 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.516 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.516 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:44:04.516 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.516 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.517 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 14:44:04.526 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 14:44:04.529 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.529 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 2ms reading results.
2025-09-16 14:44:04.529 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.529 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:44:04.536 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:44:04.537 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:44:04.537 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:44:04.543 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:44:04.593 +03:00 [DBG] Executing 2 update commands as a batch.
2025-09-16 14:44:04.612 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.613 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.615 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 14:44:04.629 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 14:44:04.630 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:44:04.630 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.631 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 14:44:04.631 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 14:44:04.696 +03:00 [INF] Executed DbCommand (64ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 14:44:04.702 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.703 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 6ms reading results.
2025-09-16 14:44:04.706 +03:00 [DBG] Committing transaction.
2025-09-16 14:44:04.710 +03:00 [DBG] Committed transaction.
2025-09-16 14:44:04.712 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.712 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:44:04.730 +03:00 [DBG] Disposing transaction.
2025-09-16 14:44:04.731 +03:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:44:04.731 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:44:04.731 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-09-16 14:44:04.744 +03:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Patient.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:44:04.774 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:44:04.777 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:44:04.779 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 14:44:04.779 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 14:44:04.785 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 14:44:04.797 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.799 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.801 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:44:04.801 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:44:04.802 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 14:44:04.803 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Patients] ([DateOfBirth], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1);
2025-09-16 14:44:04.840 +03:00 [INF] Executed DbCommand (37ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Patients] ([DateOfBirth], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1);
2025-09-16 14:44:04.861 +03:00 [DBG] The foreign key property 'Patient.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-09-16 14:44:04.865 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.865 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 25ms reading results.
2025-09-16 14:44:04.866 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.866 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:44:04.870 +03:00 [DBG] An entity of type 'Patient' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:44:04.871 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 14:44:04.872 +03:00 [INF] New patient registered: user@example.com
2025-09-16 14:44:04.876 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 14:44:04.877 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 14:44:04.877 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 14:44:04.877 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 14:44:04.878 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 14:44:04.879 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 14:44:04.887 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API) in 4979.2608ms
2025-09-16 14:44:04.887 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 14:44:04.889 +03:00 [DBG] Connection ID "17365880169046212637" disconnecting.
2025-09-16 14:44:04.891 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:44:04.897 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:44:04.898 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 14:44:04.898 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Patient/register - 200 null application/json; charset=utf-8 5043.5514ms
2025-09-16 14:44:25.360 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Auth/login - application/json 62
2025-09-16 14:44:25.365 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-09-16 14:44:25.366 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-09-16 14:44:25.366 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 14:44:25.371 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 14:44:25.372 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 14:44:25.379 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(MedicalApp.BL.DTOs.AuthDTOs.LoginDTO) on controller MedicalApp.API.Controllers.AuthController (MedicalApp.API).
2025-09-16 14:44:25.379 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 14:44:25.380 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 14:44:25.380 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 14:44:25.380 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 14:44:25.380 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 14:44:25.381 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 14:44:25.385 +03:00 [INF] Executed action MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API) in 4.5964ms
2025-09-16 14:44:25.386 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 14:44:25.387 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Unable to resolve service for type 'MedicalApp.BL.Services.AuthService' while attempting to activate 'MedicalApp.API.Controllers.AuthController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method458(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 14:44:25.395 +03:00 [DBG] Connection ID "18302628900129210496" disconnecting.
2025-09-16 14:44:25.395 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Auth/login - 500 null text/plain; charset=utf-8 34.8649ms
2025-09-16 14:45:17.405 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 14:45:17.548 +03:00 [DBG] Hosting starting
2025-09-16 14:45:17.570 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 14:45:17.585 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 14:45:17.594 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 14:45:17.597 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 14:45:17.605 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 14:45:17.611 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 14:45:17.614 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 14:45:17.617 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 14:45:17.620 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 14:45:17.625 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 14:45:17.629 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 14:45:17.631 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 14:45:17.632 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 14:45:17.842 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 14:45:17.843 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 14:45:17.848 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 14:45:17.848 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 14:45:17.848 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 14:45:17.848 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 14:45:17.859 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 14:45:17.859 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 14:45:17.870 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 14:45:17.953 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 14:45:17.953 +03:00 [INF] Hosting environment: Development
2025-09-16 14:45:17.953 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 14:45:17.953 +03:00 [DBG] Hosting started
2025-09-16 14:45:18.072 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 14:45:18.074 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 14:45:18.097 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 14:45:18.098 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 14:45:18.099 +03:00 [DBG] Connection ID "17654110549492892255" disconnecting.
2025-09-16 14:45:18.103 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 236.1899ms
2025-09-16 14:45:18.142 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 14:45:18.142 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 14:45:18.148 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 4.707ms
2025-09-16 14:45:18.149 +03:00 [DBG] Connection ID "17437937758789173369" disconnecting.
2025-09-16 14:45:18.177 +03:00 [DBG] Connection ID "17365880164751245995" disconnecting.
2025-09-16 14:45:18.178 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.5297ms
2025-09-16 14:45:18.562 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 14:45:18.737 +03:00 [DBG] Connection ID "17870283331606675745" disconnecting.
2025-09-16 14:45:18.737 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 174.8835ms
2025-09-16 14:45:33.892 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Auth/login - application/json 62
2025-09-16 14:45:33.939 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-09-16 14:45:33.939 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-09-16 14:45:33.941 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 14:45:33.967 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 14:45:33.970 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 14:45:34.004 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(MedicalApp.BL.DTOs.AuthDTOs.LoginDTO) on controller MedicalApp.API.Controllers.AuthController (MedicalApp.API).
2025-09-16 14:45:34.005 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 14:45:34.005 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 14:45:34.007 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 14:45:34.007 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 14:45:34.007 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 14:45:34.009 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 14:45:34.105 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 14:45:34.137 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 14:45:34.140 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 14:45:34.142 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' using the name '' in request data ...
2025-09-16 14:45:34.143 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 14:45:34.153 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'
2025-09-16 14:45:34.153 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 14:45:34.153 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 14:45:34.154 +03:00 [DBG] Attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 14:45:34.160 +03:00 [DBG] Done attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 14:45:35.393 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 14:45:35.393 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 14:45:35.913 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 14:45:36.051 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-09-16 14:45:36.513 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 14:45:36.575 +03:00 [DBG] Creating DbConnection.
2025-09-16 14:45:36.601 +03:00 [DBG] Created DbConnection. (21ms).
2025-09-16 14:45:36.606 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:45:37.020 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:45:37.023 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:45:37.030 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-16 14:45:37.037 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-09-16 14:45:37.063 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:45:37.200 +03:00 [INF] Executed DbCommand (149ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 14:45:37.322 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 14:45:37.381 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:45:37.387 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 182ms reading results.
2025-09-16 14:45:37.390 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:45:37.394 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (4ms).
2025-09-16 14:45:37.608 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-09-16 14:45:37.711 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-09-16 14:45:37.715 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:45:37.717 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:45:37.717 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 14:45:37.717 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:45:37.717 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 14:45:37.718 +03:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-09-16 14:45:37.761 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-09-16 14:45:37.763 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 14:45:37.764 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 2ms reading results.
2025-09-16 14:45:37.764 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:45:37.764 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 14:45:38.203 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 14:45:38.219 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 14:45:38.219 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 14:45:38.220 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 14:45:38.221 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 14:45:38.221 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 14:45:38.231 +03:00 [INF] Executed action MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API) in 4218.6612ms
2025-09-16 14:45:38.231 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 14:45:38.272 +03:00 [DBG] Connection ID "17509995357122069071" disconnecting.
2025-09-16 14:45:38.265 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 14:45:38.304 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 14:45:38.307 +03:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-09-16 14:45:38.308 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Auth/login - 200 null application/json; charset=utf-8 4415.298ms
2025-09-16 19:01:21.056 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 19:01:21.057 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 1.5502ms
2025-09-16 19:01:21.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 19:01:21.183 +03:00 [DBG] Connection ID "17654110549492892261" disconnecting.
2025-09-16 19:01:21.190 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 103.1936ms
2025-09-16 19:01:21.451 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 19:01:21.472 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 21.8908ms
2025-09-16 19:01:29.451 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Patient/details/1 - null null
2025-09-16 19:01:29.453 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/details/1'
2025-09-16 19:01:29.454 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)' with route pattern 'api/Patient/details/{id:int}' is valid for the request path '/api/Patient/details/1'
2025-09-16 19:01:29.454 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 19:01:29.456 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:01:29.456 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 19:01:29.464 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 19:01:29.464 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:01:29.464 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:01:29.464 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:01:29.465 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:01:29.465 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:01:29.465 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:01:29.672 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 19:01:29.674 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:01:29.675 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:01:29.675 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:01:29.676 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:01:29.677 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:01:29.677 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:01:29.678 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:01:29.735 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:01:29.773 +03:00 [DBG] Compiling query expression: 
'DbSet<Patient>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 19:01:29.866 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Patient>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.UserId
        FROM Patients AS p
        WHERE p.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.UserId
        FROM Patients AS p
        WHERE p.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Patient entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Patient instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Patient);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Patient.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Patient)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]: 
                        {
                            return (Patient)
                            {
                                PatientProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (PatientProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<DateOfBirth>k__BackingField = dataReader.GetDateTime(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Patient)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 19:01:29.875 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:01:29.875 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:01:29.876 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:01:29.886 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:01:29.886 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:01:29.886 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:01:29.886 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:01:29.888 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 19:01:29.916 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 19:01:29.932 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:01:29.953 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:01:29.953 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 37ms reading results.
2025-09-16 19:01:29.954 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:01:29.955 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:01:29.956 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:01:29.956 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:01:29.956 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:01:29.956 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:01:29.957 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:01:29.957 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.PatientProxy'.
2025-09-16 19:01:30.017 +03:00 [DBG] The navigation 'PatientProxy.User' is being lazy-loaded.
2025-09-16 19:01:30.024 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .Where(e => EF.Property<string>(e, "Id") == __p_0)
    .AsTracking()
    .FirstOrDefault()'
2025-09-16 19:01:30.034 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ApplicationUser>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ApplicationUser entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ApplicationUser instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ApplicationUser);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ApplicationUser)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                        {
                            return (ApplicationUser)
                            {
                                ApplicationUserProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetString(0);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                instance.<LastName>k__BackingField = dataReader.GetString(6);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(ApplicationUser)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 19:01:30.041 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:01:30.041 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:01:30.046 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:01:30.047 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-09-16 19:01:30.047 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 19:01:30.048 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:01:30.086 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:01:30.101 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:01:30.103 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:01:30.104 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:01:30.104 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 17ms reading results.
2025-09-16 19:01:30.104 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:01:30.104 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:01:30.146 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API) in 681.0556ms
2025-09-16 19:01:30.146 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 19:01:30.147 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:01:30.147 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:01:30.147 +03:00 [DBG] Connection ID "17654110549492892263" disconnecting.
2025-09-16 19:01:30.147 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:01:30.148 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Patient/details/1 - 200 null application/json; charset=utf-8 696.5985ms
2025-09-16 19:02:17.273 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Patient/update/1 - application/json 34
2025-09-16 19:02:17.274 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/update/1'
2025-09-16 19:02:17.274 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)' with route pattern 'api/Patient/update/{id:int}' is valid for the request path '/api/Patient/update/1'
2025-09-16 19:02:17.274 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:02:17.278 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:02:17.278 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:02:17.281 +03:00 [INF] Route matched with {action = "Update", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.PatientDTOs.PatientDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 19:02:17.282 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:02:17.282 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:02:17.282 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:02:17.282 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:02:17.282 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:02:17.282 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:02:17.302 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:02:17.302 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:02:17.303 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:02:17.303 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:02:17.303 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:02:17.303 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:02:17.303 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:02:17.303 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 19:02:17.304 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' using the name '' in request data ...
2025-09-16 19:02:17.304 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 19:02:17.694 +03:00 [DBG] JSON input formatter threw an exception: The JSON object contains a trailing comma at the end which is not supported in this mode. Change the reader options. Path: $ | LineNumber: 2 | BytePositionInLine: 0.
2025-09-16 19:02:17.698 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:02:17.698 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:02:17.698 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 19:02:17.706 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:02:17.706 +03:00 [DBG] The request has model state errors, returning an error response.
2025-09-16 19:02:17.711 +03:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-09-16 19:02:17.711 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:02:17.711 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:02:17.712 +03:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-09-16 19:02:17.712 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-09-16 19:02:17.712 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-09-16 19:02:17.741 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API) in 458.5152ms
2025-09-16 19:02:17.741 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:02:17.741 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Patient/update/1 - 400 null application/problem+json; charset=utf-8 468.4485ms
2025-09-16 19:02:17.741 +03:00 [DBG] Connection ID "18014398515387565631" disconnecting.
2025-09-16 19:02:32.001 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Patient/update/1 - application/json 33
2025-09-16 19:02:32.001 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/update/1'
2025-09-16 19:02:32.001 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)' with route pattern 'api/Patient/update/{id:int}' is valid for the request path '/api/Patient/update/1'
2025-09-16 19:02:32.002 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:02:32.002 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:02:32.002 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:02:32.002 +03:00 [INF] Route matched with {action = "Update", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.PatientDTOs.PatientDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 19:02:32.002 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:02:32.002 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:02:32.002 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:02:32.003 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:02:32.003 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:02:32.003 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:02:32.005 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:02:32.005 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:02:32.006 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:02:32.006 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:02:32.006 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:02:32.006 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:02:32.006 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:02:32.006 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 19:02:32.006 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' using the name '' in request data ...
2025-09-16 19:02:32.006 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 19:02:32.007 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'
2025-09-16 19:02:32.007 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:02:32.007 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:02:32.007 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 19:02:32.014 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:02:32.014 +03:00 [DBG] The request has model state errors, returning an error response.
2025-09-16 19:02:32.014 +03:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-09-16 19:02:32.015 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:02:32.015 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:02:32.015 +03:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-09-16 19:02:32.015 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-09-16 19:02:32.015 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-09-16 19:02:32.016 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API) in 13.5923ms
2025-09-16 19:02:32.016 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:02:32.017 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Patient/update/1 - 400 null application/problem+json; charset=utf-8 15.5619ms
2025-09-16 19:03:55.075 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Patient/update/1 - application/json 173
2025-09-16 19:03:55.076 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/update/1'
2025-09-16 19:03:55.076 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)' with route pattern 'api/Patient/update/{id:int}' is valid for the request path '/api/Patient/update/1'
2025-09-16 19:03:55.076 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:03:55.076 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:03:55.076 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:03:55.076 +03:00 [INF] Route matched with {action = "Update", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.PatientDTOs.PatientDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 19:03:55.076 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:03:55.076 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:03:55.077 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:03:55.077 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:03:55.077 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:03:55.077 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:03:55.078 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:03:55.078 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:03:55.078 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:03:55.078 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:03:55.079 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:03:55.079 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:03:55.079 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:03:55.079 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 19:03:55.079 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' using the name '' in request data ...
2025-09-16 19:03:55.079 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 19:03:55.086 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'
2025-09-16 19:03:55.086 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:03:55.086 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:03:55.086 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 19:03:55.087 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:03:55.114 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:03:56.528 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:03:56.533 +03:00 [DBG] Created DbConnection. (5ms).
2025-09-16 19:03:56.533 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.534 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.534 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:03:56.534 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:03:56.534 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:03:56.534 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 19:03:56.579 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 19:03:56.580 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:03:56.580 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.580 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 19:03:56.580 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.581 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:03:56.601 +03:00 [DBG] An entity of type 'Patient' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:03:56.604 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:03:56.617 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:03:56.621 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:03:56.769 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.770 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.771 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:03:56.771 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:03:56.772 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 19:03:56.773 +03:00 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Patients] SET [DateOfBirth] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:03:56.832 +03:00 [INF] Executed DbCommand (59ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Patients] SET [DateOfBirth] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:03:56.838 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.840 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 7ms reading results.
2025-09-16 19:03:56.840 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.841 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:03:56.845 +03:00 [DBG] An entity of type 'Patient' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:03:56.847 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 19:03:56.847 +03:00 [DBG] The navigation 'PatientProxy.User' is being lazy-loaded.
2025-09-16 19:03:56.848 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.848 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.848 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:03:56.848 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:03:56.848 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:03:56.849 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:03:56.867 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:03:56.869 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:03:56.869 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:03:56.869 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.869 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 19:03:56.870 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.870 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:03:56.875 +03:00 [INF] Patient updated: Id=1, Email=user@example.com
2025-09-16 19:03:56.880 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-09-16 19:03:56.880 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API) in 1802.9856ms
2025-09-16 19:03:56.880 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:03:56.882 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:03:56.882 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:03:56.882 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:03:56.882 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Patient/update/1 - 200 null null 1807.2009ms
2025-09-16 19:04:14.822 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Patient/details/1 - null null
2025-09-16 19:04:14.822 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/details/1'
2025-09-16 19:04:14.823 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)' with route pattern 'api/Patient/details/{id:int}' is valid for the request path '/api/Patient/details/1'
2025-09-16 19:04:14.823 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 19:04:14.823 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:04:14.823 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 19:04:14.823 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 19:04:14.823 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:04:14.823 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:04:14.823 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:04:14.823 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:04:14.823 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:04:14.823 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:04:14.824 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:04:14.824 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:04:14.824 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:04:14.824 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:04:14.824 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:04:14.824 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:04:14.824 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:04:14.825 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:04:14.826 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:04:14.826 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:04:14.826 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:14.826 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:14.826 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:04:14.826 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:14.827 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:14.827 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 19:04:14.835 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 19:04:14.835 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:04:14.836 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:04:14.836 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:04:14.836 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:14.836 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:04:14.837 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:04:14.837 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:04:14.837 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:04:14.837 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:04:14.837 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:04:14.837 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.PatientProxy'.
2025-09-16 19:04:14.837 +03:00 [DBG] The navigation 'PatientProxy.User' is being lazy-loaded.
2025-09-16 19:04:14.838 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:14.838 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:14.838 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:04:14.838 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:14.838 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:14.839 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:04:14.843 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:04:14.844 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:04:14.844 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:04:14.844 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:04:14.844 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:04:14.844 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:14.844 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:04:14.845 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API) in 21.2822ms
2025-09-16 19:04:14.845 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 19:04:14.845 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:04:14.845 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:14.845 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:04:14.845 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Patient/details/1 - 200 null application/json; charset=utf-8 22.9707ms
2025-09-16 19:04:21.977 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Patient/details/1 - null null
2025-09-16 19:04:21.977 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/details/1'
2025-09-16 19:04:21.978 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)' with route pattern 'api/Patient/details/{id:int}' is valid for the request path '/api/Patient/details/1'
2025-09-16 19:04:21.978 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 19:04:21.978 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:04:21.978 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 19:04:21.979 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 19:04:21.979 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:04:21.979 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:04:21.979 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:04:21.979 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:04:21.979 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:04:21.980 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:04:21.981 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:04:21.981 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:04:21.981 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:04:21.981 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:04:21.981 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:04:21.981 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:04:21.982 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:04:21.983 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:04:21.984 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:04:21.984 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:04:21.984 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:21.984 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:21.984 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:04:21.985 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:21.985 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:21.985 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 19:04:21.988 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 19:04:21.989 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:04:21.989 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:04:21.989 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:04:21.989 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:21.989 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:04:21.990 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:04:21.990 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:04:21.990 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:04:21.990 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:04:21.990 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:04:21.990 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.PatientProxy'.
2025-09-16 19:04:21.990 +03:00 [DBG] The navigation 'PatientProxy.User' is being lazy-loaded.
2025-09-16 19:04:21.991 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:21.991 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:21.991 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:04:21.991 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:21.991 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:21.991 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:04:21.996 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:04:21.997 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:04:21.997 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:04:21.997 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:04:21.997 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:04:21.997 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:21.997 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:04:21.998 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API) in 18.1298ms
2025-09-16 19:04:21.998 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 19:04:21.998 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:04:21.998 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:21.998 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:04:21.998 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Patient/details/1 - 200 null application/json; charset=utf-8 21.5161ms
2025-09-16 19:04:30.407 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Patient/update/1 - application/json 173
2025-09-16 19:04:30.407 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/update/1'
2025-09-16 19:04:30.407 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)' with route pattern 'api/Patient/update/{id:int}' is valid for the request path '/api/Patient/update/1'
2025-09-16 19:04:30.408 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:04:30.408 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:04:30.408 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:04:30.408 +03:00 [INF] Route matched with {action = "Update", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.PatientDTOs.PatientDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 19:04:30.409 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:04:30.409 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:04:30.409 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:04:30.409 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:04:30.409 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:04:30.409 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:04:30.409 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 19:04:30.410 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:04:30.410 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:04:30.410 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:04:30.410 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:04:30.410 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:04:30.410 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:04:30.410 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 19:04:30.410 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' using the name '' in request data ...
2025-09-16 19:04:30.410 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 19:04:30.410 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'
2025-09-16 19:04:30.411 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:04:30.411 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:04:30.411 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO' ...
2025-09-16 19:04:30.411 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.PatientDTO'.
2025-09-16 19:04:30.414 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:04:30.416 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:04:30.416 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:04:30.417 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.417 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.417 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:04:30.417 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:30.417 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:30.417 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 19:04:30.422 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 19:04:30.422 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:04:30.422 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.422 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:04:30.422 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.423 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:04:30.424 +03:00 [DBG] An entity of type 'Patient' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:04:30.424 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:04:30.424 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:04:30.424 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:04:30.426 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.426 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.426 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:04:30.426 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:30.426 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:30.426 +03:00 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Patients] SET [DateOfBirth] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:04:30.434 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Patients] SET [DateOfBirth] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:04:30.434 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.434 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:04:30.435 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.435 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:04:30.435 +03:00 [DBG] An entity of type 'Patient' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:04:30.435 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 19:04:30.435 +03:00 [DBG] The navigation 'PatientProxy.User' is being lazy-loaded.
2025-09-16 19:04:30.436 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.436 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.436 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:04:30.436 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:30.436 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:04:30.436 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:04:30.440 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:04:30.441 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:04:30.441 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:04:30.441 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.441 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:04:30.441 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.441 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:04:30.441 +03:00 [INF] Patient updated: Id=1, Email=user@example.com
2025-09-16 19:04:30.442 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-09-16 19:04:30.442 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API) in 32.6869ms
2025-09-16 19:04:30.442 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 19:04:30.442 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:04:30.442 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:04:30.442 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:04:30.442 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Patient/update/1 - 200 null null 35.5173ms
2025-09-16 19:05:15.479 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Doctor/register - application/json 170
2025-09-16 19:05:15.479 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/register'
2025-09-16 19:05:15.480 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)' with route pattern 'api/Doctor/register' is valid for the request path '/api/Doctor/register'
2025-09-16 19:05:15.480 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 19:05:15.480 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:05:15.480 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 19:05:15.488 +03:00 [INF] Route matched with {action = "Register", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:05:15.488 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:05:15.488 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:05:15.488 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:05:15.488 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:05:15.488 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:05:15.489 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:05:15.490 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:05:15.491 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO' ...
2025-09-16 19:05:15.491 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO' using the name '' in request data ...
2025-09-16 19:05:15.491 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 19:05:15.494 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO'
2025-09-16 19:05:15.494 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO'.
2025-09-16 19:05:15.495 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO'.
2025-09-16 19:05:15.495 +03:00 [DBG] Attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO' ...
2025-09-16 19:05:15.497 +03:00 [DBG] Done attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO'.
2025-09-16 19:05:15.500 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:05:15.501 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:05:15.501 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:05:15.502 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:15.502 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:15.502 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:05:15.502 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:15.502 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:15.503 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 19:05:15.509 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 19:05:15.509 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:05:15.510 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:05:15.510 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:15.510 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:05:16.765 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-09-16 19:05:16.777 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 19:05:16.784 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.785 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.785 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:05:16.785 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:16.785 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:16.785 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 19:05:16.799 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 19:05:16.799 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.799 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:05:16.799 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.800 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:05:16.825 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:16.828 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:05:16.829 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:05:16.844 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:05:16.865 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.865 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.872 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:05:16.872 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:16.873 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 19:05:16.874 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-09-16 19:05:16.883 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-09-16 19:05:16.887 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.888 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 4ms reading results.
2025-09-16 19:05:16.890 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.891 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:05:16.894 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:16.896 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 19:05:16.905 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-09-16 19:05:16.919 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return (IdentityRole)
                                {
                                    IdentityRoleProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityRoleProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 19:05:16.940 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.941 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.941 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:05:16.942 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:16.942 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:16.942 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 19:05:16.948 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 19:05:16.958 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:16.966 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.966 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 18ms reading results.
2025-09-16 19:05:16.966 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:16.966 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:05:16.974 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-09-16 19:05:16.985 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return (IdentityUserRole<string>)
                                {
                                    IdentityUserRole`1Proxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityUserRole`1Proxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 19:05:17.005 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.007 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.007 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:05:17.007 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:17.008 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 19:05:17.008 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 19:05:17.013 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 19:05:17.014 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.014 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:05:17.014 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.014 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:05:17.018 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.019 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.020 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:05:17.020 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:17.021 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:17.021 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 19:05:17.024 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 19:05:17.024 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.024 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:05:17.025 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.025 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:05:17.033 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:17.034 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.034 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.035 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:05:17.035 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:17.035 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:17.035 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 19:05:17.036 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 19:05:17.038 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.038 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 19:05:17.039 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.040 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (1ms).
2025-09-16 19:05:17.045 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:17.045 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:05:17.045 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:05:17.049 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:05:17.105 +03:00 [DBG] Executing 2 update commands as a batch.
2025-09-16 19:05:17.106 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.106 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.108 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 19:05:17.120 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 19:05:17.122 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:05:17.122 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:17.124 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-16 19:05:17.124 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 19:05:17.142 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 19:05:17.149 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.149 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 6ms reading results.
2025-09-16 19:05:17.160 +03:00 [DBG] Committing transaction.
2025-09-16 19:05:17.168 +03:00 [DBG] Committed transaction.
2025-09-16 19:05:17.171 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.172 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:05:17.176 +03:00 [DBG] Disposing transaction.
2025-09-16 19:05:17.177 +03:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:17.177 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:17.178 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-09-16 19:05:17.197 +03:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Doctor.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:17.224 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:17.225 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:17.226 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:05:17.226 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:05:17.228 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:05:17.244 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.245 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.245 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:05:17.245 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:17.245 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:17.245 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Doctors] ([Specialization], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1);
2025-09-16 19:05:17.255 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Doctors] ([Specialization], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1);
2025-09-16 19:05:17.271 +03:00 [DBG] The foreign key property 'Doctor.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-09-16 19:05:17.278 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.278 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 23ms reading results.
2025-09-16 19:05:17.278 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.279 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:05:17.283 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:17.283 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 19:05:17.284 +03:00 [INF] New doctor registered: sama@example.com
2025-09-16 19:05:17.285 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:05:17.285 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:05:17.286 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:05:17.286 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:05:17.286 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:05:17.286 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 19:05:17.292 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API) in 1803.3758ms
2025-09-16 19:05:17.292 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 19:05:17.293 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:05:17.293 +03:00 [DBG] Connection ID "18014398515387565633" disconnecting.
2025-09-16 19:05:17.299 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:17.299 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:05:17.299 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Doctor/register - 200 null application/json; charset=utf-8 1820.152ms
2025-09-16 19:05:26.205 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - null null
2025-09-16 19:05:26.207 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/details/1'
2025-09-16 19:05:26.207 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)' with route pattern 'api/Doctor/details/{id:int}' is valid for the request path '/api/Doctor/details/1'
2025-09-16 19:05:26.207 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:05:26.207 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:05:26.208 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:05:26.210 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:05:26.211 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:05:26.211 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:05:26.211 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:05:26.211 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:05:26.211 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:05:26.211 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:05:26.212 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:05:26.212 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:05:26.212 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:05:26.212 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:05:26.212 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:05:26.212 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:05:26.212 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:05:26.214 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:05:26.219 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 19:05:26.231 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Specialization>k__BackingField = dataReader.GetString(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 19:05:26.236 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:05:26.236 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:05:26.236 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:26.236 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:26.236 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:05:26.236 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:26.236 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:26.236 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:05:26.275 +03:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:05:26.276 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:26.276 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:05:26.276 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:05:26.276 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:26.276 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:05:26.276 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:05:26.276 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:05:26.276 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:05:26.277 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:05:26.277 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:05:26.277 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.DoctorProxy'.
2025-09-16 19:05:26.278 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 19:05:26.279 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:26.279 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:26.279 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:05:26.279 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:26.279 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:05:26.279 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:05:26.281 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:05:26.282 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:26.282 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:05:26.282 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:05:26.283 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 19:05:26.283 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:26.283 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:05:26.284 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API) in 72.7981ms
2025-09-16 19:05:26.284 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:05:26.284 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:05:26.284 +03:00 [DBG] Connection ID "18374686494167139644" disconnecting.
2025-09-16 19:05:26.284 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:05:26.284 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:05:26.285 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - 200 null application/json; charset=utf-8 79.3998ms
2025-09-16 19:06:13.844 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/1 - application/json 170
2025-09-16 19:06:13.844 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/1'
2025-09-16 19:06:13.844 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/1'
2025-09-16 19:06:13.844 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:06:13.844 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:06:13.844 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:06:13.846 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:06:13.846 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:06:13.846 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:06:13.846 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:06:13.847 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:06:13.847 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:06:13.847 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:06:13.849 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:06:13.849 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:06:13.850 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:06:13.850 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:06:13.850 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:06:13.850 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:06:13.850 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:06:13.850 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO' ...
2025-09-16 19:06:13.850 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO' using the name '' in request data ...
2025-09-16 19:06:13.850 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 19:06:13.850 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO'
2025-09-16 19:06:13.850 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO'.
2025-09-16 19:06:13.850 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO'.
2025-09-16 19:06:13.850 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO' ...
2025-09-16 19:06:13.851 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.DoctorDTO'.
2025-09-16 19:06:13.852 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:06:13.853 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:06:13.853 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:06:13.853 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.853 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.853 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:06:13.853 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:06:13.853 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:06:13.853 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:06:13.871 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:06:13.871 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:06:13.872 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.872 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:06:13.872 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.872 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:06:13.875 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:06:13.875 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:06:13.875 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:06:13.875 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:06:13.876 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.876 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.876 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:06:13.876 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:06:13.876 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:06:13.876 +03:00 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:06:13.881 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:06:13.881 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.881 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:06:13.881 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.881 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:06:13.881 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:06:13.881 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 19:06:13.882 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 19:06:13.882 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.882 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.882 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:06:13.882 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:06:13.882 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:06:13.883 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:06:13.886 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:06:13.887 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:06:13.887 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:06:13.887 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.887 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:06:13.887 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.887 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:06:13.887 +03:00 [INF] Doctor updated: Id=1, Email=sama@example.com
2025-09-16 19:06:13.887 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-09-16 19:06:13.887 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 40.8536ms
2025-09-16 19:06:13.888 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:06:13.888 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:06:13.888 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:13.888 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:06:13.888 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/1 - 200 null null 44.2045ms
2025-09-16 19:06:34.812 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - null null
2025-09-16 19:06:34.812 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/details/1'
2025-09-16 19:06:34.812 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)' with route pattern 'api/Doctor/details/{id:int}' is valid for the request path '/api/Doctor/details/1'
2025-09-16 19:06:34.813 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:06:34.813 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:06:34.813 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:06:34.813 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:06:34.813 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:06:34.813 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:06:34.813 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:06:34.813 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:06:34.814 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:06:34.814 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:06:34.814 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:06:34.814 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:06:34.815 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:06:34.815 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:06:34.815 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:06:34.815 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:06:34.816 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:06:34.818 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:06:34.820 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:06:34.820 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:06:34.820 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:34.820 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:34.821 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:06:34.821 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:06:34.821 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:06:34.821 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:06:34.825 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:06:34.825 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:06:34.826 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:06:34.826 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:06:34.826 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:34.826 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:06:34.826 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:06:34.826 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:06:34.826 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:06:34.826 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:06:34.826 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:06:34.826 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.DoctorProxy'.
2025-09-16 19:06:34.826 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 19:06:34.827 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:34.827 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:34.827 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:06:34.827 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:06:34.827 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:06:34.828 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:06:34.830 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:06:34.831 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:06:34.831 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:06:34.831 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:06:34.831 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:06:34.831 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:34.831 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:06:34.832 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API) in 18.2306ms
2025-09-16 19:06:34.832 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:06:34.832 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:06:34.832 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:06:34.832 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:06:34.832 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - 200 null application/json; charset=utf-8 20.2396ms
2025-09-16 19:37:03.895 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 19:37:04.039 +03:00 [DBG] Hosting starting
2025-09-16 19:37:04.094 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 19:37:04.107 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 19:37:04.114 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 19:37:04.118 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 19:37:04.122 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 19:37:04.128 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 19:37:04.130 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 19:37:04.132 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 19:37:04.142 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 19:37:04.147 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 19:37:04.150 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 19:37:04.152 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 19:37:04.153 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 19:37:04.295 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 19:37:04.296 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 19:37:04.314 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 19:37:04.314 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 19:37:04.314 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 19:37:04.315 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 19:37:04.342 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 19:37:04.342 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 19:37:04.437 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 19:37:04.608 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 19:37:04.608 +03:00 [INF] Hosting environment: Development
2025-09-16 19:37:04.609 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 19:37:04.609 +03:00 [DBG] Hosting started
2025-09-16 19:37:04.750 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 19:37:04.753 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 19:37:04.795 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 19:37:04.816 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 19:37:04.818 +03:00 [DBG] Connection ID "18086456113720459924" disconnecting.
2025-09-16 19:37:04.845 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 19:37:04.845 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 19:37:04.821 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 386.1814ms
2025-09-16 19:37:04.849 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.0029ms
2025-09-16 19:37:04.881 +03:00 [DBG] Connection ID "18014398523977498629" disconnecting.
2025-09-16 19:37:04.883 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.9539ms
2025-09-16 19:37:05.388 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 19:37:05.596 +03:00 [DBG] Connection ID "17509995357122069075" disconnecting.
2025-09-16 19:37:05.596 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 207.571ms
2025-09-16 19:38:05.163 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - null null
2025-09-16 19:38:05.195 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/details/1'
2025-09-16 19:38:05.196 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)' with route pattern 'api/Doctor/details/{id:int}' is valid for the request path '/api/Doctor/details/1'
2025-09-16 19:38:05.198 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:38:05.208 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:38:05.210 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:38:05.229 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:38:05.231 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:38:05.231 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:38:05.232 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:38:05.232 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:38:05.232 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:38:05.234 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:38:06.762 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 19:38:06.991 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 19:38:07.002 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:38:07.009 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:38:07.014 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:38:07.014 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:38:07.014 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:38:07.015 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:38:07.016 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:38:07.463 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 19:38:07.464 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 19:38:07.869 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:38:07.935 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 19:38:08.390 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Specialization>k__BackingField = dataReader.GetString(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 19:38:08.428 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:38:08.446 +03:00 [DBG] Created DbConnection. (15ms).
2025-09-16 19:38:08.448 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:38:09.035 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:38:09.039 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:38:09.045 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-16 19:38:09.053 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-09-16 19:38:09.061 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:38:09.146 +03:00 [INF] Executed DbCommand (80ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:38:09.194 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:38:09.219 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:38:09.226 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 75ms reading results.
2025-09-16 19:38:09.229 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:38:09.235 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (6ms).
2025-09-16 19:38:09.237 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:38:09.239 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:38:09.239 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:38:09.239 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:38:09.240 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:38:09.241 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.DoctorProxy'.
2025-09-16 19:38:09.271 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 19:38:09.279 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .Where(e => EF.Property<string>(e, "Id") == __p_0)
    .AsTracking()
    .FirstOrDefault()'
2025-09-16 19:38:09.303 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ApplicationUser>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ApplicationUser entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ApplicationUser instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ApplicationUser);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ApplicationUser)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                        {
                            return (ApplicationUser)
                            {
                                ApplicationUserProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetString(0);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                instance.<LastName>k__BackingField = dataReader.GetString(6);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(ApplicationUser)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 19:38:09.311 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:38:09.312 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:38:09.312 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:38:09.313 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:38:09.314 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 19:38:09.314 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:38:09.323 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:38:09.346 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:38:09.349 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:38:09.385 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:38:09.385 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 61ms reading results.
2025-09-16 19:38:09.385 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:38:09.385 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:38:09.402 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API) in 4164.5442ms
2025-09-16 19:38:09.402 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:38:09.403 +03:00 [DBG] Connection ID "17437937763084140618" disconnecting.
2025-09-16 19:38:09.405 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:38:09.415 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:38:09.418 +03:00 [DBG] Disposed connection to database '' on server '' (3ms).
2025-09-16 19:38:09.419 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Doctor/details/1 - 200 null application/json; charset=utf-8 4255.5631ms
2025-09-16 19:41:17.753 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 19:41:17.940 +03:00 [DBG] Hosting starting
2025-09-16 19:41:17.957 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 19:41:17.978 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 19:41:17.984 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 19:41:17.989 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 19:41:17.996 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 19:41:18.002 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 19:41:18.006 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 19:41:18.009 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 19:41:18.011 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 19:41:18.018 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 19:41:18.021 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 19:41:18.023 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 19:41:18.024 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 19:41:18.097 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 19:41:18.099 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 19:41:18.103 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 19:41:18.103 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 19:41:18.103 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 19:41:18.103 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 19:41:18.120 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 19:41:18.121 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 19:41:18.156 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 19:41:18.234 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 19:41:18.234 +03:00 [INF] Hosting environment: Development
2025-09-16 19:41:18.234 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 19:41:18.234 +03:00 [DBG] Hosting started
2025-09-16 19:41:18.355 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 19:41:18.357 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 19:41:18.389 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 19:41:18.390 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 19:41:18.391 +03:00 [DBG] Connection ID "17654110549492892463" disconnecting.
2025-09-16 19:41:18.394 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 240.027ms
2025-09-16 19:41:18.439 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 19:41:18.439 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 19:41:18.444 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.4393ms
2025-09-16 19:41:18.478 +03:00 [DBG] Connection ID "17437937758789173692" disconnecting.
2025-09-16 19:41:18.480 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.5414ms
2025-09-16 19:41:18.804 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 19:41:19.015 +03:00 [DBG] Connection ID "18230571306091282972" disconnecting.
2025-09-16 19:41:19.015 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 210.4292ms
2025-09-16 19:41:58.345 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Doctor/register - application/json 165
2025-09-16 19:41:58.389 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/register'
2025-09-16 19:41:58.390 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)' with route pattern 'api/Doctor/register' is valid for the request path '/api/Doctor/register'
2025-09-16 19:41:58.391 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 19:41:58.403 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:41:58.406 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 19:41:58.429 +03:00 [INF] Route matched with {action = "Register", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.DoctorDTOs.RegisterDoctorDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:41:58.430 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:41:58.431 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:41:58.432 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:41:58.432 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:41:58.432 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:41:58.433 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:41:58.524 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 19:41:58.779 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 19:41:58.794 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:41:58.800 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.RegisterDoctorDTO' ...
2025-09-16 19:41:58.802 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.RegisterDoctorDTO' using the name '' in request data ...
2025-09-16 19:41:58.806 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 19:41:58.823 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.RegisterDoctorDTO'
2025-09-16 19:41:58.824 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.RegisterDoctorDTO'.
2025-09-16 19:41:58.824 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.RegisterDoctorDTO'.
2025-09-16 19:41:58.824 +03:00 [DBG] Attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.RegisterDoctorDTO' ...
2025-09-16 19:41:58.834 +03:00 [DBG] Done attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.RegisterDoctorDTO'.
2025-09-16 19:41:59.225 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 19:41:59.225 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 19:41:59.623 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:41:59.691 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-09-16 19:42:00.029 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 19:42:00.109 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:42:00.132 +03:00 [DBG] Created DbConnection. (18ms).
2025-09-16 19:42:00.135 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.334 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.338 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:42:00.345 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-09-16 19:42:00.352 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-09-16 19:42:00.363 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 19:42:00.422 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 19:42:00.437 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.445 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 16ms reading results.
2025-09-16 19:42:00.447 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.451 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (3ms).
2025-09-16 19:42:00.759 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-09-16 19:42:00.767 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 19:42:00.776 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.777 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.778 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:42:00.778 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:00.778 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:00.778 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 19:42:00.788 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 19:42:00.788 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.789 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:42:00.789 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.789 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:42:00.871 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:00.875 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:42:00.877 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:42:00.894 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:42:00.944 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.944 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.947 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:42:00.947 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:00.948 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:00.949 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-09-16 19:42:00.954 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-09-16 19:42:00.958 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.958 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 3ms reading results.
2025-09-16 19:42:00.959 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.959 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:42:00.966 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:00.967 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 19:42:00.973 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-09-16 19:42:00.983 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return (IdentityRole)
                                {
                                    IdentityRoleProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityRoleProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 19:42:00.988 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.988 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:00.988 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:42:00.988 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:00.989 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:00.989 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 19:42:01.000 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 19:42:01.014 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:01.021 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.021 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 20ms reading results.
2025-09-16 19:42:01.021 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.021 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:42:01.031 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-09-16 19:42:01.055 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return (IdentityUserRole<string>)
                                {
                                    IdentityUserRole`1Proxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityUserRole`1Proxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 19:42:01.062 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.063 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.063 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:42:01.063 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:01.063 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:01.063 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 19:42:01.071 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 19:42:01.072 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.072 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:42:01.072 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.072 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:42:01.077 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.077 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.078 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:42:01.078 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:01.078 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:01.078 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 19:42:01.080 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 19:42:01.080 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.080 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:42:01.081 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.081 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:42:01.091 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:01.092 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.093 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.093 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:42:01.093 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:01.093 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:01.094 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 19:42:01.095 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 19:42:01.097 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.097 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 19:42:01.097 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.098 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:42:01.101 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:01.102 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:42:01.102 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:42:01.106 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:42:01.119 +03:00 [DBG] Executing 2 update commands as a batch.
2025-09-16 19:42:01.122 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.123 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.124 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 19:42:01.129 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 19:42:01.130 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:42:01.130 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:01.131 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 19:42:01.131 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 19:42:01.139 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 19:42:01.143 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.143 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 3ms reading results.
2025-09-16 19:42:01.145 +03:00 [DBG] Committing transaction.
2025-09-16 19:42:01.148 +03:00 [DBG] Committed transaction.
2025-09-16 19:42:01.149 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.149 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:42:01.151 +03:00 [DBG] Disposing transaction.
2025-09-16 19:42:01.151 +03:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:01.151 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:01.152 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-09-16 19:42:01.162 +03:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Doctor.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:01.178 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:01.179 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:01.180 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:42:01.180 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:42:01.182 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:42:01.189 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.191 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.192 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:42:01.193 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:01.193 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:01.193 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Doctors] ([Specialization], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1);
2025-09-16 19:42:01.198 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Doctors] ([Specialization], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1);
2025-09-16 19:42:01.205 +03:00 [DBG] The foreign key property 'Doctor.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-09-16 19:42:01.209 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.210 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 11ms reading results.
2025-09-16 19:42:01.210 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.211 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:42:01.213 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:01.213 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 19:42:01.214 +03:00 [INF] New doctor registered: hi@example.com
2025-09-16 19:42:01.218 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:42:01.220 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:42:01.220 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:42:01.220 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:42:01.221 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:42:01.223 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 19:42:01.230 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API) in 2795.1352ms
2025-09-16 19:42:01.230 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Register (MedicalApp.API)'
2025-09-16 19:42:01.232 +03:00 [DBG] Connection ID "17365880169046212651" disconnecting.
2025-09-16 19:42:01.235 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:42:01.243 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:01.244 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 19:42:01.245 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Doctor/register - 200 null application/json; charset=utf-8 2900.2454ms
2025-09-16 19:42:08.192 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Doctor/details/2 - null null
2025-09-16 19:42:08.195 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/details/2'
2025-09-16 19:42:08.195 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)' with route pattern 'api/Doctor/details/{id:int}' is valid for the request path '/api/Doctor/details/2'
2025-09-16 19:42:08.196 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:42:08.199 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:42:08.199 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:42:08.205 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:42:08.205 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:42:08.206 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:42:08.206 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:42:08.206 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:42:08.206 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:42:08.207 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:42:08.211 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:42:08.213 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:42:08.214 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:42:08.214 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:42:08.214 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:42:08.214 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:42:08.215 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:42:08.278 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:42:08.281 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 19:42:08.293 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Specialization>k__BackingField = dataReader.GetString(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 19:42:08.301 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:42:08.302 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:42:08.302 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:08.303 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:08.303 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:42:08.303 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:08.303 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:08.304 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:42:08.308 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:42:08.312 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:08.313 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:42:08.313 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 3ms reading results.
2025-09-16 19:42:08.313 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:08.313 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:42:08.314 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:42:08.314 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:42:08.314 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:42:08.314 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:42:08.315 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:42:08.315 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.DoctorProxy'.
2025-09-16 19:42:08.330 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 19:42:08.336 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .Where(e => EF.Property<string>(e, "Id") == __p_0)
    .AsTracking()
    .FirstOrDefault()'
2025-09-16 19:42:08.344 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ApplicationUser>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ApplicationUser entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ApplicationUser instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ApplicationUser);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ApplicationUser)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                        {
                            return (ApplicationUser)
                            {
                                ApplicationUserProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetString(0);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                instance.<LastName>k__BackingField = dataReader.GetString(6);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(ApplicationUser)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 19:42:08.356 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:08.357 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:08.358 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:42:08.358 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:42:08.359 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 19:42:08.359 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:42:08.363 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:42:08.368 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:08.369 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:42:08.369 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:42:08.369 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 6ms reading results.
2025-09-16 19:42:08.369 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:08.370 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:42:08.379 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API) in 171.8855ms
2025-09-16 19:42:08.379 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:42:08.379 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:42:08.379 +03:00 [DBG] Connection ID "17365880169046212653" disconnecting.
2025-09-16 19:42:08.380 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:42:08.380 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:42:08.380 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Doctor/details/2 - 200 null application/json; charset=utf-8 188.0531ms
2025-09-16 19:42:52.902 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - application/json 27
2025-09-16 19:42:52.903 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/2'
2025-09-16 19:42:52.903 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/2'
2025-09-16 19:42:52.903 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:42:52.907 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:42:52.908 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:42:52.911 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:42:52.912 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:42:52.913 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:42:52.913 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:42:52.913 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:42:52.913 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:42:52.913 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:42:52.930 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:42:52.930 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:42:52.931 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:42:52.931 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:42:52.931 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:42:52.931 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:42:52.932 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:42:52.932 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 19:42:52.932 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' using the name '' in request data ...
2025-09-16 19:42:52.933 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 19:42:52.976 +03:00 [DBG] JSON input formatter threw an exception: The JSON object contains a trailing comma at the end which is not supported in this mode. Change the reader options. Path: $ | LineNumber: 2 | BytePositionInLine: 0.
2025-09-16 19:42:52.976 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:42:52.976 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:42:52.976 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 19:42:52.977 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:42:52.977 +03:00 [DBG] The request has model state errors, returning an error response.
2025-09-16 19:42:52.978 +03:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-09-16 19:42:52.979 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:42:52.979 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:42:52.979 +03:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-09-16 19:42:52.979 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-09-16 19:42:52.979 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-09-16 19:42:52.998 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 84.3922ms
2025-09-16 19:42:52.998 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:42:52.998 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - 400 null application/problem+json; charset=utf-8 96.064ms
2025-09-16 19:43:01.403 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - application/json 26
2025-09-16 19:43:01.404 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/2'
2025-09-16 19:43:01.404 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/2'
2025-09-16 19:43:01.404 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:43:01.404 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:43:01.405 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:43:01.405 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:43:01.405 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:43:01.405 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:43:01.406 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:43:01.406 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:43:01.406 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:43:01.406 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:43:01.426 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:43:01.426 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:43:01.426 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:43:01.426 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:43:01.427 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:43:01.427 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:43:01.427 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:43:01.427 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 19:43:01.427 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' using the name '' in request data ...
2025-09-16 19:43:01.427 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 19:43:01.427 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'
2025-09-16 19:43:01.427 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:43:01.427 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:43:01.427 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 19:43:01.448 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:43:01.539 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:43:01.542 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:43:01.542 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:43:01.542 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:43:01.542 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:43:01.542 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:43:01.542 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:43:01.542 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:43:01.543 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:43:01.592 +03:00 [INF] Executed DbCommand (50ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:43:01.594 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:43:01.594 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:43:01.594 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 19:43:01.594 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:43:01.594 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:43:01.599 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:43:01.599 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:43:01.599 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:43:01.599 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:43:01.600 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:43:01.601 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:43:01.601 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:43:01.601 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:43:01.601 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:43:01.601 +03:00 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:43:01.613 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:43:01.652 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:43:01.652 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 39ms reading results.
2025-09-16 19:43:01.652 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:43:01.652 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:43:01.703 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'MedicalApp.DA.Models.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Specialization', table 'MedicalAppDB.dbo.Doctors'; column does not allow nulls. UPDATE fails.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.Read()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetWithRowsAffectedOnly(Int32 commandIndex, RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
ClientConnectionId:34ffb868-b09d-4c64-adb1-51ee05f89714
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Specialization', table 'MedicalAppDB.dbo.Doctors'; column does not allow nulls. UPDATE fails.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.Read()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetWithRowsAffectedOnly(Int32 commandIndex, RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
ClientConnectionId:34ffb868-b09d-4c64-adb1-51ee05f89714
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
2025-09-16 19:43:01.712 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 305.7497ms
2025-09-16 19:43:01.713 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:43:01.715 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Specialization', table 'MedicalAppDB.dbo.Doctors'; column does not allow nulls. UPDATE fails.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.Read()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Read()
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetWithRowsAffectedOnly(Int32 commandIndex, RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
ClientConnectionId:34ffb868-b09d-4c64-adb1-51ee05f89714
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
   at MedicalApp.DA.UnitOfWorks.UnitOfWork.SaveChanges() in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.DA\UnitOfWorks\UnitOfWork.cs:line 61
   at MedicalApp.API.Controllers.DoctorController.Update(Int32 id, UpdateDoctorDTO updateDTO) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Controllers\DoctorController.cs:line 85
   at lambda_method479(Closure, Object, Object[])
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 19:43:01.777 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:43:01.777 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:43:01.777 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:43:01.777 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - 500 null text/plain; charset=utf-8 373.8567ms
2025-09-16 19:57:14.557 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 19:57:15.234 +03:00 [DBG] Hosting starting
2025-09-16 19:57:15.418 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 19:57:15.542 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 19:57:15.587 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 19:57:15.600 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 19:57:15.635 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 19:57:15.653 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 19:57:15.663 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 19:57:15.669 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 19:57:15.672 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 19:57:15.686 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 19:57:15.692 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 19:57:15.705 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 19:57:15.738 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 19:57:16.102 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 19:57:16.104 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 19:57:16.112 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 19:57:16.112 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 19:57:16.113 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 19:57:16.113 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 19:57:16.162 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 19:57:16.162 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 19:57:16.163 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 19:57:16.329 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 19:57:16.330 +03:00 [INF] Hosting environment: Development
2025-09-16 19:57:16.330 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 19:57:16.330 +03:00 [DBG] Hosting started
2025-09-16 19:57:16.587 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 19:57:16.589 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 19:57:16.655 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 19:57:16.656 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 19:57:16.670 +03:00 [DBG] Connection ID "18086456113720459941" disconnecting.
2025-09-16 19:57:16.661 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 501.5752ms
2025-09-16 19:57:16.918 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 19:57:16.928 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 5.291ms
2025-09-16 19:57:16.930 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 19:57:17.105 +03:00 [DBG] Connection ID "18086456113720459943" disconnecting.
2025-09-16 19:57:17.156 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 226.2841ms
2025-09-16 19:57:17.420 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 19:57:17.653 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 232.3522ms
2025-09-16 19:57:32.150 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - application/json 26
2025-09-16 19:57:32.195 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/2'
2025-09-16 19:57:32.197 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/2'
2025-09-16 19:57:32.199 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:57:32.212 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:57:32.216 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:57:32.286 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:57:32.288 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:57:32.288 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:57:32.292 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:57:32.292 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:57:32.293 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:57:32.295 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:57:32.504 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 19:57:32.878 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 19:57:32.894 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:57:32.900 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:57:32.903 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:57:32.904 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:57:32.904 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:57:32.905 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:57:32.911 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:57:32.913 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 19:57:32.914 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' using the name '' in request data ...
2025-09-16 19:57:32.916 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 19:57:32.931 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'
2025-09-16 19:57:32.931 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:57:32.932 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:57:32.932 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 19:57:32.947 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:57:33.948 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 19:57:33.949 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 19:57:34.416 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:57:34.510 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 19:57:35.100 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Specialization>k__BackingField = dataReader.GetString(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 19:57:35.162 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:57:35.185 +03:00 [DBG] Created DbConnection. (20ms).
2025-09-16 19:57:35.188 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:35.549 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:35.552 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:57:35.558 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-16 19:57:35.564 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-09-16 19:57:35.573 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:57:35.646 +03:00 [INF] Executed DbCommand (69ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:57:35.696 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:57:35.727 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:57:35.736 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 84ms reading results.
2025-09-16 19:57:35.740 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:35.746 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (7ms).
2025-09-16 19:57:35.770 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:57:35.774 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:57:35.776 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:57:35.793 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:57:35.962 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:35.963 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:35.983 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:57:35.983 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:57:35.984 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 19:57:35.985 +03:00 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:57:36.028 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:57:36.032 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:57:36.033 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 4ms reading results.
2025-09-16 19:57:36.033 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:36.033 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:57:36.036 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:57:36.037 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 19:57:36.056 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 19:57:36.063 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .Where(e => EF.Property<string>(e, "Id") == __p_0)
    .AsTracking()
    .FirstOrDefault()'
2025-09-16 19:57:36.087 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ApplicationUser>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ApplicationUser entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ApplicationUser instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ApplicationUser);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ApplicationUser)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                        {
                            return (ApplicationUser)
                            {
                                ApplicationUserProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetString(0);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                instance.<LastName>k__BackingField = dataReader.GetString(6);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(ApplicationUser)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 19:57:36.094 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:36.094 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:36.094 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:57:36.095 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:57:36.095 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:57:36.095 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:57:36.101 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:57:36.124 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:57:36.126 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:57:36.167 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:57:36.167 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 66ms reading results.
2025-09-16 19:57:36.168 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:36.168 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:57:36.172 +03:00 [INF] Doctor updated: Id=2, Email=hi@example.com
2025-09-16 19:57:36.175 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-09-16 19:57:36.180 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 3882.491ms
2025-09-16 19:57:36.180 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:57:36.182 +03:00 [DBG] Connection ID "18302628900129210517" disconnecting.
2025-09-16 19:57:36.185 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:57:36.195 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:36.198 +03:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-09-16 19:57:36.199 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - 200 null null 4048.9244ms
2025-09-16 19:57:47.114 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Doctor/details/2 - null null
2025-09-16 19:57:47.118 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/details/2'
2025-09-16 19:57:47.119 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)' with route pattern 'api/Doctor/details/{id:int}' is valid for the request path '/api/Doctor/details/2'
2025-09-16 19:57:47.119 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:57:47.122 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:57:47.122 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:57:47.128 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:57:47.129 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:57:47.129 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:57:47.130 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:57:47.130 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:57:47.131 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:57:47.131 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:57:47.137 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:57:47.139 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:57:47.140 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:57:47.140 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:57:47.140 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:57:47.140 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:57:47.141 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:57:47.201 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:57:47.206 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:57:47.206 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:57:47.207 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:47.207 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:47.207 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:57:47.207 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:57:47.208 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:57:47.208 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:57:47.210 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:57:47.212 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:57:47.213 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:57:47.213 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 2ms reading results.
2025-09-16 19:57:47.213 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:47.213 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:57:47.214 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:57:47.216 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:57:47.216 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:57:47.216 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:57:47.217 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:57:47.217 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.DoctorProxy'.
2025-09-16 19:57:47.237 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 19:57:47.238 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:47.239 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:47.239 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:57:47.239 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:57:47.239 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:57:47.239 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:57:47.244 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:57:47.246 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:57:47.246 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:57:47.247 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:57:47.247 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 2ms reading results.
2025-09-16 19:57:47.247 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:47.247 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:57:47.259 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API) in 128.0138ms
2025-09-16 19:57:47.259 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:57:47.259 +03:00 [DBG] Connection ID "18302628900129210519" disconnecting.
2025-09-16 19:57:47.259 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:57:47.260 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:47.260 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:57:47.260 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Doctor/details/2 - 200 null application/json; charset=utf-8 146.6046ms
2025-09-16 19:57:56.181 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Doctor/details/2 - null null
2025-09-16 19:57:56.181 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/details/2'
2025-09-16 19:57:56.182 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)' with route pattern 'api/Doctor/details/{id:int}' is valid for the request path '/api/Doctor/details/2'
2025-09-16 19:57:56.182 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:57:56.188 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:57:56.188 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:57:56.188 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:57:56.188 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:57:56.189 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:57:56.189 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:57:56.189 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:57:56.189 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:57:56.189 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:57:56.208 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:57:56.208 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:57:56.209 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:57:56.209 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:57:56.209 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:57:56.209 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:57:56.209 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:57:56.233 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:57:56.237 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:57:56.237 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:57:56.237 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:56.237 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:56.238 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:57:56.238 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:57:56.238 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:57:56.238 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:57:56.245 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:57:56.245 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:57:56.245 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:57:56.245 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:57:56.245 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:56.245 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:57:56.246 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:57:56.246 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:57:56.246 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:57:56.246 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:57:56.246 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:57:56.246 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.DoctorProxy'.
2025-09-16 19:57:56.247 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 19:57:56.247 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:56.248 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:56.248 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:57:56.248 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:57:56.248 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:57:56.248 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:57:56.255 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:57:56.255 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:57:56.256 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:57:56.256 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:57:56.256 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:57:56.256 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:56.256 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:57:56.257 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API) in 67.8075ms
2025-09-16 19:57:56.257 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:57:56.257 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:57:56.257 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:57:56.257 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:57:56.257 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Doctor/details/2 - 200 null application/json; charset=utf-8 76.0927ms
2025-09-16 19:58:46.553 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - application/json 26
2025-09-16 19:58:46.553 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/2'
2025-09-16 19:58:46.554 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/2'
2025-09-16 19:58:46.554 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:58:46.555 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:58:46.555 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:58:46.555 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:58:46.555 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:58:46.556 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:58:46.556 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:58:46.556 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:58:46.556 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:58:46.557 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:58:46.558 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:58:46.558 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:58:46.558 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:58:46.558 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:58:46.559 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:58:46.559 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:58:46.559 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:58:46.559 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 19:58:46.560 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' using the name '' in request data ...
2025-09-16 19:58:46.560 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 19:58:46.561 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'
2025-09-16 19:58:46.562 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:58:46.562 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:58:46.562 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 19:58:46.563 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 19:58:46.565 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:58:46.566 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:58:46.567 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:58:46.567 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.567 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.567 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:58:46.568 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:58:46.568 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:58:46.569 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:58:46.572 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:58:46.573 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:58:46.573 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.573 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:58:46.573 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.573 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:58:46.574 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:58:46.574 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 19:58:46.574 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 19:58:46.574 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 19:58:46.577 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.577 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.577 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:58:46.577 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:58:46.577 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:58:46.577 +03:00 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:58:46.587 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 19:58:46.587 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.587 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:58:46.587 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.588 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:58:46.588 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:58:46.588 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 19:58:46.588 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 19:58:46.589 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.590 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.590 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:58:46.590 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:58:46.590 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:58:46.590 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:58:46.596 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:58:46.597 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:58:46.597 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:58:46.597 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.597 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:58:46.597 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.597 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:58:46.597 +03:00 [INF] Doctor updated: Id=2, Email=hi@example.com
2025-09-16 19:58:46.598 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-09-16 19:58:46.598 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 41.0912ms
2025-09-16 19:58:46.598 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 19:58:46.598 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:58:46.598 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:58:46.598 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:58:46.598 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - 200 null null 45.4598ms
2025-09-16 19:59:05.993 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Doctor/details/2 - null null
2025-09-16 19:59:05.994 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/details/2'
2025-09-16 19:59:05.994 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)' with route pattern 'api/Doctor/details/{id:int}' is valid for the request path '/api/Doctor/details/2'
2025-09-16 19:59:05.994 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:59:05.994 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 19:59:05.994 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:59:05.995 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 19:59:05.995 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 19:59:05.995 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 19:59:05.995 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 19:59:05.995 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 19:59:05.995 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 19:59:05.995 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:59:05.996 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 19:59:05.997 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 19:59:05.997 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 19:59:05.997 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:59:05.997 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 19:59:05.997 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 19:59:05.997 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 19:59:05.999 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 19:59:06.000 +03:00 [DBG] Creating DbConnection.
2025-09-16 19:59:06.000 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 19:59:06.000 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:59:06.000 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:59:06.000 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:59:06.001 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:59:06.001 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:59:06.001 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:59:06.008 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 19:59:06.009 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:59:06.009 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:59:06.009 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:59:06.009 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:59:06.009 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:59:06.009 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 19:59:06.009 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 19:59:06.009 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 19:59:06.009 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 19:59:06.009 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 19:59:06.009 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.DoctorProxy'.
2025-09-16 19:59:06.010 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 19:59:06.011 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:59:06.011 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:59:06.011 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 19:59:06.011 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:59:06.011 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 19:59:06.011 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:59:06.018 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 19:59:06.018 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:59:06.018 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 19:59:06.019 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 19:59:06.019 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 19:59:06.019 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:59:06.019 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 19:59:06.019 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API) in 24.1869ms
2025-09-16 19:59:06.019 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 19:59:06.020 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 19:59:06.020 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 19:59:06.020 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 19:59:06.020 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Doctor/details/2 - 200 null application/json; charset=utf-8 26.418ms
2025-09-16 20:03:05.553 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 20:03:05.730 +03:00 [DBG] Hosting starting
2025-09-16 20:03:05.754 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 20:03:05.772 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 20:03:05.797 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 20:03:05.801 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 20:03:05.807 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 20:03:05.846 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 20:03:05.866 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:03:05.869 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 20:03:05.871 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:03:05.879 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 20:03:05.883 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 20:03:05.886 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 20:03:05.887 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 20:03:05.981 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 20:03:06.001 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 20:03:06.005 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 20:03:06.005 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 20:03:06.005 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 20:03:06.005 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 20:03:06.022 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:03:06.022 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:03:06.047 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 20:03:06.180 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 20:03:06.181 +03:00 [INF] Hosting environment: Development
2025-09-16 20:03:06.181 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 20:03:06.181 +03:00 [DBG] Hosting started
2025-09-16 20:03:06.306 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 20:03:06.310 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 20:03:06.337 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 20:03:06.337 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 20:03:06.339 +03:00 [DBG] Connection ID "18014398519682533156" disconnecting.
2025-09-16 20:03:06.386 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 20:03:06.346 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 301.2141ms
2025-09-16 20:03:06.391 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.3417ms
2025-09-16 20:03:06.391 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 20:03:06.393 +03:00 [DBG] Connection ID "17437937763084140644" disconnecting.
2025-09-16 20:03:06.439 +03:00 [DBG] Connection ID "17582052951159996846" disconnecting.
2025-09-16 20:03:06.445 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 53.7894ms
2025-09-16 20:03:06.756 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 20:03:07.227 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 471.4934ms
2025-09-16 20:03:21.784 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - application/json 26
2025-09-16 20:03:21.864 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/2'
2025-09-16 20:03:21.865 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/2'
2025-09-16 20:03:21.866 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:03:21.880 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:03:21.881 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:03:21.901 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 20:03:21.903 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:03:21.903 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:03:21.905 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:03:21.906 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:03:21.906 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:03:21.908 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 20:03:22.025 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 20:03:22.223 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 20:03:22.230 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 20:03:22.233 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 20:03:22.235 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 20:03:22.235 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:03:22.235 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:03:22.236 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 20:03:22.238 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 20:03:22.239 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 20:03:22.241 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' using the name '' in request data ...
2025-09-16 20:03:22.244 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 20:03:22.257 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'
2025-09-16 20:03:22.257 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:03:22.257 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:03:22.257 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 20:03:22.266 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:03:23.179 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 20:03:23.179 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 20:03:23.730 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:03:23.876 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 20:03:24.617 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Specialization>k__BackingField = dataReader.GetString(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 20:03:24.668 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:03:24.698 +03:00 [DBG] Created DbConnection. (25ms).
2025-09-16 20:03:24.701 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:03:25.230 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:03:25.232 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:03:25.243 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-16 20:03:25.307 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (74ms).
2025-09-16 20:03:25.360 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 20:03:25.567 +03:00 [INF] Executed DbCommand (248ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 20:03:25.611 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:03:25.630 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:03:25.640 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 66ms reading results.
2025-09-16 20:03:25.642 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:03:25.647 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (5ms).
2025-09-16 20:03:25.671 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:03:25.674 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:03:25.675 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:03:25.687 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:03:25.749 +03:00 [DBG] The foreign key property 'Doctor.UserId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-09-16 20:03:25.756 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:03:25.757 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:03:25.846 +03:00 [DBG] Executing 2 update commands as a batch.
2025-09-16 20:03:25.847 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:03:25.848 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:03:25.849 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 20:03:25.855 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 20:03:25.857 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:03:25.857 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:03:25.859 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 20:03:25.859 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256), @p19='?' (DbType = Int32), @p17='?' (Size = 4000), @p18='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
UPDATE [Doctors] SET [Specialization] = @p17, [UserId] = @p18
OUTPUT 1
WHERE [Id] = @p19;
2025-09-16 20:03:26.092 +03:00 [ERR] Failed executing DbCommand (232ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256), @p19='?' (DbType = Int32), @p17='?' (Size = 4000), @p18='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
UPDATE [Doctors] SET [Specialization] = @p17, [UserId] = @p18
OUTPUT 1
WHERE [Id] = @p19;
2025-09-16 20:03:26.099 +03:00 [DBG] Disposing transaction.
2025-09-16 20:03:26.100 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:03:26.100 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:03:26.111 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'MedicalApp.DA.Models.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'LastName', table 'MedicalAppDB.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The UPDATE statement conflicted with the FOREIGN KEY constraint "FK_Doctors_AspNetUsers_UserId". The conflict occurred in database "MedicalAppDB", table "dbo.AspNetUsers", column 'Id'.
The statement has been terminated.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:084ee58f-a0f1-432c-a1c1-ab621bb4561b
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'LastName', table 'MedicalAppDB.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The UPDATE statement conflicted with the FOREIGN KEY constraint "FK_Doctors_AspNetUsers_UserId". The conflict occurred in database "MedicalAppDB", table "dbo.AspNetUsers", column 'Id'.
The statement has been terminated.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:084ee58f-a0f1-432c-a1c1-ab621bb4561b
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
2025-09-16 20:03:26.118 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 4207.1632ms
2025-09-16 20:03:26.119 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:03:26.119 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'LastName', table 'MedicalAppDB.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The UPDATE statement conflicted with the FOREIGN KEY constraint "FK_Doctors_AspNetUsers_UserId". The conflict occurred in database "MedicalAppDB", table "dbo.AspNetUsers", column 'Id'.
The statement has been terminated.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:084ee58f-a0f1-432c-a1c1-ab621bb4561b
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
   at MedicalApp.DA.UnitOfWorks.UnitOfWork.SaveChanges() in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.DA\UnitOfWorks\UnitOfWork.cs:line 61
   at MedicalApp.API.Controllers.DoctorController.Update(Int32 id, UpdateDoctorDTO updateDTO) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Controllers\DoctorController.cs:line 84
   at lambda_method2(Closure, Object, Object[])
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 20:03:26.134 +03:00 [DBG] Connection ID "17509995357122069083" disconnecting.
2025-09-16 20:03:26.137 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:03:26.143 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:03:26.146 +03:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-09-16 20:03:26.146 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - 500 null text/plain; charset=utf-8 4362.0469ms
2025-09-16 20:18:45.287 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 20:18:45.493 +03:00 [DBG] Hosting starting
2025-09-16 20:18:45.510 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 20:18:45.524 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 20:18:45.532 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 20:18:45.536 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 20:18:45.540 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 20:18:45.546 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 20:18:45.549 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:18:45.551 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 20:18:45.552 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:18:45.557 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 20:18:45.562 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 20:18:45.564 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 20:18:45.565 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 20:18:45.618 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 20:18:45.620 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 20:18:45.625 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 20:18:45.625 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 20:18:45.625 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 20:18:45.625 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 20:18:45.638 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:18:45.639 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:18:45.648 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 20:18:45.857 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 20:18:45.888 +03:00 [INF] Hosting environment: Development
2025-09-16 20:18:45.888 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 20:18:45.888 +03:00 [DBG] Hosting started
2025-09-16 20:18:46.289 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 20:18:46.296 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 20:18:46.423 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 20:18:46.429 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 20:18:46.435 +03:00 [DBG] Connection ID "17582052951159996848" disconnecting.
2025-09-16 20:18:46.434 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 787.5922ms
2025-09-16 20:18:46.615 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 20:18:46.628 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 5.6072ms
2025-09-16 20:18:46.635 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 20:18:46.814 +03:00 [DBG] Connection ID "17870283331606675747" disconnecting.
2025-09-16 20:18:46.815 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 180.1025ms
2025-09-16 20:18:47.218 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 20:18:47.705 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 486.1001ms
2025-09-16 20:19:21.958 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - application/json 113
2025-09-16 20:19:22.007 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/2'
2025-09-16 20:19:22.008 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/2'
2025-09-16 20:19:22.009 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:19:22.023 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:19:22.026 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:19:22.058 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 20:19:22.059 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:19:22.060 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:19:22.061 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:19:22.062 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:19:22.062 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:19:22.064 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 20:19:22.309 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 20:19:22.607 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 20:19:22.618 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 20:19:22.623 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 20:19:22.625 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 20:19:22.625 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:19:22.626 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:19:22.626 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 20:19:22.628 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 20:19:22.629 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 20:19:22.630 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' using the name '' in request data ...
2025-09-16 20:19:22.631 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 20:19:22.640 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'
2025-09-16 20:19:22.640 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:19:22.640 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:19:22.641 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 20:19:22.648 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:19:23.225 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 20:19:23.226 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 20:19:23.645 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:19:23.789 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 20:19:24.619 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Specialization>k__BackingField = dataReader.GetString(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 20:19:24.680 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:19:24.729 +03:00 [DBG] Created DbConnection. (43ms).
2025-09-16 20:19:24.736 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:19:25.224 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:19:25.228 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:19:25.254 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (17ms).
2025-09-16 20:19:25.267 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (38ms).
2025-09-16 20:19:25.284 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 20:19:25.406 +03:00 [INF] Executed DbCommand (127ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 20:19:25.494 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:19:25.522 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:19:25.568 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 119ms reading results.
2025-09-16 20:19:25.570 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:19:25.578 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (7ms).
2025-09-16 20:19:25.642 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:19:25.645 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:19:25.650 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:19:25.677 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:19:25.741 +03:00 [DBG] The foreign key property 'Doctor.UserId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-09-16 20:19:25.745 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:19:25.748 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:19:25.854 +03:00 [DBG] Executing 2 update commands as a batch.
2025-09-16 20:19:25.856 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:19:25.857 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:19:25.858 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 20:19:25.866 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 20:19:25.868 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:19:25.868 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:19:25.870 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-09-16 20:19:25.870 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256), @p19='?' (DbType = Int32), @p17='?' (Size = 4000), @p18='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
UPDATE [Doctors] SET [Specialization] = @p17, [UserId] = @p18
OUTPUT 1
WHERE [Id] = @p19;
2025-09-16 20:19:25.884 +03:00 [ERR] Failed executing DbCommand (12ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256), @p19='?' (DbType = Int32), @p17='?' (Size = 4000), @p18='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
UPDATE [Doctors] SET [Specialization] = @p17, [UserId] = @p18
OUTPUT 1
WHERE [Id] = @p19;
2025-09-16 20:19:25.889 +03:00 [DBG] Disposing transaction.
2025-09-16 20:19:25.890 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:19:25.890 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:19:25.899 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'MedicalApp.DA.Models.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'LastName', table 'MedicalAppDB.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The UPDATE statement conflicted with the FOREIGN KEY constraint "FK_Doctors_AspNetUsers_UserId". The conflict occurred in database "MedicalAppDB", table "dbo.AspNetUsers", column 'Id'.
The statement has been terminated.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:268c2547-1869-4160-9650-d44c5fd6a814
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'LastName', table 'MedicalAppDB.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The UPDATE statement conflicted with the FOREIGN KEY constraint "FK_Doctors_AspNetUsers_UserId". The conflict occurred in database "MedicalAppDB", table "dbo.AspNetUsers", column 'Id'.
The statement has been terminated.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:268c2547-1869-4160-9650-d44c5fd6a814
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
2025-09-16 20:19:25.907 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 3839.6582ms
2025-09-16 20:19:25.908 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:19:25.909 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'LastName', table 'MedicalAppDB.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The UPDATE statement conflicted with the FOREIGN KEY constraint "FK_Doctors_AspNetUsers_UserId". The conflict occurred in database "MedicalAppDB", table "dbo.AspNetUsers", column 'Id'.
The statement has been terminated.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:268c2547-1869-4160-9650-d44c5fd6a814
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__112_0(DbContext _, ValueTuple`2 t)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
   at MedicalApp.DA.UnitOfWorks.UnitOfWork.SaveChanges() in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.DA\UnitOfWorks\UnitOfWork.cs:line 61
   at MedicalApp.API.Controllers.DoctorController.Update(Int32 id, UpdateDoctorDTO updateDTO) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Controllers\DoctorController.cs:line 84
   at lambda_method2(Closure, Object, Object[])
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 20:19:25.945 +03:00 [DBG] Connection ID "18374686494167139798" disconnecting.
2025-09-16 20:19:25.948 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:19:25.954 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:19:25.957 +03:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-09-16 20:19:25.957 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - 500 null text/plain; charset=utf-8 3999.3917ms
2025-09-16 20:23:27.986 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 20:23:28.203 +03:00 [DBG] Hosting starting
2025-09-16 20:23:28.276 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 20:23:28.296 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 20:23:28.301 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 20:23:28.304 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 20:23:28.309 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 20:23:28.314 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 20:23:28.317 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:23:28.319 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 20:23:28.321 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:23:28.328 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 20:23:28.331 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 20:23:28.333 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 20:23:28.334 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 20:23:28.399 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 20:23:28.401 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 20:23:28.407 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 20:23:28.407 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 20:23:28.407 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 20:23:28.407 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 20:23:28.419 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:23:28.419 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:23:28.433 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 20:23:28.583 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 20:23:28.583 +03:00 [INF] Hosting environment: Development
2025-09-16 20:23:28.583 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 20:23:28.583 +03:00 [DBG] Hosting started
2025-09-16 20:23:28.753 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 20:23:28.757 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 20:23:28.790 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 20:23:28.791 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 20:23:28.795 +03:00 [DBG] Connection ID "17870283331606675749" disconnecting.
2025-09-16 20:23:28.798 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 366.8046ms
2025-09-16 20:23:28.839 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 20:23:28.842 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 20:23:28.844 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.2856ms
2025-09-16 20:23:28.882 +03:00 [DBG] Connection ID "17509995357122069163" disconnecting.
2025-09-16 20:23:28.883 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.5911ms
2025-09-16 20:23:29.267 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 20:23:29.804 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 537.1527ms
2025-09-16 20:23:29.805 +03:00 [DBG] Connection ID "18374686494167139803" disconnecting.
2025-09-16 20:23:39.426 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - application/json 113
2025-09-16 20:23:39.503 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/2'
2025-09-16 20:23:39.505 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/2'
2025-09-16 20:23:39.506 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:23:39.517 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:23:39.521 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:23:39.586 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 20:23:39.592 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:23:39.593 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:23:39.594 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:23:39.594 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:23:39.595 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:23:39.597 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 20:23:39.782 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 20:23:40.126 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 20:23:40.145 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 20:23:40.156 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 20:23:40.160 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 20:23:40.161 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:23:40.161 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:23:40.161 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 20:23:40.164 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 20:23:40.166 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 20:23:40.167 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' using the name '' in request data ...
2025-09-16 20:23:40.171 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 20:23:40.196 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'
2025-09-16 20:23:40.197 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:23:40.197 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:23:40.197 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 20:23:40.213 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:23:41.017 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 20:23:41.018 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 20:23:41.840 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:23:41.969 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 20:23:42.445 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Specialization>k__BackingField = dataReader.GetString(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 20:23:42.487 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:23:42.512 +03:00 [DBG] Created DbConnection. (23ms).
2025-09-16 20:23:42.515 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.090 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.093 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:23:43.099 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-16 20:23:43.108 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-09-16 20:23:43.119 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 20:23:43.162 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 20:23:43.197 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:43.214 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.221 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 53ms reading results.
2025-09-16 20:23:43.223 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.229 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (6ms).
2025-09-16 20:23:43.248 +03:00 [DBG] The unchanged property 'Doctor.Specialization' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-09-16 20:23:43.258 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:43.289 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 20:23:43.306 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .Where(e => EF.Property<string>(e, "Id") == __p_0)
    .AsTracking()
    .FirstOrDefault()'
2025-09-16 20:23:43.363 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ApplicationUser>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ApplicationUser entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ApplicationUser instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ApplicationUser);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ApplicationUser)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                        {
                            return (ApplicationUser)
                            {
                                ApplicationUserProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetString(0);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                instance.<LastName>k__BackingField = dataReader.GetString(6);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(ApplicationUser)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 20:23:43.370 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.371 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.371 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:23:43.371 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:23:43.372 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 20:23:43.373 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:23:43.384 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:23:43.416 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:43.419 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:43.465 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.465 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 80ms reading results.
2025-09-16 20:23:43.466 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.466 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:23:43.547 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-09-16 20:23:43.587 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 20:23:43.647 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.653 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.653 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:23:43.653 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:23:43.654 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:23:43.654 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:23:43.702 +03:00 [INF] Executed DbCommand (48ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:23:43.717 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.719 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 15ms reading results.
2025-09-16 20:23:43.722 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.722 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:23:43.745 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:43.748 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:23:43.753 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:23:43.757 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:23:43.861 +03:00 [DBG] Executing 2 update commands as a batch.
2025-09-16 20:23:43.864 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.865 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.866 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 20:23:43.874 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 20:23:43.878 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:23:43.878 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:23:43.880 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 20:23:43.880 +03:00 [DBG] Executing DbCommand [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256), @p19='?' (DbType = Int32), @p18='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
UPDATE [Doctors] SET [Specialization] = @p18
OUTPUT 1
WHERE [Id] = @p19;
2025-09-16 20:23:43.954 +03:00 [INF] Executed DbCommand (74ms) [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256), @p19='?' (DbType = Int32), @p18='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
UPDATE [Doctors] SET [Specialization] = @p18
OUTPUT 1
WHERE [Id] = @p19;
2025-09-16 20:23:43.963 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.964 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 9ms reading results.
2025-09-16 20:23:43.967 +03:00 [DBG] Committing transaction.
2025-09-16 20:23:43.971 +03:00 [DBG] Committed transaction.
2025-09-16 20:23:43.974 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:43.974 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:23:43.977 +03:00 [DBG] Disposing transaction.
2025-09-16 20:23:43.980 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:43.981 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:43.983 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-09-16 20:23:43.985 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:43.986 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:23:43.986 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:23:43.990 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:23:44.035 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:44.036 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:44.037 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:23:44.037 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:23:44.037 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:23:44.038 +03:00 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 20:23:44.177 +03:00 [INF] Executed DbCommand (140ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 20:23:44.181 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:23:44.182 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 3ms reading results.
2025-09-16 20:23:44.182 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:44.182 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:23:44.182 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:44.184 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 20:23:44.187 +03:00 [INF] Doctor updated: Id=2, Email=haa@example.com
2025-09-16 20:23:44.190 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-09-16 20:23:44.198 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 4595.5023ms
2025-09-16 20:23:44.198 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:23:44.200 +03:00 [DBG] Connection ID "17654110549492892476" disconnecting.
2025-09-16 20:23:44.205 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:23:44.212 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:44.213 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 20:23:44.214 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - 200 null null 4792.6603ms
2025-09-16 20:23:53.317 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Doctor/details/2 - null null
2025-09-16 20:23:53.321 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/details/2'
2025-09-16 20:23:53.321 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)' with route pattern 'api/Doctor/details/{id:int}' is valid for the request path '/api/Doctor/details/2'
2025-09-16 20:23:53.322 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 20:23:53.323 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:23:53.324 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 20:23:53.327 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Doctor"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 20:23:53.328 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:23:53.328 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:23:53.328 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:23:53.328 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:23:53.328 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:23:53.329 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 20:23:53.335 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 20:23:53.336 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 20:23:53.337 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 20:23:53.337 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:23:53.337 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:23:53.337 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 20:23:53.338 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 20:23:53.426 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:23:53.445 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:23:53.446 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 20:23:53.446 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:53.446 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:53.447 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:23:53.447 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:23:53.447 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:23:53.448 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 20:23:53.454 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 20:23:53.456 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:53.456 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:23:53.457 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 2ms reading results.
2025-09-16 20:23:53.457 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:53.457 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:23:53.460 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 20:23:53.465 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 20:23:53.465 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 20:23:53.466 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 20:23:53.468 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 20:23:53.468 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.DoctorProxy'.
2025-09-16 20:23:53.500 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 20:23:53.501 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:53.502 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:53.502 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:23:53.502 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:23:53.502 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:23:53.502 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:23:53.526 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:23:53.528 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:53.528 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:23:53.528 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:23:53.529 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 20:23:53.529 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:53.529 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:23:53.540 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API) in 211.6135ms
2025-09-16 20:23:53.541 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.GetDetails (MedicalApp.API)'
2025-09-16 20:23:53.541 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:23:53.541 +03:00 [DBG] Connection ID "17654110549492892478" disconnecting.
2025-09-16 20:23:53.541 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:23:53.541 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 20:23:53.542 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Doctor/details/2 - 200 null application/json; charset=utf-8 225.0785ms
2025-09-16 20:24:44.778 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Auth/login - application/json 63
2025-09-16 20:24:44.779 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-09-16 20:24:44.779 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-09-16 20:24:44.779 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:24:44.783 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:24:44.784 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:24:44.811 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(MedicalApp.BL.DTOs.AuthDTOs.LoginDTO) on controller MedicalApp.API.Controllers.AuthController (MedicalApp.API).
2025-09-16 20:24:44.811 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:24:44.811 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:24:44.812 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:24:44.812 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:24:44.812 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:24:44.812 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 20:24:44.829 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 20:24:44.829 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 20:24:44.841 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' using the name '' in request data ...
2025-09-16 20:24:44.842 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 20:24:44.846 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'
2025-09-16 20:24:44.846 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:24:44.846 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:24:44.846 +03:00 [DBG] Attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 20:24:44.849 +03:00 [DBG] Done attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:24:44.911 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:24:44.913 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-09-16 20:24:44.928 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 20:24:44.956 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:24:44.956 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 20:24:44.956 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:24:44.957 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:24:44.957 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:24:44.957 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:24:44.957 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:24:44.957 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 20:24:45.061 +03:00 [INF] Executed DbCommand (104ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 20:24:45.063 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:24:45.063 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:24:45.064 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 2ms reading results.
2025-09-16 20:24:45.064 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:24:45.064 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:24:45.271 +03:00 [DBG] Invalid password for user.
2025-09-16 20:24:45.275 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 20:24:45.275 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 20:24:45.275 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 20:24:45.275 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 20:24:45.276 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 20:24:45.276 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 20:24:45.280 +03:00 [INF] Executed action MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API) in 467.781ms
2025-09-16 20:24:45.281 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:24:45.283 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:24:45.283 +03:00 [DBG] Connection ID "17582052946865029642" disconnecting.
2025-09-16 20:24:45.283 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:24:45.283 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 20:24:45.283 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Auth/login - 401 null application/json; charset=utf-8 505.113ms
2025-09-16 20:25:22.008 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Auth/login - application/json 63
2025-09-16 20:25:22.009 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-09-16 20:25:22.009 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-09-16 20:25:22.009 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:25:22.009 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:25:22.010 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:25:22.010 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(MedicalApp.BL.DTOs.AuthDTOs.LoginDTO) on controller MedicalApp.API.Controllers.AuthController (MedicalApp.API).
2025-09-16 20:25:22.010 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:25:22.011 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:25:22.011 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:25:22.011 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:25:22.012 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:25:22.012 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 20:25:22.014 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 20:25:22.015 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 20:25:22.015 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' using the name '' in request data ...
2025-09-16 20:25:22.015 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 20:25:22.016 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'
2025-09-16 20:25:22.016 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:25:22.017 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:25:22.017 +03:00 [DBG] Attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 20:25:22.018 +03:00 [DBG] Done attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:25:22.019 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:25:22.020 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:25:22.020 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 20:25:22.020 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:25:22.021 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:25:22.021 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:25:22.021 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:25:22.021 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:25:22.021 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 20:25:22.027 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 20:25:22.028 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:25:22.028 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:25:22.029 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 20:25:22.029 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:25:22.029 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:25:22.166 +03:00 [DBG] Invalid password for user.
2025-09-16 20:25:22.167 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 20:25:22.167 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 20:25:22.167 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 20:25:22.167 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 20:25:22.167 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 20:25:22.167 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 20:25:22.168 +03:00 [INF] Executed action MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API) in 156.2554ms
2025-09-16 20:25:22.168 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:25:22.169 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:25:22.169 +03:00 [DBG] Connection ID "17582052951159996854" disconnecting.
2025-09-16 20:25:22.169 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:25:22.170 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 20:25:22.170 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Auth/login - 401 null application/json; charset=utf-8 161.941ms
2025-09-16 20:29:28.766 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 20:29:28.949 +03:00 [DBG] Hosting starting
2025-09-16 20:29:28.975 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 20:29:28.997 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 20:29:29.012 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 20:29:29.021 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 20:29:29.055 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 20:29:29.143 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 20:29:29.151 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:29:29.154 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 20:29:29.156 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:29:29.165 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 20:29:29.171 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 20:29:29.175 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 20:29:29.176 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 20:29:29.361 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 20:29:29.363 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 20:29:29.371 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 20:29:29.371 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 20:29:29.371 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 20:29:29.371 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 20:29:29.385 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:29:29.386 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:29:29.401 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 20:29:29.557 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 20:29:29.557 +03:00 [INF] Hosting environment: Development
2025-09-16 20:29:29.557 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 20:29:29.557 +03:00 [DBG] Hosting started
2025-09-16 20:29:29.773 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 20:29:29.776 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 20:29:29.808 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 20:29:29.809 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 20:29:29.811 +03:00 [DBG] Connection ID "18158513699168456386" disconnecting.
2025-09-16 20:29:29.813 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 417.4103ms
2025-09-16 20:29:29.863 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 20:29:29.863 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 20:29:29.868 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.5164ms
2025-09-16 20:29:29.901 +03:00 [DBG] Connection ID "18158513699168456388" disconnecting.
2025-09-16 20:29:29.903 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 39.668ms
2025-09-16 20:29:30.258 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 20:29:30.629 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 371.31ms
2025-09-16 20:29:51.274 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - application/json 113
2025-09-16 20:29:51.384 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Doctor/update/2'
2025-09-16 20:29:51.385 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)' with route pattern 'api/Doctor/update/{id:int}' is valid for the request path '/api/Doctor/update/2'
2025-09-16 20:29:51.386 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:29:51.403 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:29:51.406 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:29:51.452 +03:00 [INF] Route matched with {action = "Update", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO) on controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API).
2025-09-16 20:29:51.454 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:29:51.455 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:29:51.456 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:29:51.456 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:29:51.457 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:29:51.459 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 20:29:51.549 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 20:29:51.705 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 20:29:51.714 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.DoctorController (MedicalApp.API)
2025-09-16 20:29:51.718 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 20:29:51.720 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 20:29:51.721 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:29:51.721 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:29:51.722 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 20:29:51.724 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 20:29:51.725 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 20:29:51.726 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' using the name '' in request data ...
2025-09-16 20:29:51.728 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 20:29:51.740 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'
2025-09-16 20:29:51.740 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:29:51.740 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:29:51.741 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO' ...
2025-09-16 20:29:51.749 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.DoctorDTOs.UpdateDoctorDTO'.
2025-09-16 20:29:52.702 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 20:29:52.702 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 20:29:53.538 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:29:53.614 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 20:29:54.326 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Specialization>k__BackingField = dataReader.GetString(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 20:29:54.368 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:29:54.390 +03:00 [DBG] Created DbConnection. (18ms).
2025-09-16 20:29:54.393 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:54.934 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:54.937 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:29:54.944 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-16 20:29:54.952 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-09-16 20:29:54.961 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 20:29:55.004 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 20:29:55.037 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:29:55.053 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.061 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 50ms reading results.
2025-09-16 20:29:55.063 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.067 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (4ms).
2025-09-16 20:29:55.097 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 20:29:55.107 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .Where(e => EF.Property<string>(e, "Id") == __p_0)
    .AsTracking()
    .FirstOrDefault()'
2025-09-16 20:29:55.147 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ApplicationUser>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ApplicationUser entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ApplicationUser instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ApplicationUser);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ApplicationUser)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                        {
                            return (ApplicationUser)
                            {
                                ApplicationUserProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetString(0);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                instance.<LastName>k__BackingField = dataReader.GetString(6);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(ApplicationUser)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 20:29:55.154 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.156 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.156 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:29:55.156 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:29:55.158 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 20:29:55.159 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:29:55.170 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:29:55.197 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:29:55.199 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:29:55.238 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.238 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 67ms reading results.
2025-09-16 20:29:55.238 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.238 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:29:55.396 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-09-16 20:29:55.408 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 20:29:55.440 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.443 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.444 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:29:55.444 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:29:55.444 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:29:55.445 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:29:55.463 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:29:55.474 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.475 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 11ms reading results.
2025-09-16 20:29:55.478 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.479 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (1ms).
2025-09-16 20:29:55.500 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:29:55.502 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:29:55.504 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:29:55.509 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:29:55.582 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.583 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.587 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:29:55.587 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:29:55.588 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 20:29:55.588 +03:00 [DBG] Executing DbCommand [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
2025-09-16 20:29:55.639 +03:00 [INF] Executed DbCommand (51ms) [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
2025-09-16 20:29:55.649 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.650 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 10ms reading results.
2025-09-16 20:29:55.651 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.651 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:29:55.656 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:29:55.658 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 20:29:55.665 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.665 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.666 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:29:55.666 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:29:55.666 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:29:55.666 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:29:55.672 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:29:55.673 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.673 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 20:29:55.673 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.674 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:29:55.674 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:29:55.675 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:29:55.675 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:29:55.675 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:29:55.677 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.677 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.678 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:29:55.678 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:29:55.678 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:29:55.679 +03:00 [DBG] Executing DbCommand [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
2025-09-16 20:29:55.781 +03:00 [INF] Executed DbCommand (102ms) [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
2025-09-16 20:29:55.781 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.781 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 20:29:55.782 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.782 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:29:55.782 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:29:55.782 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 20:29:55.784 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:29:55.785 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:29:55.785 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:29:55.799 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:29:55.815 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.815 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.817 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:29:55.817 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:29:55.817 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:29:55.817 +03:00 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 20:29:55.889 +03:00 [INF] Executed DbCommand (72ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Doctors] SET [Specialization] = @p0, [UserId] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-09-16 20:29:55.893 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.893 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 3ms reading results.
2025-09-16 20:29:55.893 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.894 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:29:55.894 +03:00 [DBG] An entity of type 'Doctor' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:29:55.894 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 20:29:55.895 +03:00 [INF] Doctor updated: Id=2, Email=haa@example.com
2025-09-16 20:29:55.899 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-09-16 20:29:55.903 +03:00 [INF] Executed action MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API) in 4443.1142ms
2025-09-16 20:29:55.904 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.DoctorController.Update (MedicalApp.API)'
2025-09-16 20:29:55.906 +03:00 [DBG] Connection ID "17798225737568747729" disconnecting.
2025-09-16 20:29:55.909 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:29:55.915 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:29:55.916 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 20:29:55.917 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Doctor/update/2 - 200 null null 4642.6149ms
2025-09-16 20:30:38.001 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Auth/login - application/json 61
2025-09-16 20:30:38.005 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-09-16 20:30:38.005 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-09-16 20:30:38.006 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:30:38.009 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:30:38.010 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:30:38.019 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(MedicalApp.BL.DTOs.AuthDTOs.LoginDTO) on controller MedicalApp.API.Controllers.AuthController (MedicalApp.API).
2025-09-16 20:30:38.019 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:30:38.019 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:30:38.020 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:30:38.020 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:30:38.020 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:30:38.021 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 20:30:38.027 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 20:30:38.029 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 20:30:38.029 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' using the name '' in request data ...
2025-09-16 20:30:38.030 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 20:30:38.034 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'
2025-09-16 20:30:38.034 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:30:38.034 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:30:38.035 +03:00 [DBG] Attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 20:30:38.037 +03:00 [DBG] Done attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:30:38.138 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:30:38.142 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-09-16 20:30:38.163 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 20:30:38.171 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:30:38.172 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 20:30:38.172 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:30:38.172 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:30:38.172 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:30:38.173 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:30:38.173 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:30:38.173 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 20:30:38.206 +03:00 [INF] Executed DbCommand (33ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 20:30:38.223 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:30:38.223 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:30:38.223 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 17ms reading results.
2025-09-16 20:30:38.223 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:30:38.224 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:30:38.569 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-09-16 20:30:38.722 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-09-16 20:30:38.724 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:30:38.725 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:30:38.725 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:30:38.725 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:30:38.725 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:30:38.726 +03:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-09-16 20:30:38.820 +03:00 [INF] Executed DbCommand (94ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-09-16 20:30:38.822 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:30:38.822 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 2ms reading results.
2025-09-16 20:30:38.823 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:30:38.823 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:30:39.112 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 20:30:39.118 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 20:30:39.118 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 20:30:39.119 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 20:30:39.120 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 20:30:39.121 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 20:30:39.127 +03:00 [INF] Executed action MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API) in 1106.68ms
2025-09-16 20:30:39.128 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:30:39.129 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:30:39.130 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:30:39.130 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 20:30:39.130 +03:00 [DBG] Connection ID "18086456105130527056" disconnecting.
2025-09-16 20:30:39.131 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Auth/login - 200 null application/json; charset=utf-8 1129.4811ms
2025-09-16 20:31:15.166 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Appointment/doctor/2/appointments - null null
2025-09-16 20:31:15.168 +03:00 [DBG] 2 candidate(s) found for the request path '/api/Appointment/doctor/2/appointments'
2025-09-16 20:31:15.168 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.GetDoctorAppointments (MedicalApp.API)' with route pattern 'api/Appointment/doctor/{doctorId:int}/appointments' is valid for the request path '/api/Appointment/doctor/2/appointments'
2025-09-16 20:31:15.168 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API)' with route pattern 'api/Appointment/doctor/{patientId:int}/appointments' is valid for the request path '/api/Appointment/doctor/2/appointments'
2025-09-16 20:31:15.171 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

MedicalApp.API.Controllers.AppointmentController.GetDoctorAppointments (MedicalApp.API)
MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.Select(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 20:31:15.181 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Appointment/doctor/2/appointments - 500 null text/plain; charset=utf-8 14.9222ms
2025-09-16 20:32:09.997 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 20:32:10.124 +03:00 [DBG] Hosting starting
2025-09-16 20:32:10.138 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 20:32:10.157 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 20:32:10.166 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 20:32:10.170 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 20:32:10.175 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 20:32:10.184 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 20:32:10.188 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:32:10.190 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 20:32:10.192 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:32:10.199 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 20:32:10.203 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 20:32:10.206 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 20:32:10.207 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 20:32:10.273 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 20:32:10.275 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 20:32:10.281 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 20:32:10.282 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 20:32:10.282 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 20:32:10.282 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 20:32:10.293 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:32:10.294 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:32:10.310 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 20:32:10.414 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 20:32:10.414 +03:00 [INF] Hosting environment: Development
2025-09-16 20:32:10.414 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 20:32:10.414 +03:00 [DBG] Hosting started
2025-09-16 20:32:10.514 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 20:32:10.516 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 20:32:10.539 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 20:32:10.539 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 20:32:10.541 +03:00 [DBG] Connection ID "18086456105130527065" disconnecting.
2025-09-16 20:32:10.545 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 238.799ms
2025-09-16 20:32:10.593 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 20:32:10.593 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 20:32:10.599 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 4.5489ms
2025-09-16 20:32:10.638 +03:00 [DBG] Connection ID "17582052951159996859" disconnecting.
2025-09-16 20:32:10.640 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 47.1171ms
2025-09-16 20:32:10.743 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 20:32:10.956 +03:00 [DBG] Connection ID "17582052951159996861" disconnecting.
2025-09-16 20:32:10.956 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 213.2931ms
2025-09-16 20:32:18.700 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Appointment/doctor/2/appointments - null null
2025-09-16 20:32:18.732 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/doctor/2/appointments'
2025-09-16 20:32:18.733 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.GetDoctorAppointments (MedicalApp.API)' with route pattern 'api/Appointment/doctor/{doctorId:int}/appointments' is valid for the request path '/api/Appointment/doctor/2/appointments'
2025-09-16 20:32:18.735 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.GetDoctorAppointments (MedicalApp.API)'
2025-09-16 20:32:18.749 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:32:18.752 +03:00 [DBG] Policy authentication schemes  did not succeed
2025-09-16 20:32:18.755 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Doctor)
2025-09-16 20:32:18.761 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2025-09-16 20:32:18.762 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Appointment/doctor/2/appointments - 302 null null 62.5046ms
2025-09-16 20:32:18.818 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fdoctor%2F2%2Fappointments - null null
2025-09-16 20:32:18.819 +03:00 [DBG] No candidates found for the request path '/Account/Login'
2025-09-16 20:32:18.819 +03:00 [DBG] Request did not match any endpoints
2025-09-16 20:32:18.825 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:32:18.826 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fdoctor%2F2%2Fappointments - 404 null null 8.1388ms
2025-09-16 20:32:18.827 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/Account/Login, Response status code: 404
2025-09-16 20:32:25.448 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Appointment/doctor/2/appointments - null null
2025-09-16 20:32:25.452 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/doctor/2/appointments'
2025-09-16 20:32:25.452 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.GetDoctorAppointments (MedicalApp.API)' with route pattern 'api/Appointment/doctor/{doctorId:int}/appointments' is valid for the request path '/api/Appointment/doctor/2/appointments'
2025-09-16 20:32:25.453 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.GetDoctorAppointments (MedicalApp.API)'
2025-09-16 20:32:25.454 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:32:25.457 +03:00 [DBG] Policy authentication schemes  did not succeed
2025-09-16 20:32:25.457 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Doctor)
2025-09-16 20:32:25.459 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2025-09-16 20:32:25.459 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Appointment/doctor/2/appointments - 302 null null 11.504ms
2025-09-16 20:32:25.472 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fdoctor%2F2%2Fappointments - null null
2025-09-16 20:32:25.473 +03:00 [DBG] No candidates found for the request path '/Account/Login'
2025-09-16 20:32:25.473 +03:00 [DBG] Request did not match any endpoints
2025-09-16 20:32:25.473 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:32:25.474 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fdoctor%2F2%2Fappointments - 404 null null 1.9234ms
2025-09-16 20:32:25.474 +03:00 [DBG] Connection ID "17509995357122069196" disconnecting.
2025-09-16 20:32:25.474 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/Account/Login, Response status code: 404
2025-09-16 20:33:17.446 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Patient/register - application/json 171
2025-09-16 20:33:17.448 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/register'
2025-09-16 20:33:17.448 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)' with route pattern 'api/Patient/register' is valid for the request path '/api/Patient/register'
2025-09-16 20:33:17.449 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 20:33:17.449 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:33:17.453 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 20:33:17.580 +03:00 [INF] Route matched with {action = "Register", controller = "Patient"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(MedicalApp.BL.DTOs.PatientDTOs.RegisterPatientDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 20:33:17.582 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:33:17.583 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:33:17.583 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:33:17.584 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:33:17.584 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:33:17.587 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 20:33:17.714 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 20:33:17.881 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 20:33:17.888 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 20:33:17.891 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.RegisterPatientDTO' ...
2025-09-16 20:33:17.893 +03:00 [DBG] Attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.RegisterPatientDTO' using the name '' in request data ...
2025-09-16 20:33:17.895 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 20:33:17.909 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.PatientDTOs.RegisterPatientDTO'
2025-09-16 20:33:17.909 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.RegisterPatientDTO'.
2025-09-16 20:33:17.909 +03:00 [DBG] Done attempting to bind parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.RegisterPatientDTO'.
2025-09-16 20:33:17.909 +03:00 [DBG] Attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.RegisterPatientDTO' ...
2025-09-16 20:33:17.916 +03:00 [DBG] Done attempting to validate the bound parameter 'registerDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.RegisterPatientDTO'.
2025-09-16 20:33:18.431 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 20:33:18.431 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 20:33:19.028 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:33:19.106 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-09-16 20:33:19.557 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 20:33:19.673 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:33:19.730 +03:00 [DBG] Created DbConnection. (50ms).
2025-09-16 20:33:19.736 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.184 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.188 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:20.197 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-09-16 20:33:20.205 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (18ms).
2025-09-16 20:33:20.217 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 20:33:20.280 +03:00 [INF] Executed DbCommand (63ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 20:33:20.299 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.307 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 20ms reading results.
2025-09-16 20:33:20.311 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.318 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (7ms).
2025-09-16 20:33:20.531 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-09-16 20:33:20.545 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 20:33:20.554 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.556 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.556 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:20.556 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:20.556 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:20.557 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:33:20.569 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:33:20.570 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.571 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 20:33:20.571 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.571 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:20.702 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:20.706 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:33:20.710 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:33:20.737 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:33:20.818 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.818 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.820 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:20.821 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:20.821 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:20.822 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-09-16 20:33:20.829 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-09-16 20:33:20.832 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.833 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 3ms reading results.
2025-09-16 20:33:20.834 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.834 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:20.842 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:20.844 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 20:33:20.849 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-09-16 20:33:20.863 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return (IdentityRole)
                                {
                                    IdentityRoleProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityRoleProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 20:33:20.867 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.868 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.868 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:20.868 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:20.868 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:20.868 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 20:33:20.880 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 20:33:20.896 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:20.903 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.904 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 23ms reading results.
2025-09-16 20:33:20.904 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.904 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:20.916 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-09-16 20:33:20.952 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return (IdentityUserRole<string>)
                                {
                                    IdentityUserRole`1Proxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (IdentityUserRole`1Proxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 20:33:20.959 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.960 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.960 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:20.960 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:20.960 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:20.960 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 20:33:20.994 +03:00 [INF] Executed DbCommand (34ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-09-16 20:33:20.995 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.995 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 20:33:20.995 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:20.996 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:21.003 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.003 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.004 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:21.004 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:21.004 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:21.004 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 20:33:21.010 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-09-16 20:33:21.011 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.011 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 20:33:21.011 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.011 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:21.028 +03:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:21.031 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.031 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.032 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:21.032 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:21.032 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:21.032 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:33:21.039 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:33:21.043 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.043 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 3ms reading results.
2025-09-16 20:33:21.043 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.043 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:21.050 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:21.050 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:33:21.051 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:33:21.057 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:33:21.158 +03:00 [DBG] Executing 2 update commands as a batch.
2025-09-16 20:33:21.176 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.176 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.194 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 20:33:21.206 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 20:33:21.207 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:21.207 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:21.209 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-09-16 20:33:21.209 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 20:33:21.234 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-09-16 20:33:21.252 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.252 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 18ms reading results.
2025-09-16 20:33:21.254 +03:00 [DBG] Committing transaction.
2025-09-16 20:33:21.259 +03:00 [DBG] Committed transaction.
2025-09-16 20:33:21.261 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.261 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:21.263 +03:00 [DBG] Disposing transaction.
2025-09-16 20:33:21.264 +03:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:21.264 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:21.264 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-09-16 20:33:21.274 +03:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Patient.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:21.301 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:21.303 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:21.304 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:33:21.304 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:33:21.310 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:33:21.350 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.351 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.352 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:21.352 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:21.353 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:21.353 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Patients] ([DateOfBirth], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1);
2025-09-16 20:33:21.454 +03:00 [INF] Executed DbCommand (100ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Patients] ([DateOfBirth], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1);
2025-09-16 20:33:21.468 +03:00 [DBG] The foreign key property 'Patient.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-09-16 20:33:21.472 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.472 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 17ms reading results.
2025-09-16 20:33:21.473 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.474 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:21.478 +03:00 [DBG] An entity of type 'Patient' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:21.478 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 20:33:21.479 +03:00 [INF] New patient registered: sara@example.com
2025-09-16 20:33:21.484 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 20:33:21.485 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 20:33:21.486 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 20:33:21.486 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 20:33:21.487 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 20:33:21.487 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 20:33:21.496 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API) in 3908.3763ms
2025-09-16 20:33:21.497 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Register (MedicalApp.API)'
2025-09-16 20:33:21.498 +03:00 [DBG] Connection ID "18086456113720460013" disconnecting.
2025-09-16 20:33:21.501 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:33:21.509 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:21.510 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 20:33:21.511 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Patient/register - 200 null application/json; charset=utf-8 4064.4139ms
2025-09-16 20:33:28.496 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Patient/details/2 - null null
2025-09-16 20:33:28.498 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/details/2'
2025-09-16 20:33:28.498 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)' with route pattern 'api/Patient/details/{id:int}' is valid for the request path '/api/Patient/details/2'
2025-09-16 20:33:28.498 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 20:33:28.498 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:33:28.498 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 20:33:28.504 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 20:33:28.505 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:33:28.506 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:33:28.506 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:33:28.506 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:33:28.506 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:33:28.506 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 20:33:28.512 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 20:33:28.514 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 20:33:28.514 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 20:33:28.515 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:33:28.515 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:33:28.516 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 20:33:28.516 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 20:33:28.598 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:33:28.601 +03:00 [DBG] Compiling query expression: 
'DbSet<Patient>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 20:33:28.618 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Patient>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.UserId
        FROM Patients AS p
        WHERE p.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.UserId
        FROM Patients AS p
        WHERE p.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Patient entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Patient instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Patient);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Patient.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Patient)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]: 
                        {
                            return (Patient)
                            {
                                PatientProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (PatientProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<DateOfBirth>k__BackingField = dataReader.GetDateTime(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Patient)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 20:33:28.626 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:33:28.627 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 20:33:28.627 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:28.627 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:28.628 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:28.628 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:28.628 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:28.628 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 20:33:28.696 +03:00 [INF] Executed DbCommand (68ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 20:33:28.700 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:28.700 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:28.700 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 4ms reading results.
2025-09-16 20:33:28.700 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:28.700 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:28.701 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 20:33:28.701 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 20:33:28.701 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 20:33:28.701 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 20:33:28.702 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 20:33:28.702 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.PatientProxy'.
2025-09-16 20:33:28.721 +03:00 [DBG] The navigation 'PatientProxy.User' is being lazy-loaded.
2025-09-16 20:33:28.731 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .Where(e => EF.Property<string>(e, "Id") == __p_0)
    .AsTracking()
    .FirstOrDefault()'
2025-09-16 20:33:28.741 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ApplicationUser>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ApplicationUser entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ApplicationUser instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ApplicationUser);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ApplicationUser)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                        {
                            return (ApplicationUser)
                            {
                                ApplicationUserProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetString(0);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                instance.<LastName>k__BackingField = dataReader.GetString(6);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(ApplicationUser)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 20:33:28.748 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:28.748 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:28.748 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:28.748 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:28.748 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:28.749 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:33:28.763 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:33:28.769 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:28.769 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:28.770 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:28.770 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 7ms reading results.
2025-09-16 20:33:28.770 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:28.770 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:28.809 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API) in 302.9273ms
2025-09-16 20:33:28.810 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 20:33:28.810 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:33:28.810 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:28.810 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 20:33:28.811 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Patient/details/2 - 200 null application/json; charset=utf-8 314.3179ms
2025-09-16 20:33:59.321 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Patient/update/2 - application/json 26
2025-09-16 20:33:59.321 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/update/2'
2025-09-16 20:33:59.322 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)' with route pattern 'api/Patient/update/{id:int}' is valid for the request path '/api/Patient/update/2'
2025-09-16 20:33:59.322 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 20:33:59.322 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:33:59.322 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 20:33:59.329 +03:00 [INF] Route matched with {action = "Update", controller = "Patient"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(Int32, MedicalApp.BL.DTOs.PatientDTOs.UpdatePatientDTO) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 20:33:59.329 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:33:59.329 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:33:59.329 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:33:59.334 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:33:59.337 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:33:59.337 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 20:33:59.371 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 20:33:59.371 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 20:33:59.372 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 20:33:59.372 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:33:59.372 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:33:59.372 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 20:33:59.372 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 20:33:59.372 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.UpdatePatientDTO' ...
2025-09-16 20:33:59.372 +03:00 [DBG] Attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.UpdatePatientDTO' using the name '' in request data ...
2025-09-16 20:33:59.373 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 20:33:59.404 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.PatientDTOs.UpdatePatientDTO'
2025-09-16 20:33:59.405 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.UpdatePatientDTO'.
2025-09-16 20:33:59.405 +03:00 [DBG] Done attempting to bind parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.UpdatePatientDTO'.
2025-09-16 20:33:59.405 +03:00 [DBG] Attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.UpdatePatientDTO' ...
2025-09-16 20:33:59.480 +03:00 [DBG] Done attempting to validate the bound parameter 'updateDTO' of type 'MedicalApp.BL.DTOs.PatientDTOs.UpdatePatientDTO'.
2025-09-16 20:33:59.505 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:33:59.508 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:33:59.508 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 20:33:59.508 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.509 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.509 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:59.509 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:59.509 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:59.509 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 20:33:59.514 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 20:33:59.515 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:59.516 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.516 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 2ms reading results.
2025-09-16 20:33:59.516 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.516 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:59.522 +03:00 [DBG] The navigation 'PatientProxy.User' is being lazy-loaded.
2025-09-16 20:33:59.523 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.523 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.523 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:59.523 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:59.523 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:59.523 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:33:59.530 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:33:59.531 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:59.531 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:59.532 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.532 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 20:33:59.532 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.532 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:59.538 +03:00 [DBG] An entity of type 'Patient' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:59.539 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.539 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.539 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:59.539 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:59.539 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:59.539 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:33:59.545 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-09-16 20:33:59.545 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.545 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 20:33:59.546 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.546 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:59.548 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:59.548 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:33:59.548 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:33:59.549 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:33:59.551 +03:00 [DBG] Executing 2 update commands as a batch.
2025-09-16 20:33:59.551 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.551 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.551 +03:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-09-16 20:33:59.552 +03:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-09-16 20:33:59.553 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:33:59.553 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:59.553 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:33:59.553 +03:00 [DBG] Executing DbCommand [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256), @p20='?' (DbType = Int32), @p18='?' (DbType = DateTime2), @p19='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
UPDATE [Patients] SET [DateOfBirth] = @p18, [UserId] = @p19
OUTPUT 1
WHERE [Id] = @p20;
2025-09-16 20:33:59.611 +03:00 [INF] Executed DbCommand (58ms) [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256), @p20='?' (DbType = Int32), @p18='?' (DbType = DateTime2), @p19='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
UPDATE [Patients] SET [DateOfBirth] = @p18, [UserId] = @p19
OUTPUT 1
WHERE [Id] = @p20;
2025-09-16 20:33:59.611 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.611 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 20:33:59.612 +03:00 [DBG] Committing transaction.
2025-09-16 20:33:59.613 +03:00 [DBG] Committed transaction.
2025-09-16 20:33:59.613 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.613 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:33:59.613 +03:00 [DBG] Disposing transaction.
2025-09-16 20:33:59.613 +03:00 [DBG] An entity of type 'Patient' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:59.613 +03:00 [DBG] An entity of type 'ApplicationUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:33:59.613 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-09-16 20:33:59.613 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 20:33:59.613 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 20:33:59.614 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 20:33:59.614 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-09-16 20:33:59.615 +03:00 [INF] Patient updated: Id=2, Email=sara@example.com
2025-09-16 20:33:59.616 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-09-16 20:33:59.616 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API) in 279.3969ms
2025-09-16 20:33:59.616 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.Update (MedicalApp.API)'
2025-09-16 20:33:59.617 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:33:59.617 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:33:59.617 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 20:33:59.617 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Patient/update/2 - 200 null null 295.8661ms
2025-09-16 20:34:06.787 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Patient/details/2 - null null
2025-09-16 20:34:06.788 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Patient/details/2'
2025-09-16 20:34:06.788 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)' with route pattern 'api/Patient/details/{id:int}' is valid for the request path '/api/Patient/details/2'
2025-09-16 20:34:06.788 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 20:34:06.788 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:34:06.788 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 20:34:06.789 +03:00 [INF] Route matched with {action = "GetDetails", controller = "Patient"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetDetails(Int32) on controller MedicalApp.API.Controllers.PatientController (MedicalApp.API).
2025-09-16 20:34:06.789 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:34:06.789 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:34:06.789 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:34:06.789 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:34:06.789 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:34:06.789 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 20:34:06.789 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.PatientController (MedicalApp.API)
2025-09-16 20:34:06.789 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 20:34:06.790 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 20:34:06.790 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:34:06.790 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 20:34:06.790 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 20:34:06.790 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 20:34:06.791 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:34:06.791 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:34:06.791 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 20:34:06.791 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:34:06.791 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:34:06.792 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:34:06.792 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:34:06.792 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:34:06.792 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 20:34:06.800 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 20:34:06.801 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:34:06.801 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:34:06.801 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 20:34:06.801 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:34:06.801 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:34:06.801 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 20:34:06.802 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 20:34:06.802 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 20:34:06.802 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 20:34:06.802 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 20:34:06.803 +03:00 [INF] Executing OkObjectResult, writing value of type 'Castle.Proxies.PatientProxy'.
2025-09-16 20:34:06.803 +03:00 [DBG] The navigation 'PatientProxy.User' is being lazy-loaded.
2025-09-16 20:34:06.803 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:34:06.804 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:34:06.804 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:34:06.804 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:34:06.804 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:34:06.804 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:34:06.807 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 20:34:06.808 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:34:06.808 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:34:06.808 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:34:06.808 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 20:34:06.808 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:34:06.808 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:34:06.809 +03:00 [INF] Executed action MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API) in 19.799ms
2025-09-16 20:34:06.809 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.PatientController.GetDetails (MedicalApp.API)'
2025-09-16 20:34:06.809 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:34:06.809 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:34:06.809 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 20:34:06.809 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Patient/details/2 - 200 null application/json; charset=utf-8 21.6995ms
2025-09-16 20:34:40.055 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - application/json 123
2025-09-16 20:34:40.055 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/schedule-appointment'
2025-09-16 20:34:40.055 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)' with route pattern 'api/Appointment/schedule-appointment' is valid for the request path '/api/Appointment/schedule-appointment'
2025-09-16 20:34:40.055 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 20:34:40.056 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:34:40.060 +03:00 [DBG] Policy authentication schemes  did not succeed
2025-09-16 20:34:40.060 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2025-09-16 20:34:40.061 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2025-09-16 20:34:40.061 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - 302 null null 6.2618ms
2025-09-16 20:34:40.266 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fschedule-appointment - null null
2025-09-16 20:34:40.266 +03:00 [DBG] No candidates found for the request path '/Account/Login'
2025-09-16 20:34:40.266 +03:00 [DBG] Request did not match any endpoints
2025-09-16 20:34:40.266 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:34:40.266 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fschedule-appointment - 404 null null 0.6592ms
2025-09-16 20:34:40.266 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/Account/Login, Response status code: 404
2025-09-16 20:35:02.055 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - application/json 133
2025-09-16 20:35:02.056 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/schedule-appointment'
2025-09-16 20:35:02.056 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)' with route pattern 'api/Appointment/schedule-appointment' is valid for the request path '/api/Appointment/schedule-appointment'
2025-09-16 20:35:02.056 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 20:35:02.056 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:35:02.056 +03:00 [DBG] Policy authentication schemes  did not succeed
2025-09-16 20:35:02.056 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2025-09-16 20:35:02.056 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2025-09-16 20:35:02.056 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - 302 null null 0.9604ms
2025-09-16 20:35:02.082 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fschedule-appointment - null null
2025-09-16 20:35:02.083 +03:00 [DBG] No candidates found for the request path '/Account/Login'
2025-09-16 20:35:02.083 +03:00 [DBG] Request did not match any endpoints
2025-09-16 20:35:02.083 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:35:02.084 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fschedule-appointment - 404 null null 1.4879ms
2025-09-16 20:35:02.084 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/Account/Login, Response status code: 404
2025-09-16 20:35:06.705 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - application/json 133
2025-09-16 20:35:06.706 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/schedule-appointment'
2025-09-16 20:35:06.706 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)' with route pattern 'api/Appointment/schedule-appointment' is valid for the request path '/api/Appointment/schedule-appointment'
2025-09-16 20:35:06.706 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 20:35:06.706 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:35:06.706 +03:00 [DBG] Policy authentication schemes  did not succeed
2025-09-16 20:35:06.706 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2025-09-16 20:35:06.706 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2025-09-16 20:35:06.706 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - 302 null null 0.9479ms
2025-09-16 20:35:06.711 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fschedule-appointment - null null
2025-09-16 20:35:06.711 +03:00 [DBG] No candidates found for the request path '/Account/Login'
2025-09-16 20:35:06.711 +03:00 [DBG] Request did not match any endpoints
2025-09-16 20:35:06.711 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:35:06.711 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fschedule-appointment - 404 null null 0.5905ms
2025-09-16 20:35:06.712 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/Account/Login, Response status code: 404
2025-09-16 20:36:03.970 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Auth/login - application/json 60
2025-09-16 20:36:03.970 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-09-16 20:36:03.970 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-09-16 20:36:03.970 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:36:03.970 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:36:03.971 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:36:03.976 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(MedicalApp.BL.DTOs.AuthDTOs.LoginDTO) on controller MedicalApp.API.Controllers.AuthController (MedicalApp.API).
2025-09-16 20:36:03.976 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 20:36:03.976 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 20:36:03.976 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 20:36:03.976 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 20:36:03.976 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 20:36:03.976 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 20:36:03.977 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 20:36:03.978 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 20:36:03.978 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' using the name '' in request data ...
2025-09-16 20:36:03.978 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 20:36:03.980 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'
2025-09-16 20:36:03.980 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:36:03.980 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:36:03.980 +03:00 [DBG] Attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 20:36:03.981 +03:00 [DBG] Done attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 20:36:03.989 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 20:36:03.990 +03:00 [DBG] Creating DbConnection.
2025-09-16 20:36:03.990 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 20:36:03.990 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:36:03.990 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:36:03.990 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:36:03.990 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:36:03.990 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:36:03.991 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 20:36:04.007 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 20:36:04.007 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 20:36:04.008 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:36:04.008 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 20:36:04.008 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:36:04.008 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:36:04.146 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-09-16 20:36:04.242 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-09-16 20:36:04.245 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:36:04.245 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:36:04.245 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 20:36:04.245 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:36:04.245 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 20:36:04.245 +03:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-09-16 20:36:04.261 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-09-16 20:36:04.281 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 20:36:04.281 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 20ms reading results.
2025-09-16 20:36:04.281 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:36:04.281 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 20:36:04.365 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 20:36:04.365 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 20:36:04.365 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 20:36:04.365 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 20:36:04.365 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 20:36:04.366 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 20:36:04.369 +03:00 [INF] Executed action MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API) in 392.6035ms
2025-09-16 20:36:04.369 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 20:36:04.369 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 20:36:04.370 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 20:36:04.370 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 20:36:04.370 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Auth/login - 200 null application/json; charset=utf-8 400.419ms
2025-09-16 20:36:17.463 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - application/json 133
2025-09-16 20:36:17.464 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/schedule-appointment'
2025-09-16 20:36:17.464 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)' with route pattern 'api/Appointment/schedule-appointment' is valid for the request path '/api/Appointment/schedule-appointment'
2025-09-16 20:36:17.464 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 20:36:17.464 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:36:17.464 +03:00 [DBG] Policy authentication schemes  did not succeed
2025-09-16 20:36:17.464 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2025-09-16 20:36:17.465 +03:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2025-09-16 20:36:17.465 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - 302 null null 1.4662ms
2025-09-16 20:36:17.474 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fschedule-appointment - null null
2025-09-16 20:36:17.474 +03:00 [DBG] No candidates found for the request path '/Account/Login'
2025-09-16 20:36:17.474 +03:00 [DBG] Request did not match any endpoints
2025-09-16 20:36:17.474 +03:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-09-16 20:36:17.475 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/Account/Login?ReturnUrl=%2Fapi%2FAppointment%2Fschedule-appointment - 404 null null 0.9248ms
2025-09-16 20:36:17.475 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:44358/Account/Login, Response status code: 404
2025-09-16 20:53:13.597 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 20:53:13.756 +03:00 [DBG] Hosting starting
2025-09-16 20:53:13.776 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 20:53:13.796 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 20:53:13.805 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 20:53:13.811 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 20:53:13.820 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 20:53:13.828 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 20:53:13.834 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:53:13.838 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 20:53:13.840 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:53:13.846 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 20:53:13.850 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 20:53:13.854 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 20:53:13.855 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 20:53:13.941 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 20:53:13.942 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 20:53:13.948 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 20:53:13.948 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 20:53:13.948 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 20:53:13.948 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 20:53:13.959 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:53:13.959 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:53:13.979 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 20:53:14.111 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 20:53:14.113 +03:00 [INF] Hosting environment: Development
2025-09-16 20:53:14.113 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 20:53:14.113 +03:00 [DBG] Hosting started
2025-09-16 20:53:14.422 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 20:53:14.426 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 20:53:14.466 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 20:53:14.473 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 20:53:14.475 +03:00 [DBG] Connection ID "18158513699168456551" disconnecting.
2025-09-16 20:53:14.477 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 501.1047ms
2025-09-16 20:53:14.824 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 20:53:14.824 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 20:53:14.829 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.693ms
2025-09-16 20:53:14.871 +03:00 [DBG] Connection ID "18158513699168456553" disconnecting.
2025-09-16 20:53:14.872 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 48.1229ms
2025-09-16 20:53:15.361 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 20:53:15.662 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 301.0173ms
2025-09-16 20:57:07.094 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 20:57:07.279 +03:00 [DBG] Hosting starting
2025-09-16 20:57:07.316 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 20:57:07.400 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 20:57:07.409 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 20:57:07.416 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 20:57:07.427 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 20:57:07.453 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 20:57:07.458 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:57:07.463 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 20:57:07.466 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:57:07.475 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 20:57:07.480 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 20:57:07.485 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 20:57:07.486 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 20:57:07.568 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 20:57:07.571 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 20:57:07.584 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 20:57:07.584 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 20:57:07.584 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 20:57:07.584 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 20:57:07.600 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:57:07.601 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:57:07.622 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 20:57:07.760 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 20:57:07.760 +03:00 [INF] Hosting environment: Development
2025-09-16 20:57:07.760 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 20:57:07.760 +03:00 [DBG] Hosting started
2025-09-16 20:57:07.984 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 20:57:07.986 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 20:57:08.021 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 20:57:08.021 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 20:57:08.024 +03:00 [DBG] Connection ID "17365880169046212703" disconnecting.
2025-09-16 20:57:08.095 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 20:57:08.026 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 407.5536ms
2025-09-16 20:57:08.099 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.0513ms
2025-09-16 20:57:08.101 +03:00 [DBG] Connection ID "18374686494167139889" disconnecting.
2025-09-16 20:57:08.102 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 20:57:08.152 +03:00 [DBG] Connection ID "18302628900129210569" disconnecting.
2025-09-16 20:57:08.160 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 57.721ms
2025-09-16 20:57:08.300 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 20:57:08.504 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 204.0001ms
2025-09-16 20:58:07.136 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 20:58:07.292 +03:00 [DBG] Hosting starting
2025-09-16 20:58:07.309 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 20:58:07.329 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 20:58:07.336 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 20:58:07.341 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 20:58:07.346 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 20:58:07.352 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 20:58:07.355 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:58:07.358 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 20:58:07.359 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 20:58:07.364 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 20:58:07.366 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 20:58:07.369 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 20:58:07.369 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 20:58:07.420 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 20:58:07.422 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 20:58:07.427 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 20:58:07.427 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 20:58:07.427 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 20:58:07.427 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 20:58:07.438 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:58:07.439 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 20:58:07.450 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 20:58:07.553 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 20:58:07.553 +03:00 [INF] Hosting environment: Development
2025-09-16 20:58:07.553 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 20:58:07.553 +03:00 [DBG] Hosting started
2025-09-16 20:58:07.709 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 20:58:07.719 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 20:58:07.828 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 20:58:07.829 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 20:58:07.838 +03:00 [DBG] Connection ID "17437937763084140681" disconnecting.
2025-09-16 20:58:07.838 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 390.925ms
2025-09-16 20:58:07.885 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 20:58:07.886 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 20:58:07.911 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 24.979ms
2025-09-16 20:58:08.027 +03:00 [DBG] Connection ID "18374686494167139891" disconnecting.
2025-09-16 20:58:08.029 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 143.3953ms
2025-09-16 20:58:08.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 20:58:08.297 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 210.2138ms
2025-09-16 20:58:08.297 +03:00 [DBG] Connection ID "17437937763084140683" disconnecting.
2025-09-16 21:00:14.316 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 21:00:14.499 +03:00 [DBG] Hosting starting
2025-09-16 21:00:14.519 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 21:00:14.540 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 21:00:14.549 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 21:00:14.554 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 21:00:14.562 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 21:00:14.571 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 21:00:14.576 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:00:14.580 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 21:00:14.583 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:00:14.591 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 21:00:14.596 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 21:00:14.600 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 21:00:14.600 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 21:00:14.789 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 21:00:14.793 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 21:00:14.802 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 21:00:14.802 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 21:00:14.802 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 21:00:14.802 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 21:00:14.817 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:00:14.818 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:00:14.855 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 21:00:14.962 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 21:00:14.963 +03:00 [INF] Hosting environment: Development
2025-09-16 21:00:14.963 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 21:00:14.963 +03:00 [DBG] Hosting started
2025-09-16 21:00:15.116 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 21:00:15.119 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 21:00:15.157 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 21:00:15.158 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 21:00:15.161 +03:00 [DBG] Connection ID "17798225737568747742" disconnecting.
2025-09-16 21:00:15.164 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 311.1675ms
2025-09-16 21:00:15.199 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 21:00:15.199 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 21:00:15.206 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 6.6502ms
2025-09-16 21:00:15.244 +03:00 [DBG] Connection ID "18086456113720460027" disconnecting.
2025-09-16 21:00:15.245 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.4558ms
2025-09-16 21:00:15.816 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 21:00:16.281 +03:00 [DBG] Connection ID "18302628900129210579" disconnecting.
2025-09-16 21:00:16.281 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 465.0191ms
2025-09-16 21:02:52.100 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 21:02:52.242 +03:00 [DBG] Hosting starting
2025-09-16 21:02:52.257 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 21:02:52.276 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 21:02:52.284 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 21:02:52.288 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 21:02:52.294 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 21:02:52.303 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 21:02:52.307 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:02:52.310 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 21:02:52.312 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:02:52.317 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 21:02:52.321 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 21:02:52.324 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 21:02:52.324 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 21:02:52.385 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 21:02:52.387 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 21:02:52.392 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 21:02:52.392 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 21:02:52.393 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 21:02:52.393 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 21:02:52.406 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:02:52.407 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:02:52.418 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 21:02:52.585 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 21:02:52.585 +03:00 [INF] Hosting environment: Development
2025-09-16 21:02:52.585 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 21:02:52.586 +03:00 [DBG] Hosting started
2025-09-16 21:02:52.562 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_6(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 109
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 21:02:52.732 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 21:02:52.736 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 21:02:52.767 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 21:02:52.768 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 21:02:52.845 +03:00 [DBG] Connection ID "18014398519682533281" disconnecting.
2025-09-16 21:02:52.821 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 500 null text/html; charset=utf-8 402.5718ms
2025-09-16 21:02:53.063 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 21:02:53.063 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 21:02:53.067 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 2.9319ms
2025-09-16 21:02:53.117 +03:00 [DBG] Connection ID "18374686494167139901" disconnecting.
2025-09-16 21:02:53.117 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 54.5059ms
2025-09-16 21:02:53.134 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/favicon.ico - null null
2025-09-16 21:02:53.136 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at MedicalApp.API.Program.<>c.<Main>b__0_6(SwaggerGenOptions c) in G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API\Program.cs:line 109
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitNoCache(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-09-16 21:02:53.148 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/favicon.ico - 500 null text/plain; charset=utf-8 13.2832ms
2025-09-16 21:03:32.971 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 21:03:33.166 +03:00 [DBG] Hosting starting
2025-09-16 21:03:33.201 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 21:03:33.217 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 21:03:33.226 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 21:03:33.232 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 21:03:33.237 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 21:03:33.251 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 21:03:33.258 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:03:33.262 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 21:03:33.264 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:03:33.270 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 21:03:33.273 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 21:03:33.276 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 21:03:33.277 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 21:03:33.340 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 21:03:33.342 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 21:03:33.348 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 21:03:33.348 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 21:03:33.348 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 21:03:33.348 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 21:03:33.358 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:03:33.359 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:03:33.374 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 21:03:33.504 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 21:03:33.505 +03:00 [INF] Hosting environment: Development
2025-09-16 21:03:33.505 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 21:03:33.505 +03:00 [DBG] Hosting started
2025-09-16 21:03:33.577 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 21:03:33.579 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 21:03:33.601 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 21:03:33.601 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 21:03:33.603 +03:00 [DBG] Connection ID "18014398519682533283" disconnecting.
2025-09-16 21:03:33.632 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 21:03:33.637 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 21:03:33.637 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.3676ms
2025-09-16 21:03:33.605 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 233.7838ms
2025-09-16 21:03:33.681 +03:00 [DBG] Connection ID "17582052946865029733" disconnecting.
2025-09-16 21:03:33.683 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 45.9919ms
2025-09-16 21:03:33.932 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 21:03:34.098 +03:00 [DBG] Connection ID "17582052951159996869" disconnecting.
2025-09-16 21:03:34.099 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 166.7535ms
2025-09-16 21:04:08.313 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Auth/login - application/json 60
2025-09-16 21:04:08.359 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-09-16 21:04:08.360 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-09-16 21:04:08.361 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 21:04:08.833 +03:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-09-16 21:04:08.837 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 21:04:08.877 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(MedicalApp.BL.DTOs.AuthDTOs.LoginDTO) on controller MedicalApp.API.Controllers.AuthController (MedicalApp.API).
2025-09-16 21:04:08.879 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 21:04:08.880 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 21:04:08.881 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 21:04:08.881 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 21:04:08.881 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 21:04:08.884 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 21:04:10.008 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 21:04:10.096 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AuthController (MedicalApp.API)
2025-09-16 21:04:10.099 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 21:04:10.102 +03:00 [DBG] Attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' using the name '' in request data ...
2025-09-16 21:04:10.103 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 21:04:10.112 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'
2025-09-16 21:04:10.112 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 21:04:10.112 +03:00 [DBG] Done attempting to bind parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 21:04:10.112 +03:00 [DBG] Attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO' ...
2025-09-16 21:04:10.118 +03:00 [DBG] Done attempting to validate the bound parameter 'loginDTO' of type 'MedicalApp.BL.DTOs.AuthDTOs.LoginDTO'.
2025-09-16 21:04:10.906 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 21:04:10.906 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 21:04:11.770 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 21:04:12.047 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-09-16 21:04:12.844 +03:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<ApplicationUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<ApplicationUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            ApplicationUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                ApplicationUser instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(ApplicationUser);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (ApplicationUser)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                            {
                                return (ApplicationUser)
                                {
                                    ApplicationUserProxy instance;
                                    DbContext namelessParameter{2};
                                    IEntityType namelessParameter{3};
                                    ILazyLoader namelessParameter{4};
                                    namelessParameter{2} = materializationContext1.Context;
                                    namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                    namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                    instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                        context: namelessParameter{2}, 
                                        entityType: namelessParameter{3}, 
                                        loader: namelessParameter{4}, 
                                        constructorArguments: new object[]{ });
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                    instance.<LastName>k__BackingField = dataReader.GetString(6);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                    return instance;
                                };
                            }
                        default: 
                            default(ApplicationUser)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: MedicalApp.DA.Models.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-09-16 21:04:12.950 +03:00 [DBG] Creating DbConnection.
2025-09-16 21:04:13.035 +03:00 [DBG] Created DbConnection. (102ms).
2025-09-16 21:04:13.042 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:04:13.920 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:04:13.923 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:04:13.930 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-16 21:04:13.938 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-09-16 21:04:13.944 +03:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 21:04:14.125 +03:00 [INF] Executed DbCommand (176ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-09-16 21:04:14.186 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:04:14.338 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:04:14.347 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 216ms reading results.
2025-09-16 21:04:14.352 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:04:14.358 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (5ms).
2025-09-16 21:04:14.526 +03:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-09-16 21:04:14.692 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-09-16 21:04:14.695 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:04:14.697 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:04:14.697 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:04:14.697 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:04:14.697 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:04:14.697 +03:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-09-16 21:04:14.717 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-09-16 21:04:14.718 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:04:14.719 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 21:04:14.719 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:04:14.719 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:04:14.803 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 21:04:14.805 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 21:04:14.805 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 21:04:14.806 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 21:04:14.807 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 21:04:14.807 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-09-16 21:04:14.816 +03:00 [INF] Executed action MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API) in 5929.9674ms
2025-09-16 21:04:14.817 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AuthController.Login (MedicalApp.API)'
2025-09-16 21:04:14.819 +03:00 [DBG] Connection ID "17798225737568747748" disconnecting.
2025-09-16 21:04:14.822 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 21:04:14.835 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:04:14.837 +03:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-09-16 21:04:14.838 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Auth/login - 200 null application/json; charset=utf-8 6524.9619ms
2025-09-16 21:05:08.698 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - application/json 132
2025-09-16 21:05:08.701 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/schedule-appointment'
2025-09-16 21:05:08.701 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)' with route pattern 'api/Appointment/schedule-appointment' is valid for the request path '/api/Appointment/schedule-appointment'
2025-09-16 21:05:08.701 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:05:08.779 +03:00 [DBG] Successfully validated the token.
2025-09-16 21:05:08.780 +03:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-09-16 21:05:08.783 +03:00 [DBG] Authorization was successful.
2025-09-16 21:05:08.784 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:05:08.791 +03:00 [INF] Route matched with {action = "CreateAppointment", controller = "Appointment"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateAppointment(MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO) on controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API).
2025-09-16 21:05:08.804 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 21:05:08.805 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 21:05:08.806 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 21:05:08.806 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 21:05:08.807 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 21:05:08.807 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:05:09.128 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 21:05:09.129 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:05:09.130 +03:00 [DBG] Attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' ...
2025-09-16 21:05:09.131 +03:00 [DBG] Attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' using the name '' in request data ...
2025-09-16 21:05:09.131 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 21:05:09.184 +03:00 [DBG] JSON input formatter threw an exception: '0x0A' is invalid within a JSON string. The string should be correctly escaped. Path: $.status | LineNumber: 3 | BytePositionInLine: 23.
2025-09-16 21:05:09.185 +03:00 [DBG] Done attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:05:09.185 +03:00 [DBG] Done attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:05:09.185 +03:00 [DBG] Attempting to validate the bound parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' ...
2025-09-16 21:05:09.187 +03:00 [DBG] Done attempting to validate the bound parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:05:09.188 +03:00 [DBG] The request has model state errors, returning an error response.
2025-09-16 21:05:09.189 +03:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-09-16 21:05:09.190 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 21:05:09.190 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 21:05:09.191 +03:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-09-16 21:05:09.191 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-09-16 21:05:09.191 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-09-16 21:05:09.224 +03:00 [INF] Executed action MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API) in 417.1585ms
2025-09-16 21:05:09.224 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:05:09.224 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - 400 null application/problem+json; charset=utf-8 526.7002ms
2025-09-16 21:05:51.184 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - application/json 133
2025-09-16 21:05:51.188 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/schedule-appointment'
2025-09-16 21:05:51.188 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)' with route pattern 'api/Appointment/schedule-appointment' is valid for the request path '/api/Appointment/schedule-appointment'
2025-09-16 21:05:51.188 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:05:51.194 +03:00 [DBG] Successfully validated the token.
2025-09-16 21:05:51.194 +03:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-09-16 21:05:51.198 +03:00 [DBG] Authorization was successful.
2025-09-16 21:05:51.199 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:05:51.199 +03:00 [INF] Route matched with {action = "CreateAppointment", controller = "Appointment"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateAppointment(MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO) on controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API).
2025-09-16 21:05:51.200 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 21:05:51.200 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 21:05:51.200 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 21:05:51.200 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 21:05:51.201 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 21:05:51.201 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:05:51.207 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:05:51.207 +03:00 [DBG] Attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' ...
2025-09-16 21:05:51.207 +03:00 [DBG] Attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' using the name '' in request data ...
2025-09-16 21:05:51.208 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 21:05:51.211 +03:00 [DBG] JSON input formatter threw an exception: The JSON value could not be converted to MedicalApp.DA.Enums.Status. Path: $.status | LineNumber: 3 | BytePositionInLine: 23.
2025-09-16 21:05:51.211 +03:00 [DBG] Done attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:05:51.212 +03:00 [DBG] Done attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:05:51.212 +03:00 [DBG] Attempting to validate the bound parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' ...
2025-09-16 21:05:51.213 +03:00 [DBG] Done attempting to validate the bound parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:05:51.213 +03:00 [DBG] The request has model state errors, returning an error response.
2025-09-16 21:05:51.213 +03:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-09-16 21:05:51.214 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 21:05:51.214 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 21:05:51.214 +03:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-09-16 21:05:51.214 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-09-16 21:05:51.214 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-09-16 21:05:51.216 +03:00 [INF] Executed action MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API) in 14.9361ms
2025-09-16 21:05:51.216 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:05:51.216 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - 400 null application/problem+json; charset=utf-8 32.2014ms
2025-09-16 21:05:54.786 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - application/json 133
2025-09-16 21:05:54.786 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/schedule-appointment'
2025-09-16 21:05:54.787 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)' with route pattern 'api/Appointment/schedule-appointment' is valid for the request path '/api/Appointment/schedule-appointment'
2025-09-16 21:05:54.787 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:05:54.788 +03:00 [DBG] Successfully validated the token.
2025-09-16 21:05:54.788 +03:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-09-16 21:05:54.791 +03:00 [DBG] Authorization was successful.
2025-09-16 21:05:54.791 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:05:54.791 +03:00 [INF] Route matched with {action = "CreateAppointment", controller = "Appointment"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateAppointment(MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO) on controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API).
2025-09-16 21:05:54.791 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 21:05:54.791 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 21:05:54.792 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 21:05:54.792 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 21:05:54.792 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 21:05:54.792 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:05:54.793 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:05:54.793 +03:00 [DBG] Attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' ...
2025-09-16 21:05:54.793 +03:00 [DBG] Attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' using the name '' in request data ...
2025-09-16 21:05:54.794 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 21:05:54.794 +03:00 [DBG] JSON input formatter threw an exception: The JSON value could not be converted to MedicalApp.DA.Enums.Status. Path: $.status | LineNumber: 3 | BytePositionInLine: 23.
2025-09-16 21:05:54.795 +03:00 [DBG] Done attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:05:54.795 +03:00 [DBG] Done attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:05:54.795 +03:00 [DBG] Attempting to validate the bound parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' ...
2025-09-16 21:05:54.795 +03:00 [DBG] Done attempting to validate the bound parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:05:54.795 +03:00 [DBG] The request has model state errors, returning an error response.
2025-09-16 21:05:54.796 +03:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-09-16 21:05:54.796 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 21:05:54.796 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 21:05:54.796 +03:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-09-16 21:05:54.797 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-09-16 21:05:54.797 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-09-16 21:05:54.798 +03:00 [INF] Executed action MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API) in 5.9189ms
2025-09-16 21:05:54.798 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:05:54.798 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - 400 null application/problem+json; charset=utf-8 12.1267ms
2025-09-16 21:12:24.591 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 21:12:24.700 +03:00 [DBG] Hosting starting
2025-09-16 21:12:24.711 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 21:12:24.723 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 21:12:24.728 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 21:12:24.732 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 21:12:24.736 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 21:12:24.741 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 21:12:24.743 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:12:24.746 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 21:12:24.748 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:12:24.755 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 21:12:24.759 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 21:12:24.763 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 21:12:24.764 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 21:12:24.841 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 21:12:24.843 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 21:12:24.849 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 21:12:24.849 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 21:12:24.849 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 21:12:24.849 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 21:12:24.868 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:12:24.868 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:12:24.901 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 21:12:25.103 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 21:12:25.103 +03:00 [INF] Hosting environment: Development
2025-09-16 21:12:25.103 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 21:12:25.103 +03:00 [DBG] Hosting started
2025-09-16 21:12:25.285 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 21:12:25.286 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 21:12:25.317 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 21:12:25.318 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 21:12:25.320 +03:00 [DBG] Connection ID "18086456113720460034" disconnecting.
2025-09-16 21:12:25.323 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 425.0227ms
2025-09-16 21:12:25.384 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 21:12:25.396 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 21:12:25.401 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 3.5208ms
2025-09-16 21:12:25.503 +03:00 [DBG] Connection ID "18014398523977498637" disconnecting.
2025-09-16 21:12:25.507 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 122.9605ms
2025-09-16 21:12:25.792 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 21:12:26.304 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 512.6829ms
2025-09-16 21:12:58.939 +03:00 [INF] Request starting HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - application/json 133
2025-09-16 21:12:59.060 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/schedule-appointment'
2025-09-16 21:12:59.060 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)' with route pattern 'api/Appointment/schedule-appointment' is valid for the request path '/api/Appointment/schedule-appointment'
2025-09-16 21:12:59.061 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:12:59.203 +03:00 [DBG] Successfully validated the token.
2025-09-16 21:12:59.207 +03:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-09-16 21:12:59.217 +03:00 [DBG] Authorization was successful.
2025-09-16 21:12:59.219 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:12:59.278 +03:00 [INF] Route matched with {action = "CreateAppointment", controller = "Appointment"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateAppointment(MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO) on controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API).
2025-09-16 21:12:59.279 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 21:12:59.280 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 21:12:59.282 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 21:12:59.282 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 21:12:59.282 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 21:12:59.290 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:12:59.628 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-09-16 21:13:00.056 +03:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-16 21:13:00.057 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:13:00.068 +03:00 [DBG] Attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' ...
2025-09-16 21:13:00.073 +03:00 [DBG] Attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' using the name '' in request data ...
2025-09-16 21:13:00.075 +03:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-09-16 21:13:00.190 +03:00 [DBG] JSON input formatter succeeded, deserializing to type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'
2025-09-16 21:13:00.190 +03:00 [DBG] Done attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:13:00.190 +03:00 [DBG] Done attempting to bind parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:13:00.190 +03:00 [DBG] Attempting to validate the bound parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO' ...
2025-09-16 21:13:00.210 +03:00 [DBG] Done attempting to validate the bound parameter 'appointmentDTO' of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:13:01.161 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-09-16 21:13:01.162 +03:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-09-16 21:13:01.696 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 21:13:01.739 +03:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Appointment.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:01.843 +03:00 [DBG] Context 'AppDbContext' started tracking 'Appointment' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:01.847 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 21:13:01.858 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 21:13:01.877 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 21:13:02.279 +03:00 [DBG] Creating DbConnection.
2025-09-16 21:13:02.320 +03:00 [DBG] Created DbConnection. (37ms).
2025-09-16 21:13:02.326 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:03.393 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:03.398 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:13:03.406 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-09-16 21:13:03.415 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (17ms).
2025-09-16 21:13:03.425 +03:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Appointments] ([AppointmentDate], [DoctorId], [PatientId], [Reason], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-09-16 21:13:03.613 +03:00 [INF] Executed DbCommand (185ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Appointments] ([AppointmentDate], [DoctorId], [PatientId], [Reason], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-09-16 21:13:03.659 +03:00 [DBG] The foreign key property 'Appointment.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-09-16 21:13:03.670 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:13:03.677 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 58ms reading results.
2025-09-16 21:13:03.678 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:03.683 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (4ms).
2025-09-16 21:13:03.693 +03:00 [DBG] An entity of type 'Appointment' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:03.694 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 21:13:03.695 +03:00 [INF] Appointment scheduled: PatientId=2, DoctorId=2, Date="2025-09-16T18:04:38.2870000Z"
2025-09-16 21:13:03.700 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 21:13:03.702 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 21:13:03.702 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 21:13:03.702 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 21:13:03.704 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 21:13:03.704 +03:00 [INF] Executing CreatedAtActionResult, writing value of type 'MedicalApp.BL.DTOs.AppointmentDTOs.AppointmentDTO'.
2025-09-16 21:13:03.721 +03:00 [DBG] Found the endpoints ["MedicalApp.API.Controllers.AppointmentController.GetById (MedicalApp.API)"] for address (id=[1],action=[GetById],controller=[Appointment])
2025-09-16 21:13:03.724 +03:00 [DBG] Successfully processed template api/Appointment/{id:int} for MedicalApp.API.Controllers.AppointmentController.GetById (MedicalApp.API) resulting in /api/Appointment/1 and 
2025-09-16 21:13:03.725 +03:00 [DBG] Link generation succeeded for endpoints ["MedicalApp.API.Controllers.AppointmentController.GetById (MedicalApp.API)"] with result /api/Appointment/1
2025-09-16 21:13:03.749 +03:00 [INF] Executed action MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API) in 4463.1513ms
2025-09-16 21:13:03.749 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AppointmentController.CreateAppointment (MedicalApp.API)'
2025-09-16 21:13:03.749 +03:00 [DBG] Connection ID "17726168134940885096" disconnecting.
2025-09-16 21:13:03.752 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 21:13:03.758 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:03.760 +03:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-09-16 21:13:03.760 +03:00 [INF] Request finished HTTP/2 POST https://localhost:44358/api/Appointment/schedule-appointment - 201 null application/json; charset=utf-8 4820.903ms
2025-09-16 21:13:14.423 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Appointment/doctor/2/appointments - null null
2025-09-16 21:13:14.425 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/doctor/2/appointments'
2025-09-16 21:13:14.425 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.GetDoctorAppointments (MedicalApp.API)' with route pattern 'api/Appointment/doctor/{doctorId:int}/appointments' is valid for the request path '/api/Appointment/doctor/2/appointments'
2025-09-16 21:13:14.426 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.GetDoctorAppointments (MedicalApp.API)'
2025-09-16 21:13:14.427 +03:00 [DBG] Successfully validated the token.
2025-09-16 21:13:14.427 +03:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-09-16 21:13:14.429 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Doctor)
2025-09-16 21:13:14.434 +03:00 [INF] AuthenticationScheme: Bearer was forbidden.
2025-09-16 21:13:14.437 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Appointment/doctor/2/appointments - 403 null null 13.7333ms
2025-09-16 21:13:14.437 +03:00 [DBG] Connection ID "17365880169046212712" disconnecting.
2025-09-16 21:13:30.753 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Appointment/patient/2/appointments - null null
2025-09-16 21:13:30.753 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/patient/2/appointments'
2025-09-16 21:13:30.753 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API)' with route pattern 'api/Appointment/patient/{patientId:int}/appointments' is valid for the request path '/api/Appointment/patient/2/appointments'
2025-09-16 21:13:30.754 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API)'
2025-09-16 21:13:30.756 +03:00 [DBG] Successfully validated the token.
2025-09-16 21:13:30.756 +03:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-09-16 21:13:30.758 +03:00 [DBG] Authorization was successful.
2025-09-16 21:13:30.760 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API)'
2025-09-16 21:13:30.768 +03:00 [INF] Route matched with {action = "GetPatientAppointments", controller = "Appointment"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetPatientAppointments(Int32) on controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API).
2025-09-16 21:13:30.768 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 21:13:30.768 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 21:13:30.768 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 21:13:30.768 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 21:13:30.769 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 21:13:30.769 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:13:30.771 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:13:30.772 +03:00 [DBG] Attempting to bind parameter 'patientId' of type 'System.Int32' ...
2025-09-16 21:13:30.772 +03:00 [DBG] Attempting to bind parameter 'patientId' of type 'System.Int32' using the name 'patientId' in request data ...
2025-09-16 21:13:30.773 +03:00 [DBG] Done attempting to bind parameter 'patientId' of type 'System.Int32'.
2025-09-16 21:13:30.773 +03:00 [DBG] Done attempting to bind parameter 'patientId' of type 'System.Int32'.
2025-09-16 21:13:30.774 +03:00 [DBG] Attempting to validate the bound parameter 'patientId' of type 'System.Int32' ...
2025-09-16 21:13:30.774 +03:00 [DBG] Done attempting to validate the bound parameter 'patientId' of type 'System.Int32'.
2025-09-16 21:13:30.850 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 21:13:30.903 +03:00 [DBG] Compiling query expression: 
'DbSet<Appointment>()
    .Where(a => a.PatientId == __patientId_0)'
2025-09-16 21:13:31.581 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Appointment>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Appointment.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Appointment.AppointmentDate (DateTime) Required, 1], [Property: Appointment.DoctorId (int) Required FK Index, 2], [Property: Appointment.PatientId (int) Required FK Index, 3], [Property: Appointment.Reason (string) Required, 4], [Property: Appointment.Status (Status) Required, 5] }
        SELECT a.Id, a.AppointmentDate, a.DoctorId, a.PatientId, a.Reason, a.Status
        FROM Appointments AS a
        WHERE a.PatientId == @__patientId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Appointment.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Appointment.AppointmentDate (DateTime) Required, 1], [Property: Appointment.DoctorId (int) Required FK Index, 2], [Property: Appointment.PatientId (int) Required FK Index, 3], [Property: Appointment.Reason (string) Required, 4], [Property: Appointment.Status (Status) Required, 5] }
        SELECT a.Id, a.AppointmentDate, a.DoctorId, a.PatientId, a.Reason, a.Status
        FROM Appointments AS a
        WHERE a.PatientId == @__patientId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Appointment entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Appointment instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Appointment);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Appointment.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Appointment)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")]: 
                        {
                            return (Appointment)
                            {
                                AppointmentProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (AppointmentProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AppointmentDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<DoctorId>k__BackingField = dataReader.GetInt32(2);
                                instance.<PatientId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Reason>k__BackingField = dataReader.GetString(4);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<Status, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Appointment.Status (Status) Required | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Appointment)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-09-16 21:13:31.636 +03:00 [DBG] Creating DbConnection.
2025-09-16 21:13:31.637 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 21:13:31.637 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:31.638 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:31.639 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:13:31.639 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:31.639 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:31.639 +03:00 [DBG] Executing DbCommand [Parameters=[@__patientId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AppointmentDate], [a].[DoctorId], [a].[PatientId], [a].[Reason], [a].[Status]
FROM [Appointments] AS [a]
WHERE [a].[PatientId] = @__patientId_0
2025-09-16 21:13:31.799 +03:00 [INF] Executed DbCommand (159ms) [Parameters=[@__patientId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AppointmentDate], [a].[DoctorId], [a].[PatientId], [a].[Reason], [a].[Status]
FROM [Appointments] AS [a]
WHERE [a].[PatientId] = @__patientId_0
2025-09-16 21:13:31.819 +03:00 [DBG] Context 'AppDbContext' started tracking 'Appointment' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:31.820 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:13:31.820 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 21ms reading results.
2025-09-16 21:13:31.820 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:31.820 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:13:31.861 +03:00 [DBG] The navigation 'AppointmentProxy.Doctor' is being lazy-loaded.
2025-09-16 21:13:31.886 +03:00 [DBG] Compiling query expression: 
'DbSet<Doctor>()
    .Where(e => EF.Property<int>(e, "Id") == __p_0)
    .AsTracking()
    .FirstOrDefault()'
2025-09-16 21:13:31.990 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Doctor>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Doctor.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Doctor.Specialization (string) Required, 1], [Property: Doctor.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) d.Id, d.Specialization, d.UserId
        FROM Doctors AS d
        WHERE d.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Doctor entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Doctor instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Doctor);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Doctor.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Doctor)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]: 
                        {
                            return (Doctor)
                            {
                                DoctorProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (DoctorProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Specialization>k__BackingField = dataReader.GetString(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Doctor | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Doctor")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Doctor)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 21:13:32.000 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.000 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.000 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:13:32.000 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:32.001 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:32.001 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 21:13:32.033 +03:00 [INF] Executed DbCommand (32ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 21:13:32.052 +03:00 [DBG] The navigation 'Appointment.Doctor' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:32.054 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:32.070 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.070 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 37ms reading results.
2025-09-16 21:13:32.070 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.070 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:13:32.087 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 21:13:32.091 +03:00 [DBG] Compiling query expression: 
'DbSet<ApplicationUser>()
    .Where(e => EF.Property<string>(e, "Id") == __p_0)
    .AsTracking()
    .FirstOrDefault()'
2025-09-16 21:13:32.188 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<ApplicationUser>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: ApplicationUser.Id (string) Required PK AfterSave:Throw, 0], [Property: ApplicationUser.AccessFailedCount (int) Required, 1], [Property: ApplicationUser.ConcurrencyStamp (string) Concurrency, 2], [Property: ApplicationUser.Email (string) MaxLength(256), 3], [Property: ApplicationUser.EmailConfirmed (bool) Required, 4], [Property: ApplicationUser.FirstName (string) Required, 5], [Property: ApplicationUser.LastName (string) Required, 6], [Property: ApplicationUser.LockoutEnabled (bool) Required, 7], [Property: ApplicationUser.LockoutEnd (DateTimeOffset?), 8], [Property: ApplicationUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: ApplicationUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: ApplicationUser.PasswordHash (string), 11], [Property: ApplicationUser.PhoneNumber (string), 12], [Property: ApplicationUser.PhoneNumberConfirmed (bool) Required, 13], [Property: ApplicationUser.SecurityStamp (string), 14], [Property: ApplicationUser.TwoFactorEnabled (bool) Required, 15], [Property: ApplicationUser.UserName (string) MaxLength(256), 16] }
        SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
        FROM AspNetUsers AS a
        WHERE a.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        ApplicationUser entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            ApplicationUser instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(ApplicationUser);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: ApplicationUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (ApplicationUser)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]: 
                        {
                            return (ApplicationUser)
                            {
                                ApplicationUserProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (ApplicationUserProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetString(0);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                instance.<LastName>k__BackingField = dataReader.GetString(6);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: ApplicationUser | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.ApplicationUser")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(ApplicationUser)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 21:13:32.218 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.219 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.219 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:13:32.219 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:32.219 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:32.219 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:13:32.281 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:13:32.295 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:32.296 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:32.321 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.321 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 40ms reading results.
2025-09-16 21:13:32.321 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.322 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:13:32.334 +03:00 [DBG] The navigation 'AppointmentProxy.Patient' is being lazy-loaded.
2025-09-16 21:13:32.335 +03:00 [DBG] Compiling query expression: 
'DbSet<Patient>()
    .Where(e => EF.Property<int>(e, "Id") == __p_0)
    .AsTracking()
    .FirstOrDefault()'
2025-09-16 21:13:32.345 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Patient>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.UserId
        FROM Patients AS p
        WHERE p.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Patient.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Patient.DateOfBirth (DateTime) Required, 1], [Property: Patient.UserId (string) Required FK Index, 2] }
        SELECT TOP(1) p.Id, p.DateOfBirth, p.UserId
        FROM Patients AS p
        WHERE p.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Patient entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Patient instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Patient);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Patient.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Patient)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]: 
                        {
                            return (Patient)
                            {
                                PatientProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (PatientProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<DateOfBirth>k__BackingField = dataReader.GetDateTime(1);
                                instance.<UserId>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Patient | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Patient")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Patient)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 21:13:32.355 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.356 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.356 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:13:32.356 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:32.356 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:32.357 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 21:13:32.363 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 21:13:32.367 +03:00 [DBG] The navigation 'Appointment.Patient' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:32.367 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:32.373 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.373 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 9ms reading results.
2025-09-16 21:13:32.373 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.373 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:13:32.380 +03:00 [DBG] The navigation 'PatientProxy.User' is being lazy-loaded.
2025-09-16 21:13:32.405 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.405 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.405 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:13:32.405 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:32.405 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:32.405 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:13:32.410 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:13:32.412 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:32.412 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:32.412 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.412 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 2ms reading results.
2025-09-16 21:13:32.413 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.413 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:13:32.414 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 21:13:32.414 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 21:13:32.414 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 21:13:32.414 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 21:13:32.415 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 21:13:32.415 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MedicalApp.BL.DTOs.AppointmentDTOs.ReadAppointmentDTO, MedicalApp.BL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-09-16 21:13:32.429 +03:00 [INF] Executed action MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API) in 1660.2746ms
2025-09-16 21:13:32.429 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API)'
2025-09-16 21:13:32.430 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 21:13:32.432 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:32.432 +03:00 [DBG] Connection ID "17726168134940885098" disconnecting.
2025-09-16 21:13:32.432 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 21:13:32.434 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Appointment/patient/2/appointments - 200 null application/json; charset=utf-8 1680.5794ms
2025-09-16 21:13:58.996 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Appointment/1 - null null
2025-09-16 21:13:58.997 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/1'
2025-09-16 21:13:58.997 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.GetById (MedicalApp.API)' with route pattern 'api/Appointment/{id:int}' is valid for the request path '/api/Appointment/1'
2025-09-16 21:13:58.997 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.GetById (MedicalApp.API)'
2025-09-16 21:13:58.998 +03:00 [DBG] Successfully validated the token.
2025-09-16 21:13:58.998 +03:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-09-16 21:13:58.999 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AppointmentController.GetById (MedicalApp.API)'
2025-09-16 21:13:59.002 +03:00 [INF] Route matched with {action = "GetById", controller = "Appointment"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetById(Int32) on controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API).
2025-09-16 21:13:59.003 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 21:13:59.003 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 21:13:59.003 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 21:13:59.003 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 21:13:59.004 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 21:13:59.004 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:13:59.013 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:13:59.017 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 21:13:59.018 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 21:13:59.018 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 21:13:59.018 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 21:13:59.018 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 21:13:59.023 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 21:13:59.056 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 21:13:59.066 +03:00 [DBG] Compiling query expression: 
'DbSet<Appointment>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-09-16 21:13:59.093 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Appointment>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Appointment.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Appointment.AppointmentDate (DateTime) Required, 1], [Property: Appointment.DoctorId (int) Required FK Index, 2], [Property: Appointment.PatientId (int) Required FK Index, 3], [Property: Appointment.Reason (string) Required, 4], [Property: Appointment.Status (Status) Required, 5] }
        SELECT TOP(1) a.Id, a.AppointmentDate, a.DoctorId, a.PatientId, a.Reason, a.Status
        FROM Appointments AS a
        WHERE a.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Appointment.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Appointment.AppointmentDate (DateTime) Required, 1], [Property: Appointment.DoctorId (int) Required FK Index, 2], [Property: Appointment.PatientId (int) Required FK Index, 3], [Property: Appointment.Reason (string) Required, 4], [Property: Appointment.Status (Status) Required, 5] }
        SELECT TOP(1) a.Id, a.AppointmentDate, a.DoctorId, a.PatientId, a.Reason, a.Status
        FROM Appointments AS a
        WHERE a.Id == @__p_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Appointment entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Appointment instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Appointment);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Appointment.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Appointment)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")]: 
                        {
                            return (Appointment)
                            {
                                AppointmentProxy instance;
                                DbContext namelessParameter{2};
                                IEntityType namelessParameter{3};
                                ILazyLoader namelessParameter{4};
                                namelessParameter{2} = materializationContext1.Context;
                                namelessParameter{3} = (IEntityType)ParameterBindingInfo.StructuralType;
                                namelessParameter{4} = InfrastructureExtensions.GetService<ILazyLoader>((IInfrastructure<IServiceProvider>)materializationContext1.Context);
                                instance = (AppointmentProxy)ProxyFactory.CreateLazyLoadingProxy(
                                    context: namelessParameter{2}, 
                                    entityType: namelessParameter{3}, 
                                    loader: namelessParameter{4}, 
                                    constructorArguments: new object[]{ });
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AppointmentDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<DoctorId>k__BackingField = dataReader.GetInt32(2);
                                instance.<PatientId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Reason>k__BackingField = dataReader.GetString(4);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<Status, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Appointment.Status (Status) Required | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")]) : default(void);
                                (namelessParameter{2} is IInjectableService) ? ((IInjectableService)namelessParameter{2}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")]) : default(void);
                                (namelessParameter{3} is IInjectableService) ? ((IInjectableService)namelessParameter{3}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")]) : default(void);
                                (namelessParameter{4} is IInjectableService) ? ((IInjectableService)namelessParameter{4}).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Appointment | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("MedicalApp.DA.Models.Appointment")]) : default(void);
                                return instance;
                            };
                        }
                    default: 
                        default(Appointment)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: MedicalApp.DA.Models.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-09-16 21:13:59.100 +03:00 [DBG] Creating DbConnection.
2025-09-16 21:13:59.100 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 21:13:59.100 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.100 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.100 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:13:59.100 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:59.100 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:59.101 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AppointmentDate], [a].[DoctorId], [a].[PatientId], [a].[Reason], [a].[Status]
FROM [Appointments] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:13:59.146 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AppointmentDate], [a].[DoctorId], [a].[PatientId], [a].[Reason], [a].[Status]
FROM [Appointments] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:13:59.146 +03:00 [DBG] Context 'AppDbContext' started tracking 'Appointment' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:59.147 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.147 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 21:13:59.147 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.147 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:13:59.151 +03:00 [DBG] The navigation 'AppointmentProxy.Doctor' is being lazy-loaded.
2025-09-16 21:13:59.152 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.152 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.152 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:13:59.152 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:59.152 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:59.152 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 21:13:59.162 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 21:13:59.163 +03:00 [DBG] The navigation 'Appointment.Doctor' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:59.163 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:59.163 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.163 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 21:13:59.163 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.163 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:13:59.163 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 21:13:59.164 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.164 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.164 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:13:59.164 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:59.164 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:59.164 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:13:59.169 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:13:59.170 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:59.170 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:59.170 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.170 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 21:13:59.170 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.170 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:13:59.171 +03:00 [DBG] The navigation 'AppointmentProxy.Patient' is being lazy-loaded.
2025-09-16 21:13:59.173 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.173 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.173 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:13:59.173 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:59.174 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:59.174 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 21:13:59.181 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 21:13:59.182 +03:00 [DBG] The navigation 'Appointment.Patient' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:59.182 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:59.182 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.182 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 21:13:59.182 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.182 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:13:59.183 +03:00 [DBG] The navigation 'PatientProxy.User' is being lazy-loaded.
2025-09-16 21:13:59.183 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.183 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.183 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:13:59.183 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:59.183 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:13:59.184 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:13:59.191 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:13:59.191 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:59.192 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:13:59.192 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.192 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 21:13:59.192 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.192 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:13:59.192 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 21:13:59.193 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 21:13:59.193 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 21:13:59.193 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 21:13:59.193 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 21:13:59.193 +03:00 [INF] Executing OkObjectResult, writing value of type 'MedicalApp.BL.DTOs.AppointmentDTOs.ReadAppointmentDTO'.
2025-09-16 21:13:59.193 +03:00 [INF] Executed action MedicalApp.API.Controllers.AppointmentController.GetById (MedicalApp.API) in 189.576ms
2025-09-16 21:13:59.193 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AppointmentController.GetById (MedicalApp.API)'
2025-09-16 21:13:59.194 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 21:13:59.194 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:13:59.194 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 21:13:59.194 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Appointment/1 - 200 null application/json; charset=utf-8 197.8998ms
2025-09-16 21:14:11.076 +03:00 [INF] Request starting HTTP/2 PATCH https://localhost:44358/api/Appointment/cancel/1 - null null
2025-09-16 21:14:11.076 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/cancel/1'
2025-09-16 21:14:11.077 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.CancelAppointment (MedicalApp.API)' with route pattern 'api/Appointment/cancel/{id:int}' is valid for the request path '/api/Appointment/cancel/1'
2025-09-16 21:14:11.077 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.CancelAppointment (MedicalApp.API)'
2025-09-16 21:14:11.077 +03:00 [DBG] Successfully validated the token.
2025-09-16 21:14:11.077 +03:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-09-16 21:14:11.077 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AppointmentController.CancelAppointment (MedicalApp.API)'
2025-09-16 21:14:11.080 +03:00 [INF] Route matched with {action = "CancelAppointment", controller = "Appointment"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CancelAppointment(Int32) on controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API).
2025-09-16 21:14:11.080 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 21:14:11.080 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 21:14:11.080 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 21:14:11.080 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 21:14:11.080 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 21:14:11.080 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:14:11.081 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:14:11.081 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-09-16 21:14:11.081 +03:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-09-16 21:14:11.081 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 21:14:11.081 +03:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-09-16 21:14:11.081 +03:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-09-16 21:14:11.081 +03:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-09-16 21:14:11.092 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 21:14:11.092 +03:00 [DBG] Creating DbConnection.
2025-09-16 21:14:11.093 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 21:14:11.093 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:11.093 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:11.093 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:14:11.093 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:11.093 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:11.093 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AppointmentDate], [a].[DoctorId], [a].[PatientId], [a].[Reason], [a].[Status]
FROM [Appointments] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:14:11.100 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AppointmentDate], [a].[DoctorId], [a].[PatientId], [a].[Reason], [a].[Status]
FROM [Appointments] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:14:11.100 +03:00 [DBG] Context 'AppDbContext' started tracking 'Appointment' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:11.100 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:14:11.100 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 21:14:11.100 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:11.100 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:14:11.102 +03:00 [DBG] An entity of type 'Appointment' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:11.102 +03:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-09-16 21:14:11.102 +03:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-09-16 21:14:11.103 +03:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-09-16 21:14:11.110 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:11.110 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:11.110 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:14:11.110 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:11.110 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:11.111 +03:00 [DBG] Executing DbCommand [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Appointments] SET [AppointmentDate] = @p0, [DoctorId] = @p1, [PatientId] = @p2, [Reason] = @p3, [Status] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2025-09-16 21:14:11.139 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Appointments] SET [AppointmentDate] = @p0, [DoctorId] = @p1, [PatientId] = @p2, [Reason] = @p3, [Status] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2025-09-16 21:14:11.140 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:14:11.140 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 1ms reading results.
2025-09-16 21:14:11.140 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:11.140 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:14:11.140 +03:00 [DBG] An entity of type 'Appointment' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:11.141 +03:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-09-16 21:14:11.141 +03:00 [INF] Appointment cancelled: AppointmentId=1, PatientId=2, DoctorId=2,Date="2025-09-16T18:04:38.2870000"
2025-09-16 21:14:11.142 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-09-16 21:14:11.142 +03:00 [INF] Executed action MedicalApp.API.Controllers.AppointmentController.CancelAppointment (MedicalApp.API) in 61.5534ms
2025-09-16 21:14:11.142 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AppointmentController.CancelAppointment (MedicalApp.API)'
2025-09-16 21:14:11.142 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 21:14:11.142 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:11.142 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 21:14:11.142 +03:00 [INF] Request finished HTTP/2 PATCH https://localhost:44358/api/Appointment/cancel/1 - 204 null null 65.9165ms
2025-09-16 21:14:28.575 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/api/Appointment/patient/2/appointments - null null
2025-09-16 21:14:28.575 +03:00 [DBG] 1 candidate(s) found for the request path '/api/Appointment/patient/2/appointments'
2025-09-16 21:14:28.575 +03:00 [DBG] Endpoint 'MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API)' with route pattern 'api/Appointment/patient/{patientId:int}/appointments' is valid for the request path '/api/Appointment/patient/2/appointments'
2025-09-16 21:14:28.575 +03:00 [DBG] Request matched endpoint 'MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API)'
2025-09-16 21:14:28.576 +03:00 [DBG] Successfully validated the token.
2025-09-16 21:14:28.576 +03:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-09-16 21:14:28.577 +03:00 [DBG] Authorization was successful.
2025-09-16 21:14:28.577 +03:00 [INF] Executing endpoint 'MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API)'
2025-09-16 21:14:28.577 +03:00 [INF] Route matched with {action = "GetPatientAppointments", controller = "Appointment"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetPatientAppointments(Int32) on controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API).
2025-09-16 21:14:28.577 +03:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-09-16 21:14:28.577 +03:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-09-16 21:14:28.577 +03:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-09-16 21:14:28.577 +03:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-09-16 21:14:28.577 +03:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-09-16 21:14:28.577 +03:00 [DBG] Executing controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:14:28.578 +03:00 [DBG] Executed controller factory for controller MedicalApp.API.Controllers.AppointmentController (MedicalApp.API)
2025-09-16 21:14:28.578 +03:00 [DBG] Attempting to bind parameter 'patientId' of type 'System.Int32' ...
2025-09-16 21:14:28.578 +03:00 [DBG] Attempting to bind parameter 'patientId' of type 'System.Int32' using the name 'patientId' in request data ...
2025-09-16 21:14:28.578 +03:00 [DBG] Done attempting to bind parameter 'patientId' of type 'System.Int32'.
2025-09-16 21:14:28.578 +03:00 [DBG] Done attempting to bind parameter 'patientId' of type 'System.Int32'.
2025-09-16 21:14:28.578 +03:00 [DBG] Attempting to validate the bound parameter 'patientId' of type 'System.Int32' ...
2025-09-16 21:14:28.578 +03:00 [DBG] Done attempting to validate the bound parameter 'patientId' of type 'System.Int32'.
2025-09-16 21:14:28.579 +03:00 [DBG] Entity Framework Core 9.0.9 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.9' with options: using lazy loading proxies EngineType=SqlServer 
2025-09-16 21:14:28.581 +03:00 [DBG] Creating DbConnection.
2025-09-16 21:14:28.582 +03:00 [DBG] Created DbConnection. (0ms).
2025-09-16 21:14:28.582 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.583 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.583 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:14:28.583 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:28.583 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:28.583 +03:00 [DBG] Executing DbCommand [Parameters=[@__patientId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AppointmentDate], [a].[DoctorId], [a].[PatientId], [a].[Reason], [a].[Status]
FROM [Appointments] AS [a]
WHERE [a].[PatientId] = @__patientId_0
2025-09-16 21:14:28.592 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__patientId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AppointmentDate], [a].[DoctorId], [a].[PatientId], [a].[Reason], [a].[Status]
FROM [Appointments] AS [a]
WHERE [a].[PatientId] = @__patientId_0
2025-09-16 21:14:28.592 +03:00 [DBG] Context 'AppDbContext' started tracking 'Appointment' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:28.592 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.592 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 21:14:28.592 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.593 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:14:28.594 +03:00 [DBG] The navigation 'AppointmentProxy.Doctor' is being lazy-loaded.
2025-09-16 21:14:28.594 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.594 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.594 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:14:28.595 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:28.595 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:28.595 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 21:14:28.611 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[Specialization], [d].[UserId]
FROM [Doctors] AS [d]
WHERE [d].[Id] = @__p_0
2025-09-16 21:14:28.612 +03:00 [DBG] The navigation 'Appointment.Doctor' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:28.612 +03:00 [DBG] Context 'AppDbContext' started tracking 'Doctor' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:28.612 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.612 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 21:14:28.612 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.612 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:14:28.612 +03:00 [DBG] The navigation 'DoctorProxy.User' is being lazy-loaded.
2025-09-16 21:14:28.613 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.613 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.613 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:14:28.613 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:28.613 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:28.613 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:14:28.650 +03:00 [INF] Executed DbCommand (37ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:14:28.651 +03:00 [DBG] The navigation 'Doctor.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:28.651 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:28.651 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.651 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 21:14:28.651 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.651 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:14:28.652 +03:00 [DBG] The navigation 'AppointmentProxy.Patient' is being lazy-loaded.
2025-09-16 21:14:28.652 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.652 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.652 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:14:28.652 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:28.652 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:28.653 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 21:14:28.657 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[DateOfBirth], [p].[UserId]
FROM [Patients] AS [p]
WHERE [p].[Id] = @__p_0
2025-09-16 21:14:28.657 +03:00 [DBG] The navigation 'Appointment.Patient' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:28.658 +03:00 [DBG] Context 'AppDbContext' started tracking 'Patient' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:28.658 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.658 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 21:14:28.658 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.658 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:14:28.658 +03:00 [DBG] The navigation 'PatientProxy.User' is being lazy-loaded.
2025-09-16 21:14:28.659 +03:00 [DBG] Opening connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.659 +03:00 [DBG] Opened connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.659 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-09-16 21:14:28.659 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:28.659 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-09-16 21:14:28.659 +03:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:14:28.661 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-09-16 21:14:28.662 +03:00 [DBG] The navigation 'Patient.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:28.662 +03:00 [DBG] Context 'AppDbContext' started tracking 'ApplicationUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-09-16 21:14:28.662 +03:00 [DBG] Closing data reader to 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.662 +03:00 [DBG] A data reader for 'MedicalAppDB' on server '.' is being disposed after spending 0ms reading results.
2025-09-16 21:14:28.662 +03:00 [DBG] Closing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.662 +03:00 [DBG] Closed connection to database 'MedicalAppDB' on server '.' (0ms).
2025-09-16 21:14:28.663 +03:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-09-16 21:14:28.663 +03:00 [DBG] No information found on request to perform content negotiation.
2025-09-16 21:14:28.663 +03:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-09-16 21:14:28.663 +03:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-09-16 21:14:28.663 +03:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-09-16 21:14:28.663 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MedicalApp.BL.DTOs.AppointmentDTOs.ReadAppointmentDTO, MedicalApp.BL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-09-16 21:14:28.663 +03:00 [INF] Executed action MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API) in 86.1807ms
2025-09-16 21:14:28.664 +03:00 [INF] Executed endpoint 'MedicalApp.API.Controllers.AppointmentController.GetPatientAppointments (MedicalApp.API)'
2025-09-16 21:14:28.664 +03:00 [DBG] 'AppDbContext' disposed.
2025-09-16 21:14:28.664 +03:00 [DBG] Disposing connection to database 'MedicalAppDB' on server '.'.
2025-09-16 21:14:28.664 +03:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-09-16 21:14:28.664 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/api/Appointment/patient/2/appointments - 200 null application/json; charset=utf-8 89.3386ms
2025-09-16 21:17:50.526 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 21:17:50.658 +03:00 [DBG] Hosting starting
2025-09-16 21:17:50.694 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 21:17:50.727 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 21:17:50.736 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 21:17:50.741 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 21:17:50.748 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 21:17:50.772 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 21:17:50.777 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:17:50.781 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 21:17:50.783 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:17:50.805 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 21:17:50.812 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 21:17:50.818 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 21:17:50.819 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 21:17:50.926 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 21:17:50.928 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 21:17:50.933 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 21:17:50.933 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 21:17:50.933 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 21:17:50.933 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 21:17:50.944 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:17:50.944 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:17:50.961 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 21:17:51.063 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 21:17:51.063 +03:00 [INF] Hosting environment: Development
2025-09-16 21:17:51.063 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 21:17:51.064 +03:00 [DBG] Hosting started
2025-09-16 21:17:51.182 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 21:17:51.184 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 21:17:51.236 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 21:17:51.236 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 21:17:51.238 +03:00 [DBG] Connection ID "18086456113720460051" disconnecting.
2025-09-16 21:17:51.241 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 282.5478ms
2025-09-16 21:17:51.277 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 21:17:51.278 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 21:17:51.284 +03:00 [DBG] Connection ID "18086456105130527082" disconnecting.
2025-09-16 21:17:51.284 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 4.0423ms
2025-09-16 21:17:51.373 +03:00 [DBG] Connection ID "18302628900129210613" disconnecting.
2025-09-16 21:17:51.394 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 117.2311ms
2025-09-16 21:17:52.322 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 21:17:52.585 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 263.3575ms
2025-09-16 21:23:09.112 +03:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-09-16 21:23:09.245 +03:00 [DBG] Hosting starting
2025-09-16 21:23:09.261 +03:00 [INF] User profile is available. Using 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-09-16 21:23:09.275 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-617625eb-1cdd-4dd0-affa-819c8cea976b.xml'.
2025-09-16 21:23:09.290 +03:00 [DBG] Reading data from file 'C:\Users\Al-Ahram\AppData\Local\ASP.NET\DataProtection-Keys\key-da936a7d-2203-4320-8300-227c18d6bf64.xml'.
2025-09-16 21:23:09.294 +03:00 [DBG] Found key {617625eb-1cdd-4dd0-affa-819c8cea976b}.
2025-09-16 21:23:09.301 +03:00 [DBG] Found key {da936a7d-2203-4320-8300-227c18d6bf64}.
2025-09-16 21:23:09.307 +03:00 [DBG] Considering key {617625eb-1cdd-4dd0-affa-819c8cea976b} with expiration date 2025-09-24 09:32:43Z as default key.
2025-09-16 21:23:09.311 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:23:09.314 +03:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-09-16 21:23:09.316 +03:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-09-16 21:23:09.322 +03:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-09-16 21:23:09.325 +03:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-09-16 21:23:09.328 +03:00 [DBG] Using key {617625eb-1cdd-4dd0-affa-819c8cea976b} as the default key.
2025-09-16 21:23:09.329 +03:00 [DBG] Key ring with default key {617625eb-1cdd-4dd0-affa-819c8cea976b} was loaded during application startup.
2025-09-16 21:23:09.450 +03:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-09-16 21:23:09.452 +03:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-09-16 21:23:09.457 +03:00 [DBG] Loaded hosting startup assembly MedicalApp.API
2025-09-16 21:23:09.457 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-09-16 21:23:09.458 +03:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-09-16 21:23:09.458 +03:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-09-16 21:23:09.470 +03:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:23:09.470 +03:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-09-16 21:23:09.490 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/index.html - null null
2025-09-16 21:23:09.656 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-16 21:23:09.656 +03:00 [INF] Hosting environment: Development
2025-09-16 21:23:09.657 +03:00 [INF] Content root path: G:\ITI\AfterGrad\Ramyro-Task\Backend\MedicalApp.API
2025-09-16 21:23:09.657 +03:00 [DBG] Hosting started
2025-09-16 21:23:09.924 +03:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-09-16 21:23:09.926 +03:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-09-16 21:23:09.954 +03:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-09-16 21:23:09.955 +03:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-09-16 21:23:09.957 +03:00 [DBG] Connection ID "17582052951159996953" disconnecting.
2025-09-16 21:23:09.960 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/index.html - 200 null text/html;charset=utf-8 476.8748ms
2025-09-16 21:23:09.983 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_vs/browserLink - null null
2025-09-16 21:23:09.983 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - null null
2025-09-16 21:23:09.988 +03:00 [DBG] Connection ID "18374686494167139917" disconnecting.
2025-09-16 21:23:09.989 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_framework/aspnetcore-browser-refresh.js - 200 13780 application/javascript; charset=utf-8 4.8319ms
2025-09-16 21:23:10.024 +03:00 [DBG] Connection ID "17582052951159996955" disconnecting.
2025-09-16 21:23:10.026 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/_vs/browserLink - 200 null text/javascript; charset=UTF-8 42.1509ms
2025-09-16 21:23:10.247 +03:00 [INF] Request starting HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - null null
2025-09-16 21:23:10.413 +03:00 [INF] Request finished HTTP/2 GET https://localhost:44358/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 166.576ms
2025-09-16 21:23:10.413 +03:00 [DBG] Connection ID "18374686494167139919" disconnecting.
